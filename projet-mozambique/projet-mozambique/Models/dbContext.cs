//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("MVPModel", "FK_EVEN_CATE", "CATEGORIEEVENEMENT", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.CATEGORIEEVENEMENT), "EVENEMENT", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.EVENEMENT), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_CHOIXSOND_SOND", "SONDAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SONDAGE), "CHOIXSONDAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.CHOIXSONDAGE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.MESSAGEPRIVE), "DESTINATAIREMESSAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.DESTINATAIREMESSAGE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_DESTMESS_UTIL", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "DESTINATAIREMESSAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.DESTINATAIREMESSAGE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_UTIL_ECOLE", "ECOLE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.ECOLE), "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.UTILISATEUR), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_EVEN_UTIl", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "EVENEMENT", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.EVENEMENT), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_FILDISC_FORUM", "FORUM", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(projet_mozambique.Models.FORUM), "FILDISCUSSION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.FILDISCUSSION), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_MESS_FILDISC", "FILDISCUSSION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.FILDISCUSSION), "MESSAGEFORUM", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.MESSAGEFORUM), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_FORUM_SECT", "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SECTEUR), "FORUM", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.FORUM), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_MESS_UTIL", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "MESSAGEFORUM", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.MESSAGEFORUM), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_MESSPRIV_EXPED", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "MESSAGEPRIVE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.MESSAGEPRIVE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_PIECEJOINTE_MESS", "MESSAGEPRIVE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.MESSAGEPRIVE), "PIECEJOINTE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.PIECEJOINTE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_PUB_SECT", "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SECTEUR), "PUBLICATION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.PUBLICATION), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_PUB_SUJET", "SUJETPUBLICATION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SUJETPUBLICATION), "PUBLICATION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.PUBLICATION), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_PUB_UTIL", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "PUBLICATION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.PUBLICATION), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_SOND_SECT", "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SECTEUR), "SONDAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.SONDAGE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_UTILSECT_SECT", "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.SECTEUR), "UTILISATEURSECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.UTILISATEURSECTEUR), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_SOND_CREATEUR", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "SONDAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.SONDAGE), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "FK_UTILSECT_UTIL", "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(projet_mozambique.Models.UTILISATEUR), "UTILISATEURSECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.UTILISATEURSECTEUR), true)]
[assembly: EdmRelationshipAttribute("MVPModel", "ECOLESECTEUR", "ECOLE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.ECOLE), "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.SECTEUR))]
[assembly: EdmRelationshipAttribute("MVPModel", "EVENEMENTSECTEUR", "EVENEMENT", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.EVENEMENT), "SECTEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.SECTEUR))]
[assembly: EdmRelationshipAttribute("MVPModel", "MOTCLEPUBLICATION", "MOTCLE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.MOTCLE), "PUBLICATION", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.PUBLICATION))]
[assembly: EdmRelationshipAttribute("MVPModel", "VOTESONDAGE", "CHOIXSONDAGE", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.CHOIXSONDAGE), "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.UTILISATEUR))]
[assembly: EdmRelationshipAttribute("MVPModel", "webpages_UsersInRoles", "webpages_Roles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.webpages_Roles), "UTILISATEUR", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projet_mozambique.Models.UTILISATEUR))]

#endregion

namespace projet_mozambique.Models
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet Entities à l'aide de la chaîne de connexion trouvée dans la section 'Entities' du fichier de configuration d'application.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet Entities.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet Entities.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<CATEGORIEEVENEMENT> CATEGORIEEVENEMENT
        {
            get
            {
                if ((_CATEGORIEEVENEMENT == null))
                {
                    _CATEGORIEEVENEMENT = base.CreateObjectSet<CATEGORIEEVENEMENT>("CATEGORIEEVENEMENT");
                }
                return _CATEGORIEEVENEMENT;
            }
        }
        private ObjectSet<CATEGORIEEVENEMENT> _CATEGORIEEVENEMENT;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<CHOIXSONDAGE> CHOIXSONDAGE
        {
            get
            {
                if ((_CHOIXSONDAGE == null))
                {
                    _CHOIXSONDAGE = base.CreateObjectSet<CHOIXSONDAGE>("CHOIXSONDAGE");
                }
                return _CHOIXSONDAGE;
            }
        }
        private ObjectSet<CHOIXSONDAGE> _CHOIXSONDAGE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<CONTENU> CONTENU
        {
            get
            {
                if ((_CONTENU == null))
                {
                    _CONTENU = base.CreateObjectSet<CONTENU>("CONTENU");
                }
                return _CONTENU;
            }
        }
        private ObjectSet<CONTENU> _CONTENU;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<DESTINATAIREMESSAGE> DESTINATAIREMESSAGE
        {
            get
            {
                if ((_DESTINATAIREMESSAGE == null))
                {
                    _DESTINATAIREMESSAGE = base.CreateObjectSet<DESTINATAIREMESSAGE>("DESTINATAIREMESSAGE");
                }
                return _DESTINATAIREMESSAGE;
            }
        }
        private ObjectSet<DESTINATAIREMESSAGE> _DESTINATAIREMESSAGE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<ECOLE> ECOLE
        {
            get
            {
                if ((_ECOLE == null))
                {
                    _ECOLE = base.CreateObjectSet<ECOLE>("ECOLE");
                }
                return _ECOLE;
            }
        }
        private ObjectSet<ECOLE> _ECOLE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<EVENEMENT> EVENEMENT
        {
            get
            {
                if ((_EVENEMENT == null))
                {
                    _EVENEMENT = base.CreateObjectSet<EVENEMENT>("EVENEMENT");
                }
                return _EVENEMENT;
            }
        }
        private ObjectSet<EVENEMENT> _EVENEMENT;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<FILDISCUSSION> FILDISCUSSION
        {
            get
            {
                if ((_FILDISCUSSION == null))
                {
                    _FILDISCUSSION = base.CreateObjectSet<FILDISCUSSION>("FILDISCUSSION");
                }
                return _FILDISCUSSION;
            }
        }
        private ObjectSet<FILDISCUSSION> _FILDISCUSSION;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<FORUM> FORUM
        {
            get
            {
                if ((_FORUM == null))
                {
                    _FORUM = base.CreateObjectSet<FORUM>("FORUM");
                }
                return _FORUM;
            }
        }
        private ObjectSet<FORUM> _FORUM;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<MESSAGEFORUM> MESSAGEFORUM
        {
            get
            {
                if ((_MESSAGEFORUM == null))
                {
                    _MESSAGEFORUM = base.CreateObjectSet<MESSAGEFORUM>("MESSAGEFORUM");
                }
                return _MESSAGEFORUM;
            }
        }
        private ObjectSet<MESSAGEFORUM> _MESSAGEFORUM;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<MESSAGEPRIVE> MESSAGEPRIVE
        {
            get
            {
                if ((_MESSAGEPRIVE == null))
                {
                    _MESSAGEPRIVE = base.CreateObjectSet<MESSAGEPRIVE>("MESSAGEPRIVE");
                }
                return _MESSAGEPRIVE;
            }
        }
        private ObjectSet<MESSAGEPRIVE> _MESSAGEPRIVE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<MOTCLE> MOTCLE
        {
            get
            {
                if ((_MOTCLE == null))
                {
                    _MOTCLE = base.CreateObjectSet<MOTCLE>("MOTCLE");
                }
                return _MOTCLE;
            }
        }
        private ObjectSet<MOTCLE> _MOTCLE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<NOUVELLE> NOUVELLE
        {
            get
            {
                if ((_NOUVELLE == null))
                {
                    _NOUVELLE = base.CreateObjectSet<NOUVELLE>("NOUVELLE");
                }
                return _NOUVELLE;
            }
        }
        private ObjectSet<NOUVELLE> _NOUVELLE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<PARTENAIRE> PARTENAIRE
        {
            get
            {
                if ((_PARTENAIRE == null))
                {
                    _PARTENAIRE = base.CreateObjectSet<PARTENAIRE>("PARTENAIRE");
                }
                return _PARTENAIRE;
            }
        }
        private ObjectSet<PARTENAIRE> _PARTENAIRE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<PIECEJOINTE> PIECEJOINTE
        {
            get
            {
                if ((_PIECEJOINTE == null))
                {
                    _PIECEJOINTE = base.CreateObjectSet<PIECEJOINTE>("PIECEJOINTE");
                }
                return _PIECEJOINTE;
            }
        }
        private ObjectSet<PIECEJOINTE> _PIECEJOINTE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<PUBLICATION> PUBLICATION
        {
            get
            {
                if ((_PUBLICATION == null))
                {
                    _PUBLICATION = base.CreateObjectSet<PUBLICATION>("PUBLICATION");
                }
                return _PUBLICATION;
            }
        }
        private ObjectSet<PUBLICATION> _PUBLICATION;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<SECTEUR> SECTEUR
        {
            get
            {
                if ((_SECTEUR == null))
                {
                    _SECTEUR = base.CreateObjectSet<SECTEUR>("SECTEUR");
                }
                return _SECTEUR;
            }
        }
        private ObjectSet<SECTEUR> _SECTEUR;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<SONDAGE> SONDAGE
        {
            get
            {
                if ((_SONDAGE == null))
                {
                    _SONDAGE = base.CreateObjectSet<SONDAGE>("SONDAGE");
                }
                return _SONDAGE;
            }
        }
        private ObjectSet<SONDAGE> _SONDAGE;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<SUJETPUBLICATION> SUJETPUBLICATION
        {
            get
            {
                if ((_SUJETPUBLICATION == null))
                {
                    _SUJETPUBLICATION = base.CreateObjectSet<SUJETPUBLICATION>("SUJETPUBLICATION");
                }
                return _SUJETPUBLICATION;
            }
        }
        private ObjectSet<SUJETPUBLICATION> _SUJETPUBLICATION;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<UTILISATEUR> UTILISATEUR
        {
            get
            {
                if ((_UTILISATEUR == null))
                {
                    _UTILISATEUR = base.CreateObjectSet<UTILISATEUR>("UTILISATEUR");
                }
                return _UTILISATEUR;
            }
        }
        private ObjectSet<UTILISATEUR> _UTILISATEUR;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<UTILISATEURSECTEUR> UTILISATEURSECTEUR
        {
            get
            {
                if ((_UTILISATEURSECTEUR == null))
                {
                    _UTILISATEURSECTEUR = base.CreateObjectSet<UTILISATEURSECTEUR>("UTILISATEURSECTEUR");
                }
                return _UTILISATEURSECTEUR;
            }
        }
        private ObjectSet<UTILISATEURSECTEUR> _UTILISATEURSECTEUR;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<webpages_Membership> webpages_Membership
        {
            get
            {
                if ((_webpages_Membership == null))
                {
                    _webpages_Membership = base.CreateObjectSet<webpages_Membership>("webpages_Membership");
                }
                return _webpages_Membership;
            }
        }
        private ObjectSet<webpages_Membership> _webpages_Membership;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<webpages_OAuthMembership> webpages_OAuthMembership
        {
            get
            {
                if ((_webpages_OAuthMembership == null))
                {
                    _webpages_OAuthMembership = base.CreateObjectSet<webpages_OAuthMembership>("webpages_OAuthMembership");
                }
                return _webpages_OAuthMembership;
            }
        }
        private ObjectSet<webpages_OAuthMembership> _webpages_OAuthMembership;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<webpages_Roles> webpages_Roles
        {
            get
            {
                if ((_webpages_Roles == null))
                {
                    _webpages_Roles = base.CreateObjectSet<webpages_Roles>("webpages_Roles");
                }
                return _webpages_Roles;
            }
        }
        private ObjectSet<webpages_Roles> _webpages_Roles;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet CATEGORIEEVENEMENT. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCATEGORIEEVENEMENT(CATEGORIEEVENEMENT cATEGORIEEVENEMENT)
        {
            base.AddObject("CATEGORIEEVENEMENT", cATEGORIEEVENEMENT);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet CHOIXSONDAGE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCHOIXSONDAGE(CHOIXSONDAGE cHOIXSONDAGE)
        {
            base.AddObject("CHOIXSONDAGE", cHOIXSONDAGE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet CONTENU. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCONTENU(CONTENU cONTENU)
        {
            base.AddObject("CONTENU", cONTENU);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet DESTINATAIREMESSAGE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToDESTINATAIREMESSAGE(DESTINATAIREMESSAGE dESTINATAIREMESSAGE)
        {
            base.AddObject("DESTINATAIREMESSAGE", dESTINATAIREMESSAGE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet ECOLE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToECOLE(ECOLE eCOLE)
        {
            base.AddObject("ECOLE", eCOLE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet EVENEMENT. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToEVENEMENT(EVENEMENT eVENEMENT)
        {
            base.AddObject("EVENEMENT", eVENEMENT);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet FILDISCUSSION. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToFILDISCUSSION(FILDISCUSSION fILDISCUSSION)
        {
            base.AddObject("FILDISCUSSION", fILDISCUSSION);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet FORUM. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToFORUM(FORUM fORUM)
        {
            base.AddObject("FORUM", fORUM);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet MESSAGEFORUM. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToMESSAGEFORUM(MESSAGEFORUM mESSAGEFORUM)
        {
            base.AddObject("MESSAGEFORUM", mESSAGEFORUM);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet MESSAGEPRIVE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToMESSAGEPRIVE(MESSAGEPRIVE mESSAGEPRIVE)
        {
            base.AddObject("MESSAGEPRIVE", mESSAGEPRIVE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet MOTCLE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToMOTCLE(MOTCLE mOTCLE)
        {
            base.AddObject("MOTCLE", mOTCLE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet NOUVELLE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToNOUVELLE(NOUVELLE nOUVELLE)
        {
            base.AddObject("NOUVELLE", nOUVELLE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet PARTENAIRE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToPARTENAIRE(PARTENAIRE pARTENAIRE)
        {
            base.AddObject("PARTENAIRE", pARTENAIRE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet PIECEJOINTE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToPIECEJOINTE(PIECEJOINTE pIECEJOINTE)
        {
            base.AddObject("PIECEJOINTE", pIECEJOINTE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet PUBLICATION. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToPUBLICATION(PUBLICATION pUBLICATION)
        {
            base.AddObject("PUBLICATION", pUBLICATION);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet SECTEUR. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToSECTEUR(SECTEUR sECTEUR)
        {
            base.AddObject("SECTEUR", sECTEUR);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet SONDAGE. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToSONDAGE(SONDAGE sONDAGE)
        {
            base.AddObject("SONDAGE", sONDAGE);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet SUJETPUBLICATION. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToSUJETPUBLICATION(SUJETPUBLICATION sUJETPUBLICATION)
        {
            base.AddObject("SUJETPUBLICATION", sUJETPUBLICATION);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet sysdiagrams. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet UTILISATEUR. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToUTILISATEUR(UTILISATEUR uTILISATEUR)
        {
            base.AddObject("UTILISATEUR", uTILISATEUR);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet UTILISATEURSECTEUR. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToUTILISATEURSECTEUR(UTILISATEURSECTEUR uTILISATEURSECTEUR)
        {
            base.AddObject("UTILISATEURSECTEUR", uTILISATEURSECTEUR);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet webpages_Membership. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTowebpages_Membership(webpages_Membership webpages_Membership)
        {
            base.AddObject("webpages_Membership", webpages_Membership);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet webpages_OAuthMembership. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTowebpages_OAuthMembership(webpages_OAuthMembership webpages_OAuthMembership)
        {
            base.AddObject("webpages_OAuthMembership", webpages_OAuthMembership);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet webpages_Roles. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTowebpages_Roles(webpages_Roles webpages_Roles)
        {
            base.AddObject("webpages_Roles", webpages_Roles);
        }

        #endregion

        #region Importations de fonction
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="sondage">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="valeur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterChoixSondage(Nullable<global::System.Int32> sondage, global::System.String valeur)
        {
            ObjectParameter sondageParameter;
            if (sondage.HasValue)
            {
                sondageParameter = new ObjectParameter("sondage", sondage);
            }
            else
            {
                sondageParameter = new ObjectParameter("sondage", typeof(global::System.Int32));
            }
    
            ObjectParameter valeurParameter;
            if (valeur != null)
            {
                valeurParameter = new ObjectParameter("valeur", valeur);
            }
            else
            {
                valeurParameter = new ObjectParameter("valeur", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterChoixSondage", sondageParameter, valeurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="message">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="destinataire">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterDestinataireMess(Nullable<global::System.Int32> message, Nullable<global::System.Int32> destinataire)
        {
            ObjectParameter messageParameter;
            if (message.HasValue)
            {
                messageParameter = new ObjectParameter("message", message);
            }
            else
            {
                messageParameter = new ObjectParameter("message", typeof(global::System.Int32));
            }
    
            ObjectParameter destinataireParameter;
            if (destinataire.HasValue)
            {
                destinataireParameter = new ObjectParameter("destinataire", destinataire);
            }
            else
            {
                destinataireParameter = new ObjectParameter("destinataire", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterDestinataireMess", messageParameter, destinataireParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="adresse">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ville">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterEcole(global::System.String nom, global::System.String adresse, global::System.String ville)
        {
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter adresseParameter;
            if (adresse != null)
            {
                adresseParameter = new ObjectParameter("adresse", adresse);
            }
            else
            {
                adresseParameter = new ObjectParameter("adresse", typeof(global::System.String));
            }
    
            ObjectParameter villeParameter;
            if (ville != null)
            {
                villeParameter = new ObjectParameter("ville", ville);
            }
            else
            {
                villeParameter = new ObjectParameter("ville", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterEcole", nomParameter, adresseParameter, villeParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nomeven">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="dateeven">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="debut">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="fin">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="categorie">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterEven(global::System.String nomeven, Nullable<global::System.DateTime> dateeven, Nullable<global::System.TimeSpan> debut, Nullable<global::System.TimeSpan> fin, Nullable<global::System.Int32> categorie)
        {
            ObjectParameter nomevenParameter;
            if (nomeven != null)
            {
                nomevenParameter = new ObjectParameter("nomeven", nomeven);
            }
            else
            {
                nomevenParameter = new ObjectParameter("nomeven", typeof(global::System.String));
            }
    
            ObjectParameter dateevenParameter;
            if (dateeven.HasValue)
            {
                dateevenParameter = new ObjectParameter("dateeven", dateeven);
            }
            else
            {
                dateevenParameter = new ObjectParameter("dateeven", typeof(global::System.DateTime));
            }
    
            ObjectParameter debutParameter;
            if (debut.HasValue)
            {
                debutParameter = new ObjectParameter("debut", debut);
            }
            else
            {
                debutParameter = new ObjectParameter("debut", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter categorieParameter;
            if (categorie.HasValue)
            {
                categorieParameter = new ObjectParameter("categorie", categorie);
            }
            else
            {
                categorieParameter = new ObjectParameter("categorie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterEven", nomevenParameter, dateevenParameter, debutParameter, finParameter, categorieParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="forum">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterFilDiscussion(global::System.String sujet, Nullable<global::System.Int32> forum)
        {
            ObjectParameter sujetParameter;
            if (sujet != null)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.String));
            }
    
            ObjectParameter forumParameter;
            if (forum.HasValue)
            {
                forumParameter = new ObjectParameter("forum", forum);
            }
            else
            {
                forumParameter = new ObjectParameter("forum", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterFilDiscussion", sujetParameter, forumParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="contenu">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="util">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="fildiscu">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterMessageForum(global::System.String contenu, Nullable<global::System.Int32> util, Nullable<global::System.Int32> fildiscu)
        {
            ObjectParameter contenuParameter;
            if (contenu != null)
            {
                contenuParameter = new ObjectParameter("contenu", contenu);
            }
            else
            {
                contenuParameter = new ObjectParameter("contenu", typeof(global::System.String));
            }
    
            ObjectParameter utilParameter;
            if (util.HasValue)
            {
                utilParameter = new ObjectParameter("util", util);
            }
            else
            {
                utilParameter = new ObjectParameter("util", typeof(global::System.Int32));
            }
    
            ObjectParameter fildiscuParameter;
            if (fildiscu.HasValue)
            {
                fildiscuParameter = new ObjectParameter("fildiscu", fildiscu);
            }
            else
            {
                fildiscuParameter = new ObjectParameter("fildiscu", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterMessageForum", contenuParameter, utilParameter, fildiscuParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="expediteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="contenu">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterMessagePrive(Nullable<global::System.Int32> expediteur, global::System.String sujet, global::System.String contenu)
        {
            ObjectParameter expediteurParameter;
            if (expediteur.HasValue)
            {
                expediteurParameter = new ObjectParameter("expediteur", expediteur);
            }
            else
            {
                expediteurParameter = new ObjectParameter("expediteur", typeof(global::System.Int32));
            }
    
            ObjectParameter sujetParameter;
            if (sujet != null)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.String));
            }
    
            ObjectParameter contenuParameter;
            if (contenu != null)
            {
                contenuParameter = new ObjectParameter("contenu", contenu);
            }
            else
            {
                contenuParameter = new ObjectParameter("contenu", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterMessagePrive", expediteurParameter, sujetParameter, contenuParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idpub">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="valeur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="return_value">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterMotCle(Nullable<global::System.Int32> idpub, global::System.String valeur, ObjectParameter return_value)
        {
            ObjectParameter idpubParameter;
            if (idpub.HasValue)
            {
                idpubParameter = new ObjectParameter("idpub", idpub);
            }
            else
            {
                idpubParameter = new ObjectParameter("idpub", typeof(global::System.Int32));
            }
    
            ObjectParameter valeurParameter;
            if (valeur != null)
            {
                valeurParameter = new ObjectParameter("valeur", valeur);
            }
            else
            {
                valeurParameter = new ObjectParameter("valeur", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterMotCle", idpubParameter, valeurParameter, return_value);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="titre">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="description">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterNouvelle(global::System.String titre, global::System.String description)
        {
            ObjectParameter titreParameter;
            if (titre != null)
            {
                titreParameter = new ObjectParameter("titre", titre);
            }
            else
            {
                titreParameter = new ObjectParameter("titre", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterNouvelle", titreParameter, descriptionParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="raisonsociale">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="adr">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ville">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="pays">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="tel">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="siteweb">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="courriel">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterPartenaire(global::System.String nom, global::System.String raisonsociale, global::System.String adr, global::System.String ville, global::System.String pays, global::System.String tel, global::System.String siteweb, global::System.String courriel)
        {
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter raisonsocialeParameter;
            if (raisonsociale != null)
            {
                raisonsocialeParameter = new ObjectParameter("raisonsociale", raisonsociale);
            }
            else
            {
                raisonsocialeParameter = new ObjectParameter("raisonsociale", typeof(global::System.String));
            }
    
            ObjectParameter adrParameter;
            if (adr != null)
            {
                adrParameter = new ObjectParameter("adr", adr);
            }
            else
            {
                adrParameter = new ObjectParameter("adr", typeof(global::System.String));
            }
    
            ObjectParameter villeParameter;
            if (ville != null)
            {
                villeParameter = new ObjectParameter("ville", ville);
            }
            else
            {
                villeParameter = new ObjectParameter("ville", typeof(global::System.String));
            }
    
            ObjectParameter paysParameter;
            if (pays != null)
            {
                paysParameter = new ObjectParameter("pays", pays);
            }
            else
            {
                paysParameter = new ObjectParameter("pays", typeof(global::System.String));
            }
    
            ObjectParameter telParameter;
            if (tel != null)
            {
                telParameter = new ObjectParameter("tel", tel);
            }
            else
            {
                telParameter = new ObjectParameter("tel", typeof(global::System.String));
            }
    
            ObjectParameter sitewebParameter;
            if (siteweb != null)
            {
                sitewebParameter = new ObjectParameter("siteweb", siteweb);
            }
            else
            {
                sitewebParameter = new ObjectParameter("siteweb", typeof(global::System.String));
            }
    
            ObjectParameter courrielParameter;
            if (courriel != null)
            {
                courrielParameter = new ObjectParameter("courriel", courriel);
            }
            else
            {
                courrielParameter = new ObjectParameter("courriel", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterPartenaire", nomParameter, raisonsocialeParameter, adrParameter, villeParameter, paysParameter, telParameter, sitewebParameter, courrielParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="message">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="pieceserialisee">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="taillepiece">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nompiece">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterPieceJointe(Nullable<global::System.Int32> message, global::System.Byte[] pieceserialisee, global::System.String taillepiece, global::System.String nompiece)
        {
            ObjectParameter messageParameter;
            if (message.HasValue)
            {
                messageParameter = new ObjectParameter("message", message);
            }
            else
            {
                messageParameter = new ObjectParameter("message", typeof(global::System.Int32));
            }
    
            ObjectParameter pieceserialiseeParameter;
            if (pieceserialisee != null)
            {
                pieceserialiseeParameter = new ObjectParameter("pieceserialisee", pieceserialisee);
            }
            else
            {
                pieceserialiseeParameter = new ObjectParameter("pieceserialisee", typeof(global::System.Byte[]));
            }
    
            ObjectParameter taillepieceParameter;
            if (taillepiece != null)
            {
                taillepieceParameter = new ObjectParameter("taillepiece", taillepiece);
            }
            else
            {
                taillepieceParameter = new ObjectParameter("taillepiece", typeof(global::System.String));
            }
    
            ObjectParameter nompieceParameter;
            if (nompiece != null)
            {
                nompieceParameter = new ObjectParameter("nompiece", nompiece);
            }
            else
            {
                nompieceParameter = new ObjectParameter("nompiece", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterPieceJointe", messageParameter, pieceserialiseeParameter, taillepieceParameter, nompieceParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="titre">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="emplacement">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idpub">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterPublication(global::System.String titre, global::System.String emplacement, Nullable<global::System.Int32> sujet, Nullable<global::System.Int32> secteur, ObjectParameter idpub)
        {
            ObjectParameter titreParameter;
            if (titre != null)
            {
                titreParameter = new ObjectParameter("titre", titre);
            }
            else
            {
                titreParameter = new ObjectParameter("titre", typeof(global::System.String));
            }
    
            ObjectParameter emplacementParameter;
            if (emplacement != null)
            {
                emplacementParameter = new ObjectParameter("emplacement", emplacement);
            }
            else
            {
                emplacementParameter = new ObjectParameter("emplacement", typeof(global::System.String));
            }
    
            ObjectParameter sujetParameter;
            if (sujet.HasValue)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.Int32));
            }
    
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterPublication", titreParameter, emplacementParameter, sujetParameter, secteurParameter, idpub);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idecole">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterSectEcole(Nullable<global::System.Int32> idecole, Nullable<global::System.Int32> idsecteur)
        {
            ObjectParameter idecoleParameter;
            if (idecole.HasValue)
            {
                idecoleParameter = new ObjectParameter("idecole", idecole);
            }
            else
            {
                idecoleParameter = new ObjectParameter("idecole", typeof(global::System.Int32));
            }
    
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterSectEcole", idecoleParameter, idsecteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterSecteur(global::System.String nom)
        {
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterSecteur", nomParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="even">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterSectEven(Nullable<global::System.Int32> secteur, Nullable<global::System.Int32> even)
        {
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            ObjectParameter evenParameter;
            if (even.HasValue)
            {
                evenParameter = new ObjectParameter("even", even);
            }
            else
            {
                evenParameter = new ObjectParameter("even", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterSectEven", secteurParameter, evenParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="question">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="debut">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="fin">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="createur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterSondage(global::System.String nom, global::System.String question, Nullable<global::System.DateTime> debut, Nullable<global::System.DateTime> fin, Nullable<global::System.Int32> createur, Nullable<global::System.Int32> secteur)
        {
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter questionParameter;
            if (question != null)
            {
                questionParameter = new ObjectParameter("question", question);
            }
            else
            {
                questionParameter = new ObjectParameter("question", typeof(global::System.String));
            }
    
            ObjectParameter debutParameter;
            if (debut.HasValue)
            {
                debutParameter = new ObjectParameter("debut", debut);
            }
            else
            {
                debutParameter = new ObjectParameter("debut", typeof(global::System.DateTime));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.DateTime));
            }
    
            ObjectParameter createurParameter;
            if (createur.HasValue)
            {
                createurParameter = new ObjectParameter("createur", createur);
            }
            else
            {
                createurParameter = new ObjectParameter("createur", typeof(global::System.Int32));
            }
    
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterSondage", nomParameter, questionParameter, debutParameter, finParameter, createurParameter, secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterSujetPub(global::System.String sujet)
        {
            ObjectParameter sujetParameter;
            if (sujet != null)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AjouterSujetPub", sujetParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterUtilSecteur(Nullable<global::System.Int32> id, Nullable<global::System.Int32> secteur)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterUtilSecteur", idParameter, secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="util">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="choix">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AjouterVoteSondage(Nullable<global::System.Int32> util, Nullable<global::System.Int32> choix)
        {
            ObjectParameter utilParameter;
            if (util.HasValue)
            {
                utilParameter = new ObjectParameter("util", util);
            }
            else
            {
                utilParameter = new ObjectParameter("util", typeof(global::System.Int32));
            }
    
            ObjectParameter choixParameter;
            if (choix.HasValue)
            {
                choixParameter = new ObjectParameter("choix", choix);
            }
            else
            {
                choixParameter = new ObjectParameter("choix", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AjouterVoteSondage", utilParameter, choixParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idfildiscussion">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int AugmenterNbrLectures(Nullable<global::System.Int32> idfildiscussion)
        {
            ObjectParameter idfildiscussionParameter;
            if (idfildiscussion.HasValue)
            {
                idfildiscussionParameter = new ObjectParameter("idfildiscussion", idfildiscussion);
            }
            else
            {
                idfildiscussionParameter = new ObjectParameter("idfildiscussion", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AugmenterNbrLectures", idfildiscussionParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nomPage">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetContenu_Result> GetContenu(global::System.String nomPage)
        {
            ObjectParameter nomPageParameter;
            if (nomPage != null)
            {
                nomPageParameter = new ObjectParameter("nomPage", nomPage);
            }
            else
            {
                nomPageParameter = new ObjectParameter("nomPage", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetContenu_Result>("GetContenu", nomPageParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idMessage">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<global::System.String> GetDestinataires(Nullable<global::System.Int32> idMessage)
        {
            ObjectParameter idMessageParameter;
            if (idMessage.HasValue)
            {
                idMessageParameter = new ObjectParameter("idMessage", idMessage);
            }
            else
            {
                idMessageParameter = new ObjectParameter("idMessage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("GetDestinataires", idMessageParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetEven_Result> GetEven(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetEven_Result>("GetEven", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetEvents_Result> GetEvents(Nullable<global::System.Int32> secteur)
        {
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetEvents_Result>("GetEvents", secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idforum">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetFilDiscussion_Result> GetFilDiscussion(Nullable<global::System.Int32> idforum)
        {
            ObjectParameter idforumParameter;
            if (idforum.HasValue)
            {
                idforumParameter = new ObjectParameter("idforum", idforum);
            }
            else
            {
                idforumParameter = new ObjectParameter("idforum", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetFilDiscussion_Result>("GetFilDiscussion", idforumParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetForum_Result> GetForum(Nullable<global::System.Int32> secteur)
        {
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetForum_Result>("GetForum", secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idMessage">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetMessage_Result> GetMessage(Nullable<global::System.Int32> idMessage)
        {
            ObjectParameter idMessageParameter;
            if (idMessage.HasValue)
            {
                idMessageParameter = new ObjectParameter("idMessage", idMessage);
            }
            else
            {
                idMessageParameter = new ObjectParameter("idMessage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetMessage_Result>("GetMessage", idMessageParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idUtil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetMessagesEnvoyes_Result> GetMessagesEnvoyes(Nullable<global::System.Int32> idUtil)
        {
            ObjectParameter idUtilParameter;
            if (idUtil.HasValue)
            {
                idUtilParameter = new ObjectParameter("idUtil", idUtil);
            }
            else
            {
                idUtilParameter = new ObjectParameter("idUtil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetMessagesEnvoyes_Result>("GetMessagesEnvoyes", idUtilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idfil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetMessagesForum_Result> GetMessagesForum(Nullable<global::System.Int32> idfil)
        {
            ObjectParameter idfilParameter;
            if (idfil.HasValue)
            {
                idfilParameter = new ObjectParameter("idfil", idfil);
            }
            else
            {
                idfilParameter = new ObjectParameter("idfil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetMessagesForum_Result>("GetMessagesForum", idfilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idUtil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetMessagesPrives_Result> GetMessagesPrives(Nullable<global::System.Int32> idUtil)
        {
            ObjectParameter idUtilParameter;
            if (idUtil.HasValue)
            {
                idUtilParameter = new ObjectParameter("idUtil", idUtil);
            }
            else
            {
                idUtilParameter = new ObjectParameter("idUtil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetMessagesPrives_Result>("GetMessagesPrives", idUtilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idUtil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetMessagesSupprimes_Result> GetMessagesSupprimes(Nullable<global::System.Int32> idUtil)
        {
            ObjectParameter idUtilParameter;
            if (idUtil.HasValue)
            {
                idUtilParameter = new ObjectParameter("idUtil", idUtil);
            }
            else
            {
                idUtilParameter = new ObjectParameter("idUtil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetMessagesSupprimes_Result>("GetMessagesSupprimes", idUtilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idNouvelle">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetNouvelle_Result> GetNouvelle(Nullable<global::System.Int32> idNouvelle)
        {
            ObjectParameter idNouvelleParameter;
            if (idNouvelle.HasValue)
            {
                idNouvelleParameter = new ObjectParameter("idNouvelle", idNouvelle);
            }
            else
            {
                idNouvelleParameter = new ObjectParameter("idNouvelle", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetNouvelle_Result>("GetNouvelle", idNouvelleParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectResult<GetNouvelles_Result> GetNouvelles()
        {
            return base.ExecuteFunction<GetNouvelles_Result>("GetNouvelles");
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idpar">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetPartenaire_Result> GetPartenaire(Nullable<global::System.Int32> idpar)
        {
            ObjectParameter idparParameter;
            if (idpar.HasValue)
            {
                idparParameter = new ObjectParameter("idpar", idpar);
            }
            else
            {
                idparParameter = new ObjectParameter("idpar", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetPartenaire_Result>("GetPartenaire", idparParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectResult<GetPartenaires_Result> GetPartenaires()
        {
            return base.ExecuteFunction<GetPartenaires_Result>("GetPartenaires");
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="motcle">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetPubParMotCle_Result> GetPubParMotCle(Nullable<global::System.Int32> idsecteur, global::System.String motcle)
        {
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            ObjectParameter motcleParameter;
            if (motcle != null)
            {
                motcleParameter = new ObjectParameter("motcle", motcle);
            }
            else
            {
                motcleParameter = new ObjectParameter("motcle", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetPubParMotCle_Result>("GetPubParMotCle", idsecteurParameter, motcleParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetPubParSecteur_Result> GetPubParSecteur(Nullable<global::System.Int32> idsecteur)
        {
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetPubParSecteur_Result>("GetPubParSecteur", idsecteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idsujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetPubParSujet_Result> GetPubParSujet(Nullable<global::System.Int32> idsecteur, Nullable<global::System.Int32> idsujet)
        {
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            ObjectParameter idsujetParameter;
            if (idsujet.HasValue)
            {
                idsujetParameter = new ObjectParameter("idsujet", idsujet);
            }
            else
            {
                idsujetParameter = new ObjectParameter("idsujet", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetPubParSujet_Result>("GetPubParSujet", idsecteurParameter, idsujetParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="rech">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetRechercheNouvelle_Result> GetRechercheNouvelle(global::System.String rech)
        {
            ObjectParameter rechParameter;
            if (rech != null)
            {
                rechParameter = new ObjectParameter("rech", rech);
            }
            else
            {
                rechParameter = new ObjectParameter("rech", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetRechercheNouvelle_Result>("GetRechercheNouvelle", rechParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsondage">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetResultatsSondage_Result> GetResultatsSondage(Nullable<global::System.Int32> idsondage)
        {
            ObjectParameter idsondageParameter;
            if (idsondage.HasValue)
            {
                idsondageParameter = new ObjectParameter("idsondage", idsondage);
            }
            else
            {
                idsondageParameter = new ObjectParameter("idsondage", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetResultatsSondage_Result>("GetResultatsSondage", idsondageParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectResult<GetSecteurs_Result> GetSecteurs()
        {
            return base.ExecuteFunction<GetSecteurs_Result>("GetSecteurs");
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetSondage_Result> GetSondage(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetSondage_Result>("GetSondage", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetSondages_Result> GetSondages(Nullable<global::System.Int32> idsecteur)
        {
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetSondages_Result>("GetSondages", idsecteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="username">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<getUtil_Result> getUtil(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<getUtil_Result>("getUtil", usernameParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetUtilParSecteur_Result> GetUtilParSecteur(Nullable<global::System.Int32> idsecteur)
        {
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetUtilParSecteur_Result>("GetUtilParSecteur", idsecteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<GetUtilProfil_Result> GetUtilProfil(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetUtilProfil_Result>("GetUtilProfil", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectResult<GetUtils_Result> GetUtils()
        {
            return base.ExecuteFunction<GetUtils_Result>("GetUtils");
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idMessage">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idUtil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int LireMessage(Nullable<global::System.Int32> idMessage, Nullable<global::System.Int32> idUtil)
        {
            ObjectParameter idMessageParameter;
            if (idMessage.HasValue)
            {
                idMessageParameter = new ObjectParameter("idMessage", idMessage);
            }
            else
            {
                idMessageParameter = new ObjectParameter("idMessage", typeof(global::System.Int32));
            }
    
            ObjectParameter idUtilParameter;
            if (idUtil.HasValue)
            {
                idUtilParameter = new ObjectParameter("idUtil", idUtil);
            }
            else
            {
                idUtilParameter = new ObjectParameter("idUtil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("LireMessage", idMessageParameter, idUtilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idmess">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int MessagePriveCorbeille(Nullable<global::System.Int32> idmess)
        {
            ObjectParameter idmessParameter;
            if (idmess.HasValue)
            {
                idmessParameter = new ObjectParameter("idmess", idmess);
            }
            else
            {
                idmessParameter = new ObjectParameter("idmess", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("MessagePriveCorbeille", idmessParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idmess">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int MessagePriveSuppDef(Nullable<global::System.Int32> idmess)
        {
            ObjectParameter idmessParameter;
            if (idmess.HasValue)
            {
                idmessParameter = new ObjectParameter("idmess", idmess);
            }
            else
            {
                idmessParameter = new ObjectParameter("idmess", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("MessagePriveSuppDef", idmessParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="ideven">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nomeven">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="dateeven">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="debut">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="fin">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="categorie">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModiferEven(Nullable<global::System.Int32> ideven, global::System.String nomeven, Nullable<global::System.DateTime> dateeven, Nullable<global::System.TimeSpan> debut, Nullable<global::System.TimeSpan> fin, Nullable<global::System.Int32> categorie)
        {
            ObjectParameter idevenParameter;
            if (ideven.HasValue)
            {
                idevenParameter = new ObjectParameter("ideven", ideven);
            }
            else
            {
                idevenParameter = new ObjectParameter("ideven", typeof(global::System.Int32));
            }
    
            ObjectParameter nomevenParameter;
            if (nomeven != null)
            {
                nomevenParameter = new ObjectParameter("nomeven", nomeven);
            }
            else
            {
                nomevenParameter = new ObjectParameter("nomeven", typeof(global::System.String));
            }
    
            ObjectParameter dateevenParameter;
            if (dateeven.HasValue)
            {
                dateevenParameter = new ObjectParameter("dateeven", dateeven);
            }
            else
            {
                dateevenParameter = new ObjectParameter("dateeven", typeof(global::System.DateTime));
            }
    
            ObjectParameter debutParameter;
            if (debut.HasValue)
            {
                debutParameter = new ObjectParameter("debut", debut);
            }
            else
            {
                debutParameter = new ObjectParameter("debut", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter categorieParameter;
            if (categorie.HasValue)
            {
                categorieParameter = new ObjectParameter("categorie", categorie);
            }
            else
            {
                categorieParameter = new ObjectParameter("categorie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ModiferEven", idevenParameter, nomevenParameter, dateevenParameter, debutParameter, finParameter, categorieParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="valeur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierChoixSondage(Nullable<global::System.Int32> id, global::System.String valeur)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter valeurParameter;
            if (valeur != null)
            {
                valeurParameter = new ObjectParameter("valeur", valeur);
            }
            else
            {
                valeurParameter = new ObjectParameter("valeur", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierChoixSondage", idParameter, valeurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nomPage">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="titre">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="titre_trad">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="cont">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="cont_trad">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="urlImage">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierContenu(global::System.String nomPage, global::System.String titre, global::System.String titre_trad, global::System.String cont, global::System.String cont_trad, global::System.String urlImage)
        {
            ObjectParameter nomPageParameter;
            if (nomPage != null)
            {
                nomPageParameter = new ObjectParameter("nomPage", nomPage);
            }
            else
            {
                nomPageParameter = new ObjectParameter("nomPage", typeof(global::System.String));
            }
    
            ObjectParameter titreParameter;
            if (titre != null)
            {
                titreParameter = new ObjectParameter("titre", titre);
            }
            else
            {
                titreParameter = new ObjectParameter("titre", typeof(global::System.String));
            }
    
            ObjectParameter titre_tradParameter;
            if (titre_trad != null)
            {
                titre_tradParameter = new ObjectParameter("titre_trad", titre_trad);
            }
            else
            {
                titre_tradParameter = new ObjectParameter("titre_trad", typeof(global::System.String));
            }
    
            ObjectParameter contParameter;
            if (cont != null)
            {
                contParameter = new ObjectParameter("cont", cont);
            }
            else
            {
                contParameter = new ObjectParameter("cont", typeof(global::System.String));
            }
    
            ObjectParameter cont_tradParameter;
            if (cont_trad != null)
            {
                cont_tradParameter = new ObjectParameter("cont_trad", cont_trad);
            }
            else
            {
                cont_tradParameter = new ObjectParameter("cont_trad", typeof(global::System.String));
            }
    
            ObjectParameter urlImageParameter;
            if (urlImage != null)
            {
                urlImageParameter = new ObjectParameter("urlImage", urlImage);
            }
            else
            {
                urlImageParameter = new ObjectParameter("urlImage", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierContenu", nomPageParameter, titreParameter, titre_tradParameter, contParameter, cont_tradParameter, urlImageParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="adresse">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ville">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierEcole(Nullable<global::System.Int32> id, global::System.String nom, global::System.String adresse, global::System.String ville)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter adresseParameter;
            if (adresse != null)
            {
                adresseParameter = new ObjectParameter("adresse", adresse);
            }
            else
            {
                adresseParameter = new ObjectParameter("adresse", typeof(global::System.String));
            }
    
            ObjectParameter villeParameter;
            if (ville != null)
            {
                villeParameter = new ObjectParameter("ville", ville);
            }
            else
            {
                villeParameter = new ObjectParameter("ville", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierEcole", idParameter, nomParameter, adresseParameter, villeParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="contenu">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierMessageForum(Nullable<global::System.Int32> id, global::System.String contenu)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter contenuParameter;
            if (contenu != null)
            {
                contenuParameter = new ObjectParameter("contenu", contenu);
            }
            else
            {
                contenuParameter = new ObjectParameter("contenu", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierMessageForum", idParameter, contenuParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="titre">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="description">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierNouvelle(Nullable<global::System.Int32> id, global::System.String titre, global::System.String description)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter titreParameter;
            if (titre != null)
            {
                titreParameter = new ObjectParameter("titre", titre);
            }
            else
            {
                titreParameter = new ObjectParameter("titre", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierNouvelle", idParameter, titreParameter, descriptionParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="raisonsociale">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="adr">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ville">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="pays">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="tel">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="siteweb">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="courriel">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierPartenaire(Nullable<global::System.Int32> id, global::System.String nom, global::System.String raisonsociale, global::System.String adr, global::System.String ville, global::System.String pays, global::System.String tel, global::System.String siteweb, global::System.String courriel)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter raisonsocialeParameter;
            if (raisonsociale != null)
            {
                raisonsocialeParameter = new ObjectParameter("raisonsociale", raisonsociale);
            }
            else
            {
                raisonsocialeParameter = new ObjectParameter("raisonsociale", typeof(global::System.String));
            }
    
            ObjectParameter adrParameter;
            if (adr != null)
            {
                adrParameter = new ObjectParameter("adr", adr);
            }
            else
            {
                adrParameter = new ObjectParameter("adr", typeof(global::System.String));
            }
    
            ObjectParameter villeParameter;
            if (ville != null)
            {
                villeParameter = new ObjectParameter("ville", ville);
            }
            else
            {
                villeParameter = new ObjectParameter("ville", typeof(global::System.String));
            }
    
            ObjectParameter paysParameter;
            if (pays != null)
            {
                paysParameter = new ObjectParameter("pays", pays);
            }
            else
            {
                paysParameter = new ObjectParameter("pays", typeof(global::System.String));
            }
    
            ObjectParameter telParameter;
            if (tel != null)
            {
                telParameter = new ObjectParameter("tel", tel);
            }
            else
            {
                telParameter = new ObjectParameter("tel", typeof(global::System.String));
            }
    
            ObjectParameter sitewebParameter;
            if (siteweb != null)
            {
                sitewebParameter = new ObjectParameter("siteweb", siteweb);
            }
            else
            {
                sitewebParameter = new ObjectParameter("siteweb", typeof(global::System.String));
            }
    
            ObjectParameter courrielParameter;
            if (courriel != null)
            {
                courrielParameter = new ObjectParameter("courriel", courriel);
            }
            else
            {
                courrielParameter = new ObjectParameter("courriel", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierPartenaire", idParameter, nomParameter, raisonsocialeParameter, adrParameter, villeParameter, paysParameter, telParameter, sitewebParameter, courrielParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="titre">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierPublication(Nullable<global::System.Int32> id, global::System.String titre, Nullable<global::System.Int32> sujet)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter titreParameter;
            if (titre != null)
            {
                titreParameter = new ObjectParameter("titre", titre);
            }
            else
            {
                titreParameter = new ObjectParameter("titre", typeof(global::System.String));
            }
    
            ObjectParameter sujetParameter;
            if (sujet.HasValue)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ModifierPublication", idParameter, titreParameter, sujetParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="question">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="debut">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="fin">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierSondage(Nullable<global::System.Int32> id, global::System.String nom, global::System.String question, Nullable<global::System.DateTime> debut, Nullable<global::System.DateTime> fin, Nullable<global::System.Int32> secteur)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter questionParameter;
            if (question != null)
            {
                questionParameter = new ObjectParameter("question", question);
            }
            else
            {
                questionParameter = new ObjectParameter("question", typeof(global::System.String));
            }
    
            ObjectParameter debutParameter;
            if (debut.HasValue)
            {
                debutParameter = new ObjectParameter("debut", debut);
            }
            else
            {
                debutParameter = new ObjectParameter("debut", typeof(global::System.DateTime));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.DateTime));
            }
    
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ModifierSondage", idParameter, nomParameter, questionParameter, debutParameter, finParameter, secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="sujet">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierSujetFilDiscussion(Nullable<global::System.Int32> id, global::System.String sujet)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter sujetParameter;
            if (sujet != null)
            {
                sujetParameter = new ObjectParameter("sujet", sujet);
            }
            else
            {
                sujetParameter = new ObjectParameter("sujet", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierSujetFilDiscussion", idParameter, sujetParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ecole">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierUtilEcole(Nullable<global::System.Int32> id, Nullable<global::System.Int32> ecole)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter ecoleParameter;
            if (ecole.HasValue)
            {
                ecoleParameter = new ObjectParameter("ecole", ecole);
            }
            else
            {
                ecoleParameter = new ObjectParameter("ecole", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ModifierUtilEcole", idParameter, ecoleParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="courriel">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="nom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="prenom">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="adresse">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="ville">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="langue">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ModifierUtilProfil(Nullable<global::System.Int32> id, global::System.String courriel, global::System.String nom, global::System.String prenom, global::System.String adresse, global::System.String ville, global::System.String langue)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter courrielParameter;
            if (courriel != null)
            {
                courrielParameter = new ObjectParameter("courriel", courriel);
            }
            else
            {
                courrielParameter = new ObjectParameter("courriel", typeof(global::System.String));
            }
    
            ObjectParameter nomParameter;
            if (nom != null)
            {
                nomParameter = new ObjectParameter("nom", nom);
            }
            else
            {
                nomParameter = new ObjectParameter("nom", typeof(global::System.String));
            }
    
            ObjectParameter prenomParameter;
            if (prenom != null)
            {
                prenomParameter = new ObjectParameter("prenom", prenom);
            }
            else
            {
                prenomParameter = new ObjectParameter("prenom", typeof(global::System.String));
            }
    
            ObjectParameter adresseParameter;
            if (adresse != null)
            {
                adresseParameter = new ObjectParameter("adresse", adresse);
            }
            else
            {
                adresseParameter = new ObjectParameter("adresse", typeof(global::System.String));
            }
    
            ObjectParameter villeParameter;
            if (ville != null)
            {
                villeParameter = new ObjectParameter("ville", ville);
            }
            else
            {
                villeParameter = new ObjectParameter("ville", typeof(global::System.String));
            }
    
            ObjectParameter langueParameter;
            if (langue != null)
            {
                langueParameter = new ObjectParameter("langue", langue);
            }
            else
            {
                langueParameter = new ObjectParameter("langue", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("ModifierUtilProfil", idParameter, courrielParameter, nomParameter, prenomParameter, adresseParameter, villeParameter, langueParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int ReinitMotPasse(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("ReinitMotPasse", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="version">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="definition">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="version">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="definition">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="owner_id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="new_diagramname">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerChoixSondage(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerChoixSondage", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerEcole(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerEcole", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerEven(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerEven", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idfil">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerFilDiscussion(Nullable<global::System.Int32> idfil)
        {
            ObjectParameter idfilParameter;
            if (idfil.HasValue)
            {
                idfilParameter = new ObjectParameter("idfil", idfil);
            }
            else
            {
                idfilParameter = new ObjectParameter("idfil", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerFilDiscussion", idfilParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idmess">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerMessageForum(Nullable<global::System.Int32> idmess)
        {
            ObjectParameter idmessParameter;
            if (idmess.HasValue)
            {
                idmessParameter = new ObjectParameter("idmess", idmess);
            }
            else
            {
                idmessParameter = new ObjectParameter("idmess", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerMessageForum", idmessParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idpub">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idmotcle">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerMotClePub(Nullable<global::System.Int32> idpub, Nullable<global::System.Int32> idmotcle)
        {
            ObjectParameter idpubParameter;
            if (idpub.HasValue)
            {
                idpubParameter = new ObjectParameter("idpub", idpub);
            }
            else
            {
                idpubParameter = new ObjectParameter("idpub", typeof(global::System.Int32));
            }
    
            ObjectParameter idmotcleParameter;
            if (idmotcle.HasValue)
            {
                idmotcleParameter = new ObjectParameter("idmotcle", idmotcle);
            }
            else
            {
                idmotcleParameter = new ObjectParameter("idmotcle", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerMotClePub", idpubParameter, idmotcleParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerNouvelle(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerNouvelle", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerPartenaire(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerPartenaire", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerPublication(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerPublication", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="idecole">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="idsecteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerSectEcole(Nullable<global::System.Int32> idecole, Nullable<global::System.Int32> idsecteur)
        {
            ObjectParameter idecoleParameter;
            if (idecole.HasValue)
            {
                idecoleParameter = new ObjectParameter("idecole", idecole);
            }
            else
            {
                idecoleParameter = new ObjectParameter("idecole", typeof(global::System.Int32));
            }
    
            ObjectParameter idsecteurParameter;
            if (idsecteur.HasValue)
            {
                idsecteurParameter = new ObjectParameter("idsecteur", idsecteur);
            }
            else
            {
                idsecteurParameter = new ObjectParameter("idsecteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerSectEcole", idecoleParameter, idsecteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerSecteur(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerSecteur", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerSectEven(Nullable<global::System.Int32> secteur)
        {
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerSectEven", secteurParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerSondage(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerSondage", idParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="nomutil">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="permanent">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerUtilisateur(global::System.String nomutil, Nullable<global::System.Boolean> permanent)
        {
            ObjectParameter nomutilParameter;
            if (nomutil != null)
            {
                nomutilParameter = new ObjectParameter("nomutil", nomutil);
            }
            else
            {
                nomutilParameter = new ObjectParameter("nomutil", typeof(global::System.String));
            }
    
            ObjectParameter permanentParameter;
            if (permanent.HasValue)
            {
                permanentParameter = new ObjectParameter("permanent", permanent);
            }
            else
            {
                permanentParameter = new ObjectParameter("permanent", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("SupprimerUtilisateur", nomutilParameter, permanentParameter);
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        /// <param name="id">Aucune documentation sur les métadonnées n'est disponible.</param>
        /// <param name="secteur">Aucune documentation sur les métadonnées n'est disponible.</param>
        public int SupprimerUtilSect(Nullable<global::System.Int32> id, Nullable<global::System.Int32> secteur)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter secteurParameter;
            if (secteur.HasValue)
            {
                secteurParameter = new ObjectParameter("secteur", secteur);
            }
            else
            {
                secteurParameter = new ObjectParameter("secteur", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SupprimerUtilSect", idParameter, secteurParameter);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="CATEGORIEEVENEMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORIEEVENEMENT : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet CATEGORIEEVENEMENT.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        public static CATEGORIEEVENEMENT CreateCATEGORIEEVENEMENT(global::System.Int32 id, global::System.String nOM)
        {
            CATEGORIEEVENEMENT cATEGORIEEVENEMENT = new CATEGORIEEVENEMENT();
            cATEGORIEEVENEMENT.ID = id;
            cATEGORIEEVENEMENT.NOM = nOM;
            return cATEGORIEEVENEMENT;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_EVEN_CATE", "EVENEMENT")]
        public EntityCollection<EVENEMENT> EVENEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENEMENT>("MVPModel.FK_EVEN_CATE", "EVENEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENEMENT>("MVPModel.FK_EVEN_CATE", "EVENEMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="CHOIXSONDAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CHOIXSONDAGE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet CHOIXSONDAGE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="iDSONDAGE">Valeur initiale de la propriété IDSONDAGE.</param>
        /// <param name="vALEUR">Valeur initiale de la propriété VALEUR.</param>
        public static CHOIXSONDAGE CreateCHOIXSONDAGE(global::System.Int32 id, global::System.Int32 iDSONDAGE, global::System.String vALEUR)
        {
            CHOIXSONDAGE cHOIXSONDAGE = new CHOIXSONDAGE();
            cHOIXSONDAGE.ID = id;
            cHOIXSONDAGE.IDSONDAGE = iDSONDAGE;
            cHOIXSONDAGE.VALEUR = vALEUR;
            return cHOIXSONDAGE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSONDAGE
        {
            get
            {
                return _IDSONDAGE;
            }
            set
            {
                OnIDSONDAGEChanging(value);
                ReportPropertyChanging("IDSONDAGE");
                _IDSONDAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSONDAGE");
                OnIDSONDAGEChanged();
            }
        }
        private global::System.Int32 _IDSONDAGE;
        partial void OnIDSONDAGEChanging(global::System.Int32 value);
        partial void OnIDSONDAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALEUR
        {
            get
            {
                return _VALEUR;
            }
            set
            {
                OnVALEURChanging(value);
                ReportPropertyChanging("VALEUR");
                _VALEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALEUR");
                OnVALEURChanged();
            }
        }
        private global::System.String _VALEUR;
        partial void OnVALEURChanging(global::System.String value);
        partial void OnVALEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_CHOIXSOND_SOND", "SONDAGE")]
        public SONDAGE SONDAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "SONDAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "SONDAGE").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SONDAGE> SONDAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "SONDAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "SONDAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "VOTESONDAGE", "UTILISATEUR")]
        public EntityCollection<UTILISATEUR> UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UTILISATEUR>("MVPModel.VOTESONDAGE", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UTILISATEUR>("MVPModel.VOTESONDAGE", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="CONTENU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CONTENU : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet CONTENU.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="pAGE">Valeur initiale de la propriété PAGE.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="tITRE_TRAD">Valeur initiale de la propriété TITRE_TRAD.</param>
        /// <param name="cONTENU1">Valeur initiale de la propriété CONTENU1.</param>
        /// <param name="cONTENU_TRAD">Valeur initiale de la propriété CONTENU_TRAD.</param>
        public static CONTENU CreateCONTENU(global::System.Int32 id, global::System.String pAGE, global::System.String tITRE, global::System.String tITRE_TRAD, global::System.String cONTENU1, global::System.String cONTENU_TRAD)
        {
            CONTENU cONTENU = new CONTENU();
            cONTENU.ID = id;
            cONTENU.PAGE = pAGE;
            cONTENU.TITRE = tITRE;
            cONTENU.TITRE_TRAD = tITRE_TRAD;
            cONTENU.CONTENU1 = cONTENU1;
            cONTENU.CONTENU_TRAD = cONTENU_TRAD;
            return cONTENU;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PAGE
        {
            get
            {
                return _PAGE;
            }
            set
            {
                OnPAGEChanging(value);
                ReportPropertyChanging("PAGE");
                _PAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PAGE");
                OnPAGEChanged();
            }
        }
        private global::System.String _PAGE;
        partial void OnPAGEChanging(global::System.String value);
        partial void OnPAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE_TRAD
        {
            get
            {
                return _TITRE_TRAD;
            }
            set
            {
                OnTITRE_TRADChanging(value);
                ReportPropertyChanging("TITRE_TRAD");
                _TITRE_TRAD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE_TRAD");
                OnTITRE_TRADChanged();
            }
        }
        private global::System.String _TITRE_TRAD;
        partial void OnTITRE_TRADChanging(global::System.String value);
        partial void OnTITRE_TRADChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU1
        {
            get
            {
                return _CONTENU1;
            }
            set
            {
                OnCONTENU1Changing(value);
                ReportPropertyChanging("CONTENU1");
                _CONTENU1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU1");
                OnCONTENU1Changed();
            }
        }
        private global::System.String _CONTENU1;
        partial void OnCONTENU1Changing(global::System.String value);
        partial void OnCONTENU1Changed();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU_TRAD
        {
            get
            {
                return _CONTENU_TRAD;
            }
            set
            {
                OnCONTENU_TRADChanging(value);
                ReportPropertyChanging("CONTENU_TRAD");
                _CONTENU_TRAD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU_TRAD");
                OnCONTENU_TRADChanged();
            }
        }
        private global::System.String _CONTENU_TRAD;
        partial void OnCONTENU_TRADChanging(global::System.String value);
        partial void OnCONTENU_TRADChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLIMAGE
        {
            get
            {
                return _URLIMAGE;
            }
            set
            {
                OnURLIMAGEChanging(value);
                ReportPropertyChanging("URLIMAGE");
                _URLIMAGE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLIMAGE");
                OnURLIMAGEChanged();
            }
        }
        private global::System.String _URLIMAGE;
        partial void OnURLIMAGEChanging(global::System.String value);
        partial void OnURLIMAGEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="DESTINATAIREMESSAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DESTINATAIREMESSAGE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet DESTINATAIREMESSAGE.
        /// </summary>
        /// <param name="iDMESSAGE">Valeur initiale de la propriété IDMESSAGE.</param>
        /// <param name="iDUTILISATEUR">Valeur initiale de la propriété IDUTILISATEUR.</param>
        /// <param name="sUPPRIME">Valeur initiale de la propriété SUPPRIME.</param>
        /// <param name="sUPPRIMEDEFINITIF">Valeur initiale de la propriété SUPPRIMEDEFINITIF.</param>
        /// <param name="lU">Valeur initiale de la propriété LU.</param>
        public static DESTINATAIREMESSAGE CreateDESTINATAIREMESSAGE(global::System.Int32 iDMESSAGE, global::System.Int32 iDUTILISATEUR, global::System.Boolean sUPPRIME, global::System.Boolean sUPPRIMEDEFINITIF, global::System.Boolean lU)
        {
            DESTINATAIREMESSAGE dESTINATAIREMESSAGE = new DESTINATAIREMESSAGE();
            dESTINATAIREMESSAGE.IDMESSAGE = iDMESSAGE;
            dESTINATAIREMESSAGE.IDUTILISATEUR = iDUTILISATEUR;
            dESTINATAIREMESSAGE.SUPPRIME = sUPPRIME;
            dESTINATAIREMESSAGE.SUPPRIMEDEFINITIF = sUPPRIMEDEFINITIF;
            dESTINATAIREMESSAGE.LU = lU;
            return dESTINATAIREMESSAGE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMESSAGE
        {
            get
            {
                return _IDMESSAGE;
            }
            set
            {
                if (_IDMESSAGE != value)
                {
                    OnIDMESSAGEChanging(value);
                    ReportPropertyChanging("IDMESSAGE");
                    _IDMESSAGE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDMESSAGE");
                    OnIDMESSAGEChanged();
                }
            }
        }
        private global::System.Int32 _IDMESSAGE;
        partial void OnIDMESSAGEChanging(global::System.Int32 value);
        partial void OnIDMESSAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUTILISATEUR
        {
            get
            {
                return _IDUTILISATEUR;
            }
            set
            {
                if (_IDUTILISATEUR != value)
                {
                    OnIDUTILISATEURChanging(value);
                    ReportPropertyChanging("IDUTILISATEUR");
                    _IDUTILISATEUR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUTILISATEUR");
                    OnIDUTILISATEURChanged();
                }
            }
        }
        private global::System.Int32 _IDUTILISATEUR;
        partial void OnIDUTILISATEURChanging(global::System.Int32 value);
        partial void OnIDUTILISATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SUPPRIME
        {
            get
            {
                return _SUPPRIME;
            }
            set
            {
                OnSUPPRIMEChanging(value);
                ReportPropertyChanging("SUPPRIME");
                _SUPPRIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUPPRIME");
                OnSUPPRIMEChanged();
            }
        }
        private global::System.Boolean _SUPPRIME;
        partial void OnSUPPRIMEChanging(global::System.Boolean value);
        partial void OnSUPPRIMEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SUPPRIMEDEFINITIF
        {
            get
            {
                return _SUPPRIMEDEFINITIF;
            }
            set
            {
                OnSUPPRIMEDEFINITIFChanging(value);
                ReportPropertyChanging("SUPPRIMEDEFINITIF");
                _SUPPRIMEDEFINITIF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUPPRIMEDEFINITIF");
                OnSUPPRIMEDEFINITIFChanged();
            }
        }
        private global::System.Boolean _SUPPRIMEDEFINITIF;
        partial void OnSUPPRIMEDEFINITIFChanging(global::System.Boolean value);
        partial void OnSUPPRIMEDEFINITIFChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LU
        {
            get
            {
                return _LU;
            }
            set
            {
                OnLUChanging(value);
                ReportPropertyChanging("LU");
                _LU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LU");
                OnLUChanged();
            }
        }
        private global::System.Boolean _LU;
        partial void OnLUChanging(global::System.Boolean value);
        partial void OnLUChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE")]
        public MESSAGEPRIVE MESSAGEPRIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MESSAGEPRIVE> MESSAGEPRIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MESSAGEPRIVE>("MVPModel.FK_DESTMESS_MESSPRIVE", "MESSAGEPRIVE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_DESTMESS_UTIL", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_DESTMESS_UTIL", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_DESTMESS_UTIL", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_DESTMESS_UTIL", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_DESTMESS_UTIL", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="ECOLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ECOLE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet ECOLE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="pROVINCE">Valeur initiale de la propriété PROVINCE.</param>
        public static ECOLE CreateECOLE(global::System.Int32 id, global::System.String nOM, global::System.String pROVINCE)
        {
            ECOLE eCOLE = new ECOLE();
            eCOLE.ID = id;
            eCOLE.NOM = nOM;
            eCOLE.PROVINCE = pROVINCE;
            return eCOLE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PROVINCE
        {
            get
            {
                return _PROVINCE;
            }
            set
            {
                OnPROVINCEChanging(value);
                ReportPropertyChanging("PROVINCE");
                _PROVINCE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PROVINCE");
                OnPROVINCEChanged();
            }
        }
        private global::System.String _PROVINCE;
        partial void OnPROVINCEChanging(global::System.String value);
        partial void OnPROVINCEChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTIL_ECOLE", "UTILISATEUR")]
        public EntityCollection<UTILISATEUR> UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UTILISATEUR>("MVPModel.FK_UTIL_ECOLE", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UTILISATEUR>("MVPModel.FK_UTIL_ECOLE", "UTILISATEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "ECOLESECTEUR", "SECTEUR")]
        public EntityCollection<SECTEUR> SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SECTEUR>("MVPModel.ECOLESECTEUR", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SECTEUR>("MVPModel.ECOLESECTEUR", "SECTEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="EVENEMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EVENEMENT : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet EVENEMENT.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="dATEEVEN">Valeur initiale de la propriété DATEEVEN.</param>
        /// <param name="iDCATEGORIE">Valeur initiale de la propriété IDCATEGORIE.</param>
        /// <param name="iDCREATEUR">Valeur initiale de la propriété IDCREATEUR.</param>
        public static EVENEMENT CreateEVENEMENT(global::System.Int32 id, global::System.String nOM, global::System.DateTime dATEEVEN, global::System.Int32 iDCATEGORIE, global::System.Int32 iDCREATEUR)
        {
            EVENEMENT eVENEMENT = new EVENEMENT();
            eVENEMENT.ID = id;
            eVENEMENT.NOM = nOM;
            eVENEMENT.DATEEVEN = dATEEVEN;
            eVENEMENT.IDCATEGORIE = iDCATEGORIE;
            eVENEMENT.IDCREATEUR = iDCREATEUR;
            return eVENEMENT;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEEVEN
        {
            get
            {
                return _DATEEVEN;
            }
            set
            {
                OnDATEEVENChanging(value);
                ReportPropertyChanging("DATEEVEN");
                _DATEEVEN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEEVEN");
                OnDATEEVENChanged();
            }
        }
        private global::System.DateTime _DATEEVEN;
        partial void OnDATEEVENChanging(global::System.DateTime value);
        partial void OnDATEEVENChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREDEBUT
        {
            get
            {
                return _HEUREDEBUT;
            }
            set
            {
                OnHEUREDEBUTChanging(value);
                ReportPropertyChanging("HEUREDEBUT");
                _HEUREDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREDEBUT");
                OnHEUREDEBUTChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREDEBUT;
        partial void OnHEUREDEBUTChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREFIN
        {
            get
            {
                return _HEUREFIN;
            }
            set
            {
                OnHEUREFINChanging(value);
                ReportPropertyChanging("HEUREFIN");
                _HEUREFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREFIN");
                OnHEUREFINChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREFIN;
        partial void OnHEUREFINChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCATEGORIE
        {
            get
            {
                return _IDCATEGORIE;
            }
            set
            {
                OnIDCATEGORIEChanging(value);
                ReportPropertyChanging("IDCATEGORIE");
                _IDCATEGORIE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCATEGORIE");
                OnIDCATEGORIEChanged();
            }
        }
        private global::System.Int32 _IDCATEGORIE;
        partial void OnIDCATEGORIEChanging(global::System.Int32 value);
        partial void OnIDCATEGORIEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCREATEUR
        {
            get
            {
                return _IDCREATEUR;
            }
            set
            {
                OnIDCREATEURChanging(value);
                ReportPropertyChanging("IDCREATEUR");
                _IDCREATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCREATEUR");
                OnIDCREATEURChanged();
            }
        }
        private global::System.Int32 _IDCREATEUR;
        partial void OnIDCREATEURChanging(global::System.Int32 value);
        partial void OnIDCREATEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_EVEN_CATE", "CATEGORIEEVENEMENT")]
        public CATEGORIEEVENEMENT CATEGORIEEVENEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORIEEVENEMENT>("MVPModel.FK_EVEN_CATE", "CATEGORIEEVENEMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORIEEVENEMENT>("MVPModel.FK_EVEN_CATE", "CATEGORIEEVENEMENT").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORIEEVENEMENT> CATEGORIEEVENEMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORIEEVENEMENT>("MVPModel.FK_EVEN_CATE", "CATEGORIEEVENEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORIEEVENEMENT>("MVPModel.FK_EVEN_CATE", "CATEGORIEEVENEMENT", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_EVEN_UTIl", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_EVEN_UTIl", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_EVEN_UTIl", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_EVEN_UTIl", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_EVEN_UTIl", "UTILISATEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "EVENEMENTSECTEUR", "SECTEUR")]
        public EntityCollection<SECTEUR> SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SECTEUR>("MVPModel.EVENEMENTSECTEUR", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SECTEUR>("MVPModel.EVENEMENTSECTEUR", "SECTEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="FILDISCUSSION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FILDISCUSSION : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet FILDISCUSSION.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        /// <param name="nBLECTURES">Valeur initiale de la propriété NBLECTURES.</param>
        public static FILDISCUSSION CreateFILDISCUSSION(global::System.Int32 id, global::System.String sUJET, global::System.DateTime dATEPUBLICATION, global::System.Int32 nBLECTURES)
        {
            FILDISCUSSION fILDISCUSSION = new FILDISCUSSION();
            fILDISCUSSION.ID = id;
            fILDISCUSSION.SUJET = sUJET;
            fILDISCUSSION.DATEPUBLICATION = dATEPUBLICATION;
            fILDISCUSSION.NBLECTURES = nBLECTURES;
            return fILDISCUSSION;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEMODIFICATION
        {
            get
            {
                return _DATEMODIFICATION;
            }
            set
            {
                OnDATEMODIFICATIONChanging(value);
                ReportPropertyChanging("DATEMODIFICATION");
                _DATEMODIFICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEMODIFICATION");
                OnDATEMODIFICATIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEMODIFICATION;
        partial void OnDATEMODIFICATIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEMODIFICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NBLECTURES
        {
            get
            {
                return _NBLECTURES;
            }
            set
            {
                OnNBLECTURESChanging(value);
                ReportPropertyChanging("NBLECTURES");
                _NBLECTURES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NBLECTURES");
                OnNBLECTURESChanged();
            }
        }
        private global::System.Int32 _NBLECTURES;
        partial void OnNBLECTURESChanging(global::System.Int32 value);
        partial void OnNBLECTURESChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDFORUM
        {
            get
            {
                return _IDFORUM;
            }
            set
            {
                OnIDFORUMChanging(value);
                ReportPropertyChanging("IDFORUM");
                _IDFORUM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDFORUM");
                OnIDFORUMChanged();
            }
        }
        private Nullable<global::System.Int32> _IDFORUM;
        partial void OnIDFORUMChanging(Nullable<global::System.Int32> value);
        partial void OnIDFORUMChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_FILDISC_FORUM", "FORUM")]
        public FORUM FORUM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FORUM>("MVPModel.FK_FILDISC_FORUM", "FORUM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FORUM>("MVPModel.FK_FILDISC_FORUM", "FORUM").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FORUM> FORUMReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FORUM>("MVPModel.FK_FILDISC_FORUM", "FORUM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FORUM>("MVPModel.FK_FILDISC_FORUM", "FORUM", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESS_FILDISC", "MESSAGEFORUM")]
        public EntityCollection<MESSAGEFORUM> MESSAGEFORUM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MESSAGEFORUM>("MVPModel.FK_MESS_FILDISC", "MESSAGEFORUM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MESSAGEFORUM>("MVPModel.FK_MESS_FILDISC", "MESSAGEFORUM", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="FORUM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FORUM : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet FORUM.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static FORUM CreateFORUM(global::System.Int32 id, global::System.String tITRE, global::System.Int32 iDSECTEUR)
        {
            FORUM fORUM = new FORUM();
            fORUM.ID = id;
            fORUM.TITRE = tITRE;
            fORUM.IDSECTEUR = iDSECTEUR;
            return fORUM;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_FILDISC_FORUM", "FILDISCUSSION")]
        public EntityCollection<FILDISCUSSION> FILDISCUSSION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FILDISCUSSION>("MVPModel.FK_FILDISC_FORUM", "FILDISCUSSION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FILDISCUSSION>("MVPModel.FK_FILDISC_FORUM", "FILDISCUSSION", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_FORUM_SECT", "SECTEUR")]
        public SECTEUR SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_FORUM_SECT", "SECTEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_FORUM_SECT", "SECTEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SECTEUR> SECTEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_FORUM_SECT", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SECTEUR>("MVPModel.FK_FORUM_SECT", "SECTEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="MESSAGEFORUM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MESSAGEFORUM : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet MESSAGEFORUM.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="iDUTILISATEUR">Valeur initiale de la propriété IDUTILISATEUR.</param>
        /// <param name="iDFILDISCUSSION">Valeur initiale de la propriété IDFILDISCUSSION.</param>
        public static MESSAGEFORUM CreateMESSAGEFORUM(global::System.Int32 id, global::System.DateTime dATEPUBLICATION, global::System.String cONTENU, global::System.Int32 iDUTILISATEUR, global::System.Int32 iDFILDISCUSSION)
        {
            MESSAGEFORUM mESSAGEFORUM = new MESSAGEFORUM();
            mESSAGEFORUM.ID = id;
            mESSAGEFORUM.DATEPUBLICATION = dATEPUBLICATION;
            mESSAGEFORUM.CONTENU = cONTENU;
            mESSAGEFORUM.IDUTILISATEUR = iDUTILISATEUR;
            mESSAGEFORUM.IDFILDISCUSSION = iDFILDISCUSSION;
            return mESSAGEFORUM;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEMODIFICATION
        {
            get
            {
                return _DATEMODIFICATION;
            }
            set
            {
                OnDATEMODIFICATIONChanging(value);
                ReportPropertyChanging("DATEMODIFICATION");
                _DATEMODIFICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEMODIFICATION");
                OnDATEMODIFICATIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEMODIFICATION;
        partial void OnDATEMODIFICATIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEMODIFICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUTILISATEUR
        {
            get
            {
                return _IDUTILISATEUR;
            }
            set
            {
                OnIDUTILISATEURChanging(value);
                ReportPropertyChanging("IDUTILISATEUR");
                _IDUTILISATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUTILISATEUR");
                OnIDUTILISATEURChanged();
            }
        }
        private global::System.Int32 _IDUTILISATEUR;
        partial void OnIDUTILISATEURChanging(global::System.Int32 value);
        partial void OnIDUTILISATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDFILDISCUSSION
        {
            get
            {
                return _IDFILDISCUSSION;
            }
            set
            {
                OnIDFILDISCUSSIONChanging(value);
                ReportPropertyChanging("IDFILDISCUSSION");
                _IDFILDISCUSSION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDFILDISCUSSION");
                OnIDFILDISCUSSIONChanged();
            }
        }
        private global::System.Int32 _IDFILDISCUSSION;
        partial void OnIDFILDISCUSSIONChanging(global::System.Int32 value);
        partial void OnIDFILDISCUSSIONChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESS_FILDISC", "FILDISCUSSION")]
        public FILDISCUSSION FILDISCUSSION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILDISCUSSION>("MVPModel.FK_MESS_FILDISC", "FILDISCUSSION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILDISCUSSION>("MVPModel.FK_MESS_FILDISC", "FILDISCUSSION").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FILDISCUSSION> FILDISCUSSIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FILDISCUSSION>("MVPModel.FK_MESS_FILDISC", "FILDISCUSSION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FILDISCUSSION>("MVPModel.FK_MESS_FILDISC", "FILDISCUSSION", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESS_UTIL", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESS_UTIL", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESS_UTIL", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESS_UTIL", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_MESS_UTIL", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="MESSAGEPRIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MESSAGEPRIVE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet MESSAGEPRIVE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="iDEXPEDITEUR">Valeur initiale de la propriété IDEXPEDITEUR.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="dATEENVOI">Valeur initiale de la propriété DATEENVOI.</param>
        /// <param name="sUPPRIME">Valeur initiale de la propriété SUPPRIME.</param>
        /// <param name="sUPPRIMEDEFINITIF">Valeur initiale de la propriété SUPPRIMEDEFINITIF.</param>
        public static MESSAGEPRIVE CreateMESSAGEPRIVE(global::System.Int32 id, global::System.Int32 iDEXPEDITEUR, global::System.String sUJET, global::System.String cONTENU, global::System.DateTime dATEENVOI, global::System.Boolean sUPPRIME, global::System.Boolean sUPPRIMEDEFINITIF)
        {
            MESSAGEPRIVE mESSAGEPRIVE = new MESSAGEPRIVE();
            mESSAGEPRIVE.ID = id;
            mESSAGEPRIVE.IDEXPEDITEUR = iDEXPEDITEUR;
            mESSAGEPRIVE.SUJET = sUJET;
            mESSAGEPRIVE.CONTENU = cONTENU;
            mESSAGEPRIVE.DATEENVOI = dATEENVOI;
            mESSAGEPRIVE.SUPPRIME = sUPPRIME;
            mESSAGEPRIVE.SUPPRIMEDEFINITIF = sUPPRIMEDEFINITIF;
            return mESSAGEPRIVE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDEXPEDITEUR
        {
            get
            {
                return _IDEXPEDITEUR;
            }
            set
            {
                OnIDEXPEDITEURChanging(value);
                ReportPropertyChanging("IDEXPEDITEUR");
                _IDEXPEDITEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDEXPEDITEUR");
                OnIDEXPEDITEURChanged();
            }
        }
        private global::System.Int32 _IDEXPEDITEUR;
        partial void OnIDEXPEDITEURChanging(global::System.Int32 value);
        partial void OnIDEXPEDITEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEENVOI
        {
            get
            {
                return _DATEENVOI;
            }
            set
            {
                OnDATEENVOIChanging(value);
                ReportPropertyChanging("DATEENVOI");
                _DATEENVOI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEENVOI");
                OnDATEENVOIChanged();
            }
        }
        private global::System.DateTime _DATEENVOI;
        partial void OnDATEENVOIChanging(global::System.DateTime value);
        partial void OnDATEENVOIChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SUPPRIME
        {
            get
            {
                return _SUPPRIME;
            }
            set
            {
                OnSUPPRIMEChanging(value);
                ReportPropertyChanging("SUPPRIME");
                _SUPPRIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUPPRIME");
                OnSUPPRIMEChanged();
            }
        }
        private global::System.Boolean _SUPPRIME;
        partial void OnSUPPRIMEChanging(global::System.Boolean value);
        partial void OnSUPPRIMEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SUPPRIMEDEFINITIF
        {
            get
            {
                return _SUPPRIMEDEFINITIF;
            }
            set
            {
                OnSUPPRIMEDEFINITIFChanging(value);
                ReportPropertyChanging("SUPPRIMEDEFINITIF");
                _SUPPRIMEDEFINITIF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SUPPRIMEDEFINITIF");
                OnSUPPRIMEDEFINITIFChanged();
            }
        }
        private global::System.Boolean _SUPPRIMEDEFINITIF;
        partial void OnSUPPRIMEDEFINITIFChanging(global::System.Boolean value);
        partial void OnSUPPRIMEDEFINITIFChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_DESTMESS_MESSPRIVE", "DESTINATAIREMESSAGE")]
        public EntityCollection<DESTINATAIREMESSAGE> DESTINATAIREMESSAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DESTINATAIREMESSAGE>("MVPModel.FK_DESTMESS_MESSPRIVE", "DESTINATAIREMESSAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DESTINATAIREMESSAGE>("MVPModel.FK_DESTMESS_MESSPRIVE", "DESTINATAIREMESSAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESSPRIV_EXPED", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESSPRIV_EXPED", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESSPRIV_EXPED", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_MESSPRIV_EXPED", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_MESSPRIV_EXPED", "UTILISATEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PIECEJOINTE_MESS", "PIECEJOINTE")]
        public EntityCollection<PIECEJOINTE> PIECEJOINTE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PIECEJOINTE>("MVPModel.FK_PIECEJOINTE_MESS", "PIECEJOINTE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PIECEJOINTE>("MVPModel.FK_PIECEJOINTE_MESS", "PIECEJOINTE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="MOTCLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOTCLE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet MOTCLE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="vALEUR">Valeur initiale de la propriété VALEUR.</param>
        public static MOTCLE CreateMOTCLE(global::System.Int32 id, global::System.String vALEUR)
        {
            MOTCLE mOTCLE = new MOTCLE();
            mOTCLE.ID = id;
            mOTCLE.VALEUR = vALEUR;
            return mOTCLE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALEUR
        {
            get
            {
                return _VALEUR;
            }
            set
            {
                OnVALEURChanging(value);
                ReportPropertyChanging("VALEUR");
                _VALEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALEUR");
                OnVALEURChanged();
            }
        }
        private global::System.String _VALEUR;
        partial void OnVALEURChanging(global::System.String value);
        partial void OnVALEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "MOTCLEPUBLICATION", "PUBLICATION")]
        public EntityCollection<PUBLICATION> PUBLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PUBLICATION>("MVPModel.MOTCLEPUBLICATION", "PUBLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PUBLICATION>("MVPModel.MOTCLEPUBLICATION", "PUBLICATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="NOUVELLE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NOUVELLE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet NOUVELLE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        public static NOUVELLE CreateNOUVELLE(global::System.Int32 id, global::System.String tITRE, global::System.String dESCRIPTION, global::System.DateTime dATEPUBLICATION)
        {
            NOUVELLE nOUVELLE = new NOUVELLE();
            nOUVELLE.ID = id;
            nOUVELLE.TITRE = tITRE;
            nOUVELLE.DESCRIPTION = dESCRIPTION;
            nOUVELLE.DATEPUBLICATION = dATEPUBLICATION;
            return nOUVELLE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="PARTENAIRE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PARTENAIRE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet PARTENAIRE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="rAISONSOCIALE">Valeur initiale de la propriété RAISONSOCIALE.</param>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        public static PARTENAIRE CreatePARTENAIRE(global::System.Int32 id, global::System.String nOM, global::System.String rAISONSOCIALE, global::System.String cOURRIEL)
        {
            PARTENAIRE pARTENAIRE = new PARTENAIRE();
            pARTENAIRE.ID = id;
            pARTENAIRE.NOM = nOM;
            pARTENAIRE.RAISONSOCIALE = rAISONSOCIALE;
            pARTENAIRE.COURRIEL = cOURRIEL;
            return pARTENAIRE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RAISONSOCIALE
        {
            get
            {
                return _RAISONSOCIALE;
            }
            set
            {
                OnRAISONSOCIALEChanging(value);
                ReportPropertyChanging("RAISONSOCIALE");
                _RAISONSOCIALE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RAISONSOCIALE");
                OnRAISONSOCIALEChanged();
            }
        }
        private global::System.String _RAISONSOCIALE;
        partial void OnRAISONSOCIALEChanging(global::System.String value);
        partial void OnRAISONSOCIALEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAYS
        {
            get
            {
                return _PAYS;
            }
            set
            {
                OnPAYSChanging(value);
                ReportPropertyChanging("PAYS");
                _PAYS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAYS");
                OnPAYSChanged();
            }
        }
        private global::System.String _PAYS;
        partial void OnPAYSChanging(global::System.String value);
        partial void OnPAYSChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TELEPHONE
        {
            get
            {
                return _TELEPHONE;
            }
            set
            {
                OnTELEPHONEChanging(value);
                ReportPropertyChanging("TELEPHONE");
                _TELEPHONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TELEPHONE");
                OnTELEPHONEChanged();
            }
        }
        private global::System.String _TELEPHONE;
        partial void OnTELEPHONEChanging(global::System.String value);
        partial void OnTELEPHONEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SITEWEB
        {
            get
            {
                return _SITEWEB;
            }
            set
            {
                OnSITEWEBChanging(value);
                ReportPropertyChanging("SITEWEB");
                _SITEWEB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SITEWEB");
                OnSITEWEBChanged();
            }
        }
        private global::System.String _SITEWEB;
        partial void OnSITEWEBChanging(global::System.String value);
        partial void OnSITEWEBChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="PIECEJOINTE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PIECEJOINTE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet PIECEJOINTE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="iDMESSAGE">Valeur initiale de la propriété IDMESSAGE.</param>
        /// <param name="pIECESERIALISEE">Valeur initiale de la propriété PIECESERIALISEE.</param>
        /// <param name="tAILLEPIECE">Valeur initiale de la propriété TAILLEPIECE.</param>
        /// <param name="nOMPIECE">Valeur initiale de la propriété NOMPIECE.</param>
        public static PIECEJOINTE CreatePIECEJOINTE(global::System.Int32 id, global::System.Int32 iDMESSAGE, global::System.Byte[] pIECESERIALISEE, global::System.String tAILLEPIECE, global::System.String nOMPIECE)
        {
            PIECEJOINTE pIECEJOINTE = new PIECEJOINTE();
            pIECEJOINTE.ID = id;
            pIECEJOINTE.IDMESSAGE = iDMESSAGE;
            pIECEJOINTE.PIECESERIALISEE = pIECESERIALISEE;
            pIECEJOINTE.TAILLEPIECE = tAILLEPIECE;
            pIECEJOINTE.NOMPIECE = nOMPIECE;
            return pIECEJOINTE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMESSAGE
        {
            get
            {
                return _IDMESSAGE;
            }
            set
            {
                OnIDMESSAGEChanging(value);
                ReportPropertyChanging("IDMESSAGE");
                _IDMESSAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMESSAGE");
                OnIDMESSAGEChanged();
            }
        }
        private global::System.Int32 _IDMESSAGE;
        partial void OnIDMESSAGEChanging(global::System.Int32 value);
        partial void OnIDMESSAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PIECESERIALISEE
        {
            get
            {
                return StructuralObject.GetValidValue(_PIECESERIALISEE);
            }
            set
            {
                OnPIECESERIALISEEChanging(value);
                ReportPropertyChanging("PIECESERIALISEE");
                _PIECESERIALISEE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PIECESERIALISEE");
                OnPIECESERIALISEEChanged();
            }
        }
        private global::System.Byte[] _PIECESERIALISEE;
        partial void OnPIECESERIALISEEChanging(global::System.Byte[] value);
        partial void OnPIECESERIALISEEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TAILLEPIECE
        {
            get
            {
                return _TAILLEPIECE;
            }
            set
            {
                OnTAILLEPIECEChanging(value);
                ReportPropertyChanging("TAILLEPIECE");
                _TAILLEPIECE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TAILLEPIECE");
                OnTAILLEPIECEChanged();
            }
        }
        private global::System.String _TAILLEPIECE;
        partial void OnTAILLEPIECEChanging(global::System.String value);
        partial void OnTAILLEPIECEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMPIECE
        {
            get
            {
                return _NOMPIECE;
            }
            set
            {
                OnNOMPIECEChanging(value);
                ReportPropertyChanging("NOMPIECE");
                _NOMPIECE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMPIECE");
                OnNOMPIECEChanged();
            }
        }
        private global::System.String _NOMPIECE;
        partial void OnNOMPIECEChanging(global::System.String value);
        partial void OnNOMPIECEChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PIECEJOINTE_MESS", "MESSAGEPRIVE")]
        public MESSAGEPRIVE MESSAGEPRIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_PIECEJOINTE_MESS", "MESSAGEPRIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_PIECEJOINTE_MESS", "MESSAGEPRIVE").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MESSAGEPRIVE> MESSAGEPRIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MESSAGEPRIVE>("MVPModel.FK_PIECEJOINTE_MESS", "MESSAGEPRIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MESSAGEPRIVE>("MVPModel.FK_PIECEJOINTE_MESS", "MESSAGEPRIVE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="PUBLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PUBLICATION : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet PUBLICATION.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dATECREATION">Valeur initiale de la propriété DATECREATION.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="eMPLACEMENTSERVEUR">Valeur initiale de la propriété EMPLACEMENTSERVEUR.</param>
        /// <param name="iDPUBLICATEUR">Valeur initiale de la propriété IDPUBLICATEUR.</param>
        /// <param name="tYPEMIME">Valeur initiale de la propriété TYPEMIME.</param>
        /// <param name="iDSUJET">Valeur initiale de la propriété IDSUJET.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static PUBLICATION CreatePUBLICATION(global::System.Int32 id, global::System.String tITRE, global::System.DateTime dATECREATION, global::System.String dESCRIPTION, global::System.String eMPLACEMENTSERVEUR, global::System.Int32 iDPUBLICATEUR, global::System.String tYPEMIME, global::System.Int32 iDSUJET, global::System.Int32 iDSECTEUR)
        {
            PUBLICATION pUBLICATION = new PUBLICATION();
            pUBLICATION.ID = id;
            pUBLICATION.TITRE = tITRE;
            pUBLICATION.DATECREATION = dATECREATION;
            pUBLICATION.DESCRIPTION = dESCRIPTION;
            pUBLICATION.EMPLACEMENTSERVEUR = eMPLACEMENTSERVEUR;
            pUBLICATION.IDPUBLICATEUR = iDPUBLICATEUR;
            pUBLICATION.TYPEMIME = tYPEMIME;
            pUBLICATION.IDSUJET = iDSUJET;
            pUBLICATION.IDSECTEUR = iDSECTEUR;
            return pUBLICATION;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATECREATION
        {
            get
            {
                return _DATECREATION;
            }
            set
            {
                OnDATECREATIONChanging(value);
                ReportPropertyChanging("DATECREATION");
                _DATECREATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATECREATION");
                OnDATECREATIONChanged();
            }
        }
        private global::System.DateTime _DATECREATION;
        partial void OnDATECREATIONChanging(global::System.DateTime value);
        partial void OnDATECREATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMPLACEMENTSERVEUR
        {
            get
            {
                return _EMPLACEMENTSERVEUR;
            }
            set
            {
                OnEMPLACEMENTSERVEURChanging(value);
                ReportPropertyChanging("EMPLACEMENTSERVEUR");
                _EMPLACEMENTSERVEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMPLACEMENTSERVEUR");
                OnEMPLACEMENTSERVEURChanged();
            }
        }
        private global::System.String _EMPLACEMENTSERVEUR;
        partial void OnEMPLACEMENTSERVEURChanging(global::System.String value);
        partial void OnEMPLACEMENTSERVEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPUBLICATEUR
        {
            get
            {
                return _IDPUBLICATEUR;
            }
            set
            {
                OnIDPUBLICATEURChanging(value);
                ReportPropertyChanging("IDPUBLICATEUR");
                _IDPUBLICATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPUBLICATEUR");
                OnIDPUBLICATEURChanged();
            }
        }
        private global::System.Int32 _IDPUBLICATEUR;
        partial void OnIDPUBLICATEURChanging(global::System.Int32 value);
        partial void OnIDPUBLICATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPEMIME
        {
            get
            {
                return _TYPEMIME;
            }
            set
            {
                OnTYPEMIMEChanging(value);
                ReportPropertyChanging("TYPEMIME");
                _TYPEMIME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TYPEMIME");
                OnTYPEMIMEChanged();
            }
        }
        private global::System.String _TYPEMIME;
        partial void OnTYPEMIMEChanging(global::System.String value);
        partial void OnTYPEMIMEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSUJET
        {
            get
            {
                return _IDSUJET;
            }
            set
            {
                OnIDSUJETChanging(value);
                ReportPropertyChanging("IDSUJET");
                _IDSUJET = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSUJET");
                OnIDSUJETChanged();
            }
        }
        private global::System.Int32 _IDSUJET;
        partial void OnIDSUJETChanging(global::System.Int32 value);
        partial void OnIDSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_SECT", "SECTEUR")]
        public SECTEUR SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_PUB_SECT", "SECTEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_PUB_SECT", "SECTEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SECTEUR> SECTEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_PUB_SECT", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SECTEUR>("MVPModel.FK_PUB_SECT", "SECTEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_SUJET", "SUJETPUBLICATION")]
        public SUJETPUBLICATION SUJETPUBLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUJETPUBLICATION>("MVPModel.FK_PUB_SUJET", "SUJETPUBLICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUJETPUBLICATION>("MVPModel.FK_PUB_SUJET", "SUJETPUBLICATION").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SUJETPUBLICATION> SUJETPUBLICATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SUJETPUBLICATION>("MVPModel.FK_PUB_SUJET", "SUJETPUBLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SUJETPUBLICATION>("MVPModel.FK_PUB_SUJET", "SUJETPUBLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_UTIL", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_PUB_UTIL", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_PUB_UTIL", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_PUB_UTIL", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_PUB_UTIL", "UTILISATEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "MOTCLEPUBLICATION", "MOTCLE")]
        public EntityCollection<MOTCLE> MOTCLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOTCLE>("MVPModel.MOTCLEPUBLICATION", "MOTCLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOTCLE>("MVPModel.MOTCLEPUBLICATION", "MOTCLE", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="SECTEUR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SECTEUR : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet SECTEUR.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="tITREACCUEIL">Valeur initiale de la propriété TITREACCUEIL.</param>
        /// <param name="tEXTEACCUEIL">Valeur initiale de la propriété TEXTEACCUEIL.</param>
        /// <param name="uRLIMAGEACCUEIL">Valeur initiale de la propriété URLIMAGEACCUEIL.</param>
        public static SECTEUR CreateSECTEUR(global::System.Int32 id, global::System.String nOM, global::System.String tITREACCUEIL, global::System.String tEXTEACCUEIL, global::System.String uRLIMAGEACCUEIL)
        {
            SECTEUR sECTEUR = new SECTEUR();
            sECTEUR.ID = id;
            sECTEUR.NOM = nOM;
            sECTEUR.TITREACCUEIL = tITREACCUEIL;
            sECTEUR.TEXTEACCUEIL = tEXTEACCUEIL;
            sECTEUR.URLIMAGEACCUEIL = uRLIMAGEACCUEIL;
            return sECTEUR;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITREACCUEIL
        {
            get
            {
                return _TITREACCUEIL;
            }
            set
            {
                OnTITREACCUEILChanging(value);
                ReportPropertyChanging("TITREACCUEIL");
                _TITREACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITREACCUEIL");
                OnTITREACCUEILChanged();
            }
        }
        private global::System.String _TITREACCUEIL;
        partial void OnTITREACCUEILChanging(global::System.String value);
        partial void OnTITREACCUEILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TEXTEACCUEIL
        {
            get
            {
                return _TEXTEACCUEIL;
            }
            set
            {
                OnTEXTEACCUEILChanging(value);
                ReportPropertyChanging("TEXTEACCUEIL");
                _TEXTEACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TEXTEACCUEIL");
                OnTEXTEACCUEILChanged();
            }
        }
        private global::System.String _TEXTEACCUEIL;
        partial void OnTEXTEACCUEILChanging(global::System.String value);
        partial void OnTEXTEACCUEILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URLIMAGEACCUEIL
        {
            get
            {
                return _URLIMAGEACCUEIL;
            }
            set
            {
                OnURLIMAGEACCUEILChanging(value);
                ReportPropertyChanging("URLIMAGEACCUEIL");
                _URLIMAGEACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URLIMAGEACCUEIL");
                OnURLIMAGEACCUEILChanged();
            }
        }
        private global::System.String _URLIMAGEACCUEIL;
        partial void OnURLIMAGEACCUEILChanging(global::System.String value);
        partial void OnURLIMAGEACCUEILChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_FORUM_SECT", "FORUM")]
        public EntityCollection<FORUM> FORUM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FORUM>("MVPModel.FK_FORUM_SECT", "FORUM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FORUM>("MVPModel.FK_FORUM_SECT", "FORUM", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_SECT", "PUBLICATION")]
        public EntityCollection<PUBLICATION> PUBLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_SECT", "PUBLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_SECT", "PUBLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_SOND_SECT", "SONDAGE")]
        public EntityCollection<SONDAGE> SONDAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SONDAGE>("MVPModel.FK_SOND_SECT", "SONDAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SONDAGE>("MVPModel.FK_SOND_SECT", "SONDAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTILSECT_SECT", "UTILISATEURSECTEUR")]
        public EntityCollection<UTILISATEURSECTEUR> UTILISATEURSECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UTILISATEURSECTEUR>("MVPModel.FK_UTILSECT_SECT", "UTILISATEURSECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UTILISATEURSECTEUR>("MVPModel.FK_UTILSECT_SECT", "UTILISATEURSECTEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "ECOLESECTEUR", "ECOLE")]
        public EntityCollection<ECOLE> ECOLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ECOLE>("MVPModel.ECOLESECTEUR", "ECOLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ECOLE>("MVPModel.ECOLESECTEUR", "ECOLE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "EVENEMENTSECTEUR", "EVENEMENT")]
        public EntityCollection<EVENEMENT> EVENEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENEMENT>("MVPModel.EVENEMENTSECTEUR", "EVENEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENEMENT>("MVPModel.EVENEMENTSECTEUR", "EVENEMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="SONDAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SONDAGE : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet SONDAGE.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="qUESTION">Valeur initiale de la propriété QUESTION.</param>
        /// <param name="dATEDEBUT">Valeur initiale de la propriété DATEDEBUT.</param>
        /// <param name="dATEFIN">Valeur initiale de la propriété DATEFIN.</param>
        /// <param name="iDCREATEUR">Valeur initiale de la propriété IDCREATEUR.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static SONDAGE CreateSONDAGE(global::System.Int32 id, global::System.String nOM, global::System.String qUESTION, global::System.DateTime dATEDEBUT, global::System.DateTime dATEFIN, global::System.Int32 iDCREATEUR, global::System.Int32 iDSECTEUR)
        {
            SONDAGE sONDAGE = new SONDAGE();
            sONDAGE.ID = id;
            sONDAGE.NOM = nOM;
            sONDAGE.QUESTION = qUESTION;
            sONDAGE.DATEDEBUT = dATEDEBUT;
            sONDAGE.DATEFIN = dATEFIN;
            sONDAGE.IDCREATEUR = iDCREATEUR;
            sONDAGE.IDSECTEUR = iDSECTEUR;
            return sONDAGE;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUESTION
        {
            get
            {
                return _QUESTION;
            }
            set
            {
                OnQUESTIONChanging(value);
                ReportPropertyChanging("QUESTION");
                _QUESTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QUESTION");
                OnQUESTIONChanged();
            }
        }
        private global::System.String _QUESTION;
        partial void OnQUESTIONChanging(global::System.String value);
        partial void OnQUESTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEDEBUT
        {
            get
            {
                return _DATEDEBUT;
            }
            set
            {
                OnDATEDEBUTChanging(value);
                ReportPropertyChanging("DATEDEBUT");
                _DATEDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEDEBUT");
                OnDATEDEBUTChanged();
            }
        }
        private global::System.DateTime _DATEDEBUT;
        partial void OnDATEDEBUTChanging(global::System.DateTime value);
        partial void OnDATEDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEFIN
        {
            get
            {
                return _DATEFIN;
            }
            set
            {
                OnDATEFINChanging(value);
                ReportPropertyChanging("DATEFIN");
                _DATEFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEFIN");
                OnDATEFINChanged();
            }
        }
        private global::System.DateTime _DATEFIN;
        partial void OnDATEFINChanging(global::System.DateTime value);
        partial void OnDATEFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCREATEUR
        {
            get
            {
                return _IDCREATEUR;
            }
            set
            {
                OnIDCREATEURChanging(value);
                ReportPropertyChanging("IDCREATEUR");
                _IDCREATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCREATEUR");
                OnIDCREATEURChanged();
            }
        }
        private global::System.Int32 _IDCREATEUR;
        partial void OnIDCREATEURChanging(global::System.Int32 value);
        partial void OnIDCREATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_CHOIXSOND_SOND", "CHOIXSONDAGE")]
        public EntityCollection<CHOIXSONDAGE> CHOIXSONDAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CHOIXSONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "CHOIXSONDAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CHOIXSONDAGE>("MVPModel.FK_CHOIXSOND_SOND", "CHOIXSONDAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_SOND_SECT", "SECTEUR")]
        public SECTEUR SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_SOND_SECT", "SECTEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_SOND_SECT", "SECTEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SECTEUR> SECTEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_SOND_SECT", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SECTEUR>("MVPModel.FK_SOND_SECT", "SECTEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_SOND_CREATEUR", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_SOND_CREATEUR", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_SOND_CREATEUR", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_SOND_CREATEUR", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_SOND_CREATEUR", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="SUJETPUBLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SUJETPUBLICATION : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet SUJETPUBLICATION.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        public static SUJETPUBLICATION CreateSUJETPUBLICATION(global::System.Int32 id, global::System.String nOM)
        {
            SUJETPUBLICATION sUJETPUBLICATION = new SUJETPUBLICATION();
            sUJETPUBLICATION.ID = id;
            sUJETPUBLICATION.NOM = nOM;
            return sUJETPUBLICATION;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_SUJET", "PUBLICATION")]
        public EntityCollection<PUBLICATION> PUBLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_SUJET", "PUBLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_SUJET", "PUBLICATION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet sysdiagrams.
        /// </summary>
        /// <param name="name">Valeur initiale de la propriété name.</param>
        /// <param name="principal_id">Valeur initiale de la propriété principal_id.</param>
        /// <param name="diagram_id">Valeur initiale de la propriété diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="UTILISATEUR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UTILISATEUR : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet UTILISATEUR.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        /// <param name="pRENOM">Valeur initiale de la propriété PRENOM.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="aDRESSE">Valeur initiale de la propriété ADRESSE.</param>
        /// <param name="vILLE">Valeur initiale de la propriété VILLE.</param>
        /// <param name="dATENAISSANCE">Valeur initiale de la propriété DATENAISSANCE.</param>
        /// <param name="lANGUE">Valeur initiale de la propriété LANGUE.</param>
        /// <param name="iDECOLE">Valeur initiale de la propriété IDECOLE.</param>
        public static UTILISATEUR CreateUTILISATEUR(global::System.Int32 id, global::System.String nOMUTIL, global::System.String cOURRIEL, global::System.String pRENOM, global::System.String nOM, global::System.String aDRESSE, global::System.String vILLE, global::System.DateTime dATENAISSANCE, global::System.String lANGUE, global::System.Int32 iDECOLE)
        {
            UTILISATEUR uTILISATEUR = new UTILISATEUR();
            uTILISATEUR.ID = id;
            uTILISATEUR.NOMUTIL = nOMUTIL;
            uTILISATEUR.COURRIEL = cOURRIEL;
            uTILISATEUR.PRENOM = pRENOM;
            uTILISATEUR.NOM = nOM;
            uTILISATEUR.ADRESSE = aDRESSE;
            uTILISATEUR.VILLE = vILLE;
            uTILISATEUR.DATENAISSANCE = dATENAISSANCE;
            uTILISATEUR.LANGUE = lANGUE;
            uTILISATEUR.IDECOLE = iDECOLE;
            return uTILISATEUR;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PRENOM
        {
            get
            {
                return _PRENOM;
            }
            set
            {
                OnPRENOMChanging(value);
                ReportPropertyChanging("PRENOM");
                _PRENOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PRENOM");
                OnPRENOMChanged();
            }
        }
        private global::System.String _PRENOM;
        partial void OnPRENOMChanging(global::System.String value);
        partial void OnPRENOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATENAISSANCE
        {
            get
            {
                return _DATENAISSANCE;
            }
            set
            {
                OnDATENAISSANCEChanging(value);
                ReportPropertyChanging("DATENAISSANCE");
                _DATENAISSANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATENAISSANCE");
                OnDATENAISSANCEChanged();
            }
        }
        private global::System.DateTime _DATENAISSANCE;
        partial void OnDATENAISSANCEChanging(global::System.DateTime value);
        partial void OnDATENAISSANCEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DERNIERECONNEXION
        {
            get
            {
                return _DERNIERECONNEXION;
            }
            set
            {
                OnDERNIERECONNEXIONChanging(value);
                ReportPropertyChanging("DERNIERECONNEXION");
                _DERNIERECONNEXION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DERNIERECONNEXION");
                OnDERNIERECONNEXIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DERNIERECONNEXION;
        partial void OnDERNIERECONNEXIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDERNIERECONNEXIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LANGUE
        {
            get
            {
                return _LANGUE;
            }
            set
            {
                OnLANGUEChanging(value);
                ReportPropertyChanging("LANGUE");
                _LANGUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LANGUE");
                OnLANGUEChanged();
            }
        }
        private global::System.String _LANGUE;
        partial void OnLANGUEChanging(global::System.String value);
        partial void OnLANGUEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDECOLE
        {
            get
            {
                return _IDECOLE;
            }
            set
            {
                OnIDECOLEChanging(value);
                ReportPropertyChanging("IDECOLE");
                _IDECOLE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDECOLE");
                OnIDECOLEChanged();
            }
        }
        private global::System.Int32 _IDECOLE;
        partial void OnIDECOLEChanging(global::System.Int32 value);
        partial void OnIDECOLEChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_DESTMESS_UTIL", "DESTINATAIREMESSAGE")]
        public EntityCollection<DESTINATAIREMESSAGE> DESTINATAIREMESSAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DESTINATAIREMESSAGE>("MVPModel.FK_DESTMESS_UTIL", "DESTINATAIREMESSAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DESTINATAIREMESSAGE>("MVPModel.FK_DESTMESS_UTIL", "DESTINATAIREMESSAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTIL_ECOLE", "ECOLE")]
        public ECOLE ECOLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ECOLE>("MVPModel.FK_UTIL_ECOLE", "ECOLE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ECOLE>("MVPModel.FK_UTIL_ECOLE", "ECOLE").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ECOLE> ECOLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ECOLE>("MVPModel.FK_UTIL_ECOLE", "ECOLE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ECOLE>("MVPModel.FK_UTIL_ECOLE", "ECOLE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_EVEN_UTIl", "EVENEMENT")]
        public EntityCollection<EVENEMENT> EVENEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EVENEMENT>("MVPModel.FK_EVEN_UTIl", "EVENEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EVENEMENT>("MVPModel.FK_EVEN_UTIl", "EVENEMENT", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESS_UTIL", "MESSAGEFORUM")]
        public EntityCollection<MESSAGEFORUM> MESSAGEFORUM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MESSAGEFORUM>("MVPModel.FK_MESS_UTIL", "MESSAGEFORUM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MESSAGEFORUM>("MVPModel.FK_MESS_UTIL", "MESSAGEFORUM", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_MESSPRIV_EXPED", "MESSAGEPRIVE")]
        public EntityCollection<MESSAGEPRIVE> MESSAGEPRIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MESSAGEPRIVE>("MVPModel.FK_MESSPRIV_EXPED", "MESSAGEPRIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MESSAGEPRIVE>("MVPModel.FK_MESSPRIV_EXPED", "MESSAGEPRIVE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_PUB_UTIL", "PUBLICATION")]
        public EntityCollection<PUBLICATION> PUBLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_UTIL", "PUBLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PUBLICATION>("MVPModel.FK_PUB_UTIL", "PUBLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_SOND_CREATEUR", "SONDAGE")]
        public EntityCollection<SONDAGE> SONDAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SONDAGE>("MVPModel.FK_SOND_CREATEUR", "SONDAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SONDAGE>("MVPModel.FK_SOND_CREATEUR", "SONDAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTILSECT_UTIL", "UTILISATEURSECTEUR")]
        public EntityCollection<UTILISATEURSECTEUR> UTILISATEURSECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UTILISATEURSECTEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEURSECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UTILISATEURSECTEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEURSECTEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "VOTESONDAGE", "CHOIXSONDAGE")]
        public EntityCollection<CHOIXSONDAGE> CHOIXSONDAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CHOIXSONDAGE>("MVPModel.VOTESONDAGE", "CHOIXSONDAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CHOIXSONDAGE>("MVPModel.VOTESONDAGE", "CHOIXSONDAGE", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "webpages_UsersInRoles", "webpages_Roles")]
        public EntityCollection<webpages_Roles> webpages_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<webpages_Roles>("MVPModel.webpages_UsersInRoles", "webpages_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<webpages_Roles>("MVPModel.webpages_UsersInRoles", "webpages_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="UTILISATEURSECTEUR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UTILISATEURSECTEUR : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet UTILISATEURSECTEUR.
        /// </summary>
        /// <param name="iDUTILISATEUR">Valeur initiale de la propriété IDUTILISATEUR.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        /// <param name="dEBUTACCES">Valeur initiale de la propriété DEBUTACCES.</param>
        /// <param name="fINACCES">Valeur initiale de la propriété FINACCES.</param>
        public static UTILISATEURSECTEUR CreateUTILISATEURSECTEUR(global::System.Int32 iDUTILISATEUR, global::System.Int32 iDSECTEUR, global::System.DateTime dEBUTACCES, global::System.DateTime fINACCES)
        {
            UTILISATEURSECTEUR uTILISATEURSECTEUR = new UTILISATEURSECTEUR();
            uTILISATEURSECTEUR.IDUTILISATEUR = iDUTILISATEUR;
            uTILISATEURSECTEUR.IDSECTEUR = iDSECTEUR;
            uTILISATEURSECTEUR.DEBUTACCES = dEBUTACCES;
            uTILISATEURSECTEUR.FINACCES = fINACCES;
            return uTILISATEURSECTEUR;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUTILISATEUR
        {
            get
            {
                return _IDUTILISATEUR;
            }
            set
            {
                if (_IDUTILISATEUR != value)
                {
                    OnIDUTILISATEURChanging(value);
                    ReportPropertyChanging("IDUTILISATEUR");
                    _IDUTILISATEUR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDUTILISATEUR");
                    OnIDUTILISATEURChanged();
                }
            }
        }
        private global::System.Int32 _IDUTILISATEUR;
        partial void OnIDUTILISATEURChanging(global::System.Int32 value);
        partial void OnIDUTILISATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                if (_IDSECTEUR != value)
                {
                    OnIDSECTEURChanging(value);
                    ReportPropertyChanging("IDSECTEUR");
                    _IDSECTEUR = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDSECTEUR");
                    OnIDSECTEURChanged();
                }
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DEBUTACCES
        {
            get
            {
                return _DEBUTACCES;
            }
            set
            {
                OnDEBUTACCESChanging(value);
                ReportPropertyChanging("DEBUTACCES");
                _DEBUTACCES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEBUTACCES");
                OnDEBUTACCESChanged();
            }
        }
        private global::System.DateTime _DEBUTACCES;
        partial void OnDEBUTACCESChanging(global::System.DateTime value);
        partial void OnDEBUTACCESChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FINACCES
        {
            get
            {
                return _FINACCES;
            }
            set
            {
                OnFINACCESChanging(value);
                ReportPropertyChanging("FINACCES");
                _FINACCES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FINACCES");
                OnFINACCESChanged();
            }
        }
        private global::System.DateTime _FINACCES;
        partial void OnFINACCESChanging(global::System.DateTime value);
        partial void OnFINACCESChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTILSECT_SECT", "SECTEUR")]
        public SECTEUR SECTEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_UTILSECT_SECT", "SECTEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_UTILSECT_SECT", "SECTEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SECTEUR> SECTEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SECTEUR>("MVPModel.FK_UTILSECT_SECT", "SECTEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SECTEUR>("MVPModel.FK_UTILSECT_SECT", "SECTEUR", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "FK_UTILSECT_UTIL", "UTILISATEUR")]
        public UTILISATEUR UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEUR").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UTILISATEUR> UTILISATEURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UTILISATEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UTILISATEUR>("MVPModel.FK_UTILSECT_UTIL", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="webpages_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Membership : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet webpages_Membership.
        /// </summary>
        /// <param name="userId">Valeur initiale de la propriété UserId.</param>
        /// <param name="passwordFailuresSinceLastSuccess">Valeur initiale de la propriété PasswordFailuresSinceLastSuccess.</param>
        /// <param name="password">Valeur initiale de la propriété Password.</param>
        /// <param name="passwordSalt">Valeur initiale de la propriété PasswordSalt.</param>
        public static webpages_Membership Createwebpages_Membership(global::System.Int32 userId, global::System.Int32 passwordFailuresSinceLastSuccess, global::System.String password, global::System.String passwordSalt)
        {
            webpages_Membership webpages_Membership = new webpages_Membership();
            webpages_Membership.UserId = userId;
            webpages_Membership.PasswordFailuresSinceLastSuccess = passwordFailuresSinceLastSuccess;
            webpages_Membership.Password = password;
            webpages_Membership.PasswordSalt = passwordSalt;
            return webpages_Membership;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private global::System.Int32 _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(global::System.Int32 value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="webpages_OAuthMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_OAuthMembership : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet webpages_OAuthMembership.
        /// </summary>
        /// <param name="provider">Valeur initiale de la propriété Provider.</param>
        /// <param name="providerUserId">Valeur initiale de la propriété ProviderUserId.</param>
        /// <param name="userId">Valeur initiale de la propriété UserId.</param>
        public static webpages_OAuthMembership Createwebpages_OAuthMembership(global::System.String provider, global::System.String providerUserId, global::System.Int32 userId)
        {
            webpages_OAuthMembership webpages_OAuthMembership = new webpages_OAuthMembership();
            webpages_OAuthMembership.Provider = provider;
            webpages_OAuthMembership.ProviderUserId = providerUserId;
            webpages_OAuthMembership.UserId = userId;
            return webpages_OAuthMembership;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                if (_Provider != value)
                {
                    OnProviderChanging(value);
                    ReportPropertyChanging("Provider");
                    _Provider = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Provider");
                    OnProviderChanged();
                }
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                if (_ProviderUserId != value)
                {
                    OnProviderUserIdChanging(value);
                    ReportPropertyChanging("ProviderUserId");
                    _ProviderUserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderUserId");
                    OnProviderUserIdChanged();
                }
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MVPModel", Name="webpages_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Roles : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet webpages_Roles.
        /// </summary>
        /// <param name="roleId">Valeur initiale de la propriété RoleId.</param>
        /// <param name="roleName">Valeur initiale de la propriété RoleName.</param>
        public static webpages_Roles Createwebpages_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            webpages_Roles webpages_Roles = new webpages_Roles();
            webpages_Roles.RoleId = roleId;
            webpages_Roles.RoleName = roleName;
            return webpages_Roles;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MVPModel", "webpages_UsersInRoles", "UTILISATEUR")]
        public EntityCollection<UTILISATEUR> UTILISATEUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UTILISATEUR>("MVPModel.webpages_UsersInRoles", "UTILISATEUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UTILISATEUR>("MVPModel.webpages_UsersInRoles", "UTILISATEUR", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetContenu_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetContenu_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetContenu_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="pAGE">Valeur initiale de la propriété PAGE.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="tITRE_TRAD">Valeur initiale de la propriété TITRE_TRAD.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="cONTENU_TRAD">Valeur initiale de la propriété CONTENU_TRAD.</param>
        public static GetContenu_Result CreateGetContenu_Result(global::System.Int32 id, global::System.String pAGE, global::System.String tITRE, global::System.String tITRE_TRAD, global::System.String cONTENU, global::System.String cONTENU_TRAD)
        {
            GetContenu_Result getContenu_Result = new GetContenu_Result();
            getContenu_Result.ID = id;
            getContenu_Result.PAGE = pAGE;
            getContenu_Result.TITRE = tITRE;
            getContenu_Result.TITRE_TRAD = tITRE_TRAD;
            getContenu_Result.CONTENU = cONTENU;
            getContenu_Result.CONTENU_TRAD = cONTENU_TRAD;
            return getContenu_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PAGE
        {
            get
            {
                return _PAGE;
            }
            set
            {
                OnPAGEChanging(value);
                ReportPropertyChanging("PAGE");
                _PAGE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PAGE");
                OnPAGEChanged();
            }
        }
        private global::System.String _PAGE;
        partial void OnPAGEChanging(global::System.String value);
        partial void OnPAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE_TRAD
        {
            get
            {
                return _TITRE_TRAD;
            }
            set
            {
                OnTITRE_TRADChanging(value);
                ReportPropertyChanging("TITRE_TRAD");
                _TITRE_TRAD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE_TRAD");
                OnTITRE_TRADChanged();
            }
        }
        private global::System.String _TITRE_TRAD;
        partial void OnTITRE_TRADChanging(global::System.String value);
        partial void OnTITRE_TRADChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU_TRAD
        {
            get
            {
                return _CONTENU_TRAD;
            }
            set
            {
                OnCONTENU_TRADChanging(value);
                ReportPropertyChanging("CONTENU_TRAD");
                _CONTENU_TRAD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU_TRAD");
                OnCONTENU_TRADChanged();
            }
        }
        private global::System.String _CONTENU_TRAD;
        partial void OnCONTENU_TRADChanging(global::System.String value);
        partial void OnCONTENU_TRADChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLIMAGE
        {
            get
            {
                return _URLIMAGE;
            }
            set
            {
                OnURLIMAGEChanging(value);
                ReportPropertyChanging("URLIMAGE");
                _URLIMAGE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLIMAGE");
                OnURLIMAGEChanged();
            }
        }
        private global::System.String _URLIMAGE;
        partial void OnURLIMAGEChanging(global::System.String value);
        partial void OnURLIMAGEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetEven_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetEven_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetEven_Result.
        /// </summary>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="dATEEVEN">Valeur initiale de la propriété DATEEVEN.</param>
        /// <param name="nOMCATE">Valeur initiale de la propriété NOMCATE.</param>
        public static GetEven_Result CreateGetEven_Result(global::System.String nOM, global::System.DateTime dATEEVEN, global::System.String nOMCATE)
        {
            GetEven_Result getEven_Result = new GetEven_Result();
            getEven_Result.NOM = nOM;
            getEven_Result.DATEEVEN = dATEEVEN;
            getEven_Result.NOMCATE = nOMCATE;
            return getEven_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEEVEN
        {
            get
            {
                return _DATEEVEN;
            }
            set
            {
                OnDATEEVENChanging(value);
                ReportPropertyChanging("DATEEVEN");
                _DATEEVEN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEEVEN");
                OnDATEEVENChanged();
            }
        }
        private global::System.DateTime _DATEEVEN;
        partial void OnDATEEVENChanging(global::System.DateTime value);
        partial void OnDATEEVENChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREDEBUT
        {
            get
            {
                return _HEUREDEBUT;
            }
            set
            {
                OnHEUREDEBUTChanging(value);
                ReportPropertyChanging("HEUREDEBUT");
                _HEUREDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREDEBUT");
                OnHEUREDEBUTChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREDEBUT;
        partial void OnHEUREDEBUTChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREFIN
        {
            get
            {
                return _HEUREFIN;
            }
            set
            {
                OnHEUREFINChanging(value);
                ReportPropertyChanging("HEUREFIN");
                _HEUREFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREFIN");
                OnHEUREFINChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREFIN;
        partial void OnHEUREFINChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMCATE
        {
            get
            {
                return _NOMCATE;
            }
            set
            {
                OnNOMCATEChanging(value);
                ReportPropertyChanging("NOMCATE");
                _NOMCATE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMCATE");
                OnNOMCATEChanged();
            }
        }
        private global::System.String _NOMCATE;
        partial void OnNOMCATEChanging(global::System.String value);
        partial void OnNOMCATEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetEvents_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetEvents_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetEvents_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="dATEEVEN">Valeur initiale de la propriété DATEEVEN.</param>
        /// <param name="iDCATEGORIE">Valeur initiale de la propriété IDCATEGORIE.</param>
        /// <param name="iDCREATEUR">Valeur initiale de la propriété IDCREATEUR.</param>
        /// <param name="iDEVENEMENT">Valeur initiale de la propriété IDEVENEMENT.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        /// <param name="iD1">Valeur initiale de la propriété ID1.</param>
        /// <param name="nOM1">Valeur initiale de la propriété NOM1.</param>
        public static GetEvents_Result CreateGetEvents_Result(global::System.Int32 id, global::System.String nOM, global::System.DateTime dATEEVEN, global::System.Int32 iDCATEGORIE, global::System.Int32 iDCREATEUR, global::System.Int32 iDEVENEMENT, global::System.Int32 iDSECTEUR, global::System.Int32 iD1, global::System.String nOM1)
        {
            GetEvents_Result getEvents_Result = new GetEvents_Result();
            getEvents_Result.ID = id;
            getEvents_Result.NOM = nOM;
            getEvents_Result.DATEEVEN = dATEEVEN;
            getEvents_Result.IDCATEGORIE = iDCATEGORIE;
            getEvents_Result.IDCREATEUR = iDCREATEUR;
            getEvents_Result.IDEVENEMENT = iDEVENEMENT;
            getEvents_Result.IDSECTEUR = iDSECTEUR;
            getEvents_Result.ID1 = iD1;
            getEvents_Result.NOM1 = nOM1;
            return getEvents_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEEVEN
        {
            get
            {
                return _DATEEVEN;
            }
            set
            {
                OnDATEEVENChanging(value);
                ReportPropertyChanging("DATEEVEN");
                _DATEEVEN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEEVEN");
                OnDATEEVENChanged();
            }
        }
        private global::System.DateTime _DATEEVEN;
        partial void OnDATEEVENChanging(global::System.DateTime value);
        partial void OnDATEEVENChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREDEBUT
        {
            get
            {
                return _HEUREDEBUT;
            }
            set
            {
                OnHEUREDEBUTChanging(value);
                ReportPropertyChanging("HEUREDEBUT");
                _HEUREDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREDEBUT");
                OnHEUREDEBUTChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREDEBUT;
        partial void OnHEUREDEBUTChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> HEUREFIN
        {
            get
            {
                return _HEUREFIN;
            }
            set
            {
                OnHEUREFINChanging(value);
                ReportPropertyChanging("HEUREFIN");
                _HEUREFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEUREFIN");
                OnHEUREFINChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _HEUREFIN;
        partial void OnHEUREFINChanging(Nullable<global::System.TimeSpan> value);
        partial void OnHEUREFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCATEGORIE
        {
            get
            {
                return _IDCATEGORIE;
            }
            set
            {
                OnIDCATEGORIEChanging(value);
                ReportPropertyChanging("IDCATEGORIE");
                _IDCATEGORIE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCATEGORIE");
                OnIDCATEGORIEChanged();
            }
        }
        private global::System.Int32 _IDCATEGORIE;
        partial void OnIDCATEGORIEChanging(global::System.Int32 value);
        partial void OnIDCATEGORIEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCREATEUR
        {
            get
            {
                return _IDCREATEUR;
            }
            set
            {
                OnIDCREATEURChanging(value);
                ReportPropertyChanging("IDCREATEUR");
                _IDCREATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDCREATEUR");
                OnIDCREATEURChanged();
            }
        }
        private global::System.Int32 _IDCREATEUR;
        partial void OnIDCREATEURChanging(global::System.Int32 value);
        partial void OnIDCREATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDEVENEMENT
        {
            get
            {
                return _IDEVENEMENT;
            }
            set
            {
                OnIDEVENEMENTChanging(value);
                ReportPropertyChanging("IDEVENEMENT");
                _IDEVENEMENT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDEVENEMENT");
                OnIDEVENEMENTChanged();
            }
        }
        private global::System.Int32 _IDEVENEMENT;
        partial void OnIDEVENEMENTChanging(global::System.Int32 value);
        partial void OnIDEVENEMENTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID1
        {
            get
            {
                return _ID1;
            }
            set
            {
                OnID1Changing(value);
                ReportPropertyChanging("ID1");
                _ID1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID1");
                OnID1Changed();
            }
        }
        private global::System.Int32 _ID1;
        partial void OnID1Changing(global::System.Int32 value);
        partial void OnID1Changed();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM1
        {
            get
            {
                return _NOM1;
            }
            set
            {
                OnNOM1Changing(value);
                ReportPropertyChanging("NOM1");
                _NOM1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM1");
                OnNOM1Changed();
            }
        }
        private global::System.String _NOM1;
        partial void OnNOM1Changing(global::System.String value);
        partial void OnNOM1Changed();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetFilDiscussion_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFilDiscussion_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetFilDiscussion_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        /// <param name="nBLECTURES">Valeur initiale de la propriété NBLECTURES.</param>
        public static GetFilDiscussion_Result CreateGetFilDiscussion_Result(global::System.Int32 id, global::System.String sUJET, global::System.DateTime dATEPUBLICATION, global::System.Int32 nBLECTURES)
        {
            GetFilDiscussion_Result getFilDiscussion_Result = new GetFilDiscussion_Result();
            getFilDiscussion_Result.ID = id;
            getFilDiscussion_Result.SUJET = sUJET;
            getFilDiscussion_Result.DATEPUBLICATION = dATEPUBLICATION;
            getFilDiscussion_Result.NBLECTURES = nBLECTURES;
            return getFilDiscussion_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEMODIFICATION
        {
            get
            {
                return _DATEMODIFICATION;
            }
            set
            {
                OnDATEMODIFICATIONChanging(value);
                ReportPropertyChanging("DATEMODIFICATION");
                _DATEMODIFICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEMODIFICATION");
                OnDATEMODIFICATIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEMODIFICATION;
        partial void OnDATEMODIFICATIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEMODIFICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NBLECTURES
        {
            get
            {
                return _NBLECTURES;
            }
            set
            {
                OnNBLECTURESChanging(value);
                ReportPropertyChanging("NBLECTURES");
                _NBLECTURES = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NBLECTURES");
                OnNBLECTURESChanged();
            }
        }
        private global::System.Int32 _NBLECTURES;
        partial void OnNBLECTURESChanging(global::System.Int32 value);
        partial void OnNBLECTURESChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDFORUM
        {
            get
            {
                return _IDFORUM;
            }
            set
            {
                OnIDFORUMChanging(value);
                ReportPropertyChanging("IDFORUM");
                _IDFORUM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDFORUM");
                OnIDFORUMChanged();
            }
        }
        private Nullable<global::System.Int32> _IDFORUM;
        partial void OnIDFORUMChanging(Nullable<global::System.Int32> value);
        partial void OnIDFORUMChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetForum_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetForum_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetForum_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static GetForum_Result CreateGetForum_Result(global::System.Int32 id, global::System.String tITRE, global::System.Int32 iDSECTEUR)
        {
            GetForum_Result getForum_Result = new GetForum_Result();
            getForum_Result.ID = id;
            getForum_Result.TITRE = tITRE;
            getForum_Result.IDSECTEUR = iDSECTEUR;
            return getForum_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetMessage_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMessage_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetMessage_Result.
        /// </summary>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="dATEENVOI">Valeur initiale de la propriété DATEENVOI.</param>
        /// <param name="nOMEXPED">Valeur initiale de la propriété NOMEXPED.</param>
        public static GetMessage_Result CreateGetMessage_Result(global::System.String sUJET, global::System.String cONTENU, global::System.DateTime dATEENVOI, global::System.String nOMEXPED)
        {
            GetMessage_Result getMessage_Result = new GetMessage_Result();
            getMessage_Result.SUJET = sUJET;
            getMessage_Result.CONTENU = cONTENU;
            getMessage_Result.DATEENVOI = dATEENVOI;
            getMessage_Result.NOMEXPED = nOMEXPED;
            return getMessage_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEENVOI
        {
            get
            {
                return _DATEENVOI;
            }
            set
            {
                OnDATEENVOIChanging(value);
                ReportPropertyChanging("DATEENVOI");
                _DATEENVOI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEENVOI");
                OnDATEENVOIChanged();
            }
        }
        private global::System.DateTime _DATEENVOI;
        partial void OnDATEENVOIChanging(global::System.DateTime value);
        partial void OnDATEENVOIChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPIECE
        {
            get
            {
                return _IDPIECE;
            }
            set
            {
                OnIDPIECEChanging(value);
                ReportPropertyChanging("IDPIECE");
                _IDPIECE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPIECE");
                OnIDPIECEChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPIECE;
        partial void OnIDPIECEChanging(Nullable<global::System.Int32> value);
        partial void OnIDPIECEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NOMPIECE
        {
            get
            {
                return _NOMPIECE;
            }
            set
            {
                OnNOMPIECEChanging(value);
                ReportPropertyChanging("NOMPIECE");
                _NOMPIECE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NOMPIECE");
                OnNOMPIECEChanged();
            }
        }
        private global::System.String _NOMPIECE;
        partial void OnNOMPIECEChanging(global::System.String value);
        partial void OnNOMPIECEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TAILLEPIECE
        {
            get
            {
                return _TAILLEPIECE;
            }
            set
            {
                OnTAILLEPIECEChanging(value);
                ReportPropertyChanging("TAILLEPIECE");
                _TAILLEPIECE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TAILLEPIECE");
                OnTAILLEPIECEChanged();
            }
        }
        private global::System.String _TAILLEPIECE;
        partial void OnTAILLEPIECEChanging(global::System.String value);
        partial void OnTAILLEPIECEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMEXPED
        {
            get
            {
                return _NOMEXPED;
            }
            set
            {
                OnNOMEXPEDChanging(value);
                ReportPropertyChanging("NOMEXPED");
                _NOMEXPED = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMEXPED");
                OnNOMEXPEDChanged();
            }
        }
        private global::System.String _NOMEXPED;
        partial void OnNOMEXPEDChanging(global::System.String value);
        partial void OnNOMEXPEDChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetMessagesEnvoyes_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMessagesEnvoyes_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetMessagesEnvoyes_Result.
        /// </summary>
        /// <param name="iDMESSAGE">Valeur initiale de la propriété IDMESSAGE.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="dATEENVOI">Valeur initiale de la propriété DATEENVOI.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        public static GetMessagesEnvoyes_Result CreateGetMessagesEnvoyes_Result(global::System.Int32 iDMESSAGE, global::System.String cONTENU, global::System.DateTime dATEENVOI, global::System.String sUJET)
        {
            GetMessagesEnvoyes_Result getMessagesEnvoyes_Result = new GetMessagesEnvoyes_Result();
            getMessagesEnvoyes_Result.IDMESSAGE = iDMESSAGE;
            getMessagesEnvoyes_Result.CONTENU = cONTENU;
            getMessagesEnvoyes_Result.DATEENVOI = dATEENVOI;
            getMessagesEnvoyes_Result.SUJET = sUJET;
            return getMessagesEnvoyes_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMESSAGE
        {
            get
            {
                return _IDMESSAGE;
            }
            set
            {
                OnIDMESSAGEChanging(value);
                ReportPropertyChanging("IDMESSAGE");
                _IDMESSAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMESSAGE");
                OnIDMESSAGEChanged();
            }
        }
        private global::System.Int32 _IDMESSAGE;
        partial void OnIDMESSAGEChanging(global::System.Int32 value);
        partial void OnIDMESSAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEENVOI
        {
            get
            {
                return _DATEENVOI;
            }
            set
            {
                OnDATEENVOIChanging(value);
                ReportPropertyChanging("DATEENVOI");
                _DATEENVOI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEENVOI");
                OnDATEENVOIChanged();
            }
        }
        private global::System.DateTime _DATEENVOI;
        partial void OnDATEENVOIChanging(global::System.DateTime value);
        partial void OnDATEENVOIChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPIECE
        {
            get
            {
                return _IDPIECE;
            }
            set
            {
                OnIDPIECEChanging(value);
                ReportPropertyChanging("IDPIECE");
                _IDPIECE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPIECE");
                OnIDPIECEChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPIECE;
        partial void OnIDPIECEChanging(Nullable<global::System.Int32> value);
        partial void OnIDPIECEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetMessagesForum_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMessagesForum_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetMessagesForum_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="iDUTILISATEUR">Valeur initiale de la propriété IDUTILISATEUR.</param>
        /// <param name="iDFILDISCUSSION">Valeur initiale de la propriété IDFILDISCUSSION.</param>
        public static GetMessagesForum_Result CreateGetMessagesForum_Result(global::System.Int32 id, global::System.DateTime dATEPUBLICATION, global::System.String cONTENU, global::System.Int32 iDUTILISATEUR, global::System.Int32 iDFILDISCUSSION)
        {
            GetMessagesForum_Result getMessagesForum_Result = new GetMessagesForum_Result();
            getMessagesForum_Result.ID = id;
            getMessagesForum_Result.DATEPUBLICATION = dATEPUBLICATION;
            getMessagesForum_Result.CONTENU = cONTENU;
            getMessagesForum_Result.IDUTILISATEUR = iDUTILISATEUR;
            getMessagesForum_Result.IDFILDISCUSSION = iDFILDISCUSSION;
            return getMessagesForum_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEMODIFICATION
        {
            get
            {
                return _DATEMODIFICATION;
            }
            set
            {
                OnDATEMODIFICATIONChanging(value);
                ReportPropertyChanging("DATEMODIFICATION");
                _DATEMODIFICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEMODIFICATION");
                OnDATEMODIFICATIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEMODIFICATION;
        partial void OnDATEMODIFICATIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEMODIFICATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUTILISATEUR
        {
            get
            {
                return _IDUTILISATEUR;
            }
            set
            {
                OnIDUTILISATEURChanging(value);
                ReportPropertyChanging("IDUTILISATEUR");
                _IDUTILISATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUTILISATEUR");
                OnIDUTILISATEURChanged();
            }
        }
        private global::System.Int32 _IDUTILISATEUR;
        partial void OnIDUTILISATEURChanging(global::System.Int32 value);
        partial void OnIDUTILISATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDFILDISCUSSION
        {
            get
            {
                return _IDFILDISCUSSION;
            }
            set
            {
                OnIDFILDISCUSSIONChanging(value);
                ReportPropertyChanging("IDFILDISCUSSION");
                _IDFILDISCUSSION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDFILDISCUSSION");
                OnIDFILDISCUSSIONChanged();
            }
        }
        private global::System.Int32 _IDFILDISCUSSION;
        partial void OnIDFILDISCUSSIONChanging(global::System.Int32 value);
        partial void OnIDFILDISCUSSIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetMessagesPrives_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMessagesPrives_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetMessagesPrives_Result.
        /// </summary>
        /// <param name="iDMESSAGE">Valeur initiale de la propriété IDMESSAGE.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="dATEENVOI">Valeur initiale de la propriété DATEENVOI.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="lU">Valeur initiale de la propriété LU.</param>
        /// <param name="nOMEXPED">Valeur initiale de la propriété NOMEXPED.</param>
        public static GetMessagesPrives_Result CreateGetMessagesPrives_Result(global::System.Int32 iDMESSAGE, global::System.String cONTENU, global::System.DateTime dATEENVOI, global::System.String sUJET, global::System.Boolean lU, global::System.String nOMEXPED)
        {
            GetMessagesPrives_Result getMessagesPrives_Result = new GetMessagesPrives_Result();
            getMessagesPrives_Result.IDMESSAGE = iDMESSAGE;
            getMessagesPrives_Result.CONTENU = cONTENU;
            getMessagesPrives_Result.DATEENVOI = dATEENVOI;
            getMessagesPrives_Result.SUJET = sUJET;
            getMessagesPrives_Result.LU = lU;
            getMessagesPrives_Result.NOMEXPED = nOMEXPED;
            return getMessagesPrives_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMESSAGE
        {
            get
            {
                return _IDMESSAGE;
            }
            set
            {
                OnIDMESSAGEChanging(value);
                ReportPropertyChanging("IDMESSAGE");
                _IDMESSAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMESSAGE");
                OnIDMESSAGEChanged();
            }
        }
        private global::System.Int32 _IDMESSAGE;
        partial void OnIDMESSAGEChanging(global::System.Int32 value);
        partial void OnIDMESSAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEENVOI
        {
            get
            {
                return _DATEENVOI;
            }
            set
            {
                OnDATEENVOIChanging(value);
                ReportPropertyChanging("DATEENVOI");
                _DATEENVOI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEENVOI");
                OnDATEENVOIChanged();
            }
        }
        private global::System.DateTime _DATEENVOI;
        partial void OnDATEENVOIChanging(global::System.DateTime value);
        partial void OnDATEENVOIChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LU
        {
            get
            {
                return _LU;
            }
            set
            {
                OnLUChanging(value);
                ReportPropertyChanging("LU");
                _LU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LU");
                OnLUChanged();
            }
        }
        private global::System.Boolean _LU;
        partial void OnLUChanging(global::System.Boolean value);
        partial void OnLUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPIECEJOINTE
        {
            get
            {
                return _IDPIECEJOINTE;
            }
            set
            {
                OnIDPIECEJOINTEChanging(value);
                ReportPropertyChanging("IDPIECEJOINTE");
                _IDPIECEJOINTE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPIECEJOINTE");
                OnIDPIECEJOINTEChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPIECEJOINTE;
        partial void OnIDPIECEJOINTEChanging(Nullable<global::System.Int32> value);
        partial void OnIDPIECEJOINTEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMEXPED
        {
            get
            {
                return _NOMEXPED;
            }
            set
            {
                OnNOMEXPEDChanging(value);
                ReportPropertyChanging("NOMEXPED");
                _NOMEXPED = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMEXPED");
                OnNOMEXPEDChanged();
            }
        }
        private global::System.String _NOMEXPED;
        partial void OnNOMEXPEDChanging(global::System.String value);
        partial void OnNOMEXPEDChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetMessagesSupprimes_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMessagesSupprimes_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetMessagesSupprimes_Result.
        /// </summary>
        /// <param name="iDMESSAGE">Valeur initiale de la propriété IDMESSAGE.</param>
        /// <param name="cONTENU">Valeur initiale de la propriété CONTENU.</param>
        /// <param name="dATEENVOI">Valeur initiale de la propriété DATEENVOI.</param>
        /// <param name="sUJET">Valeur initiale de la propriété SUJET.</param>
        /// <param name="nOMEXPED">Valeur initiale de la propriété NOMEXPED.</param>
        public static GetMessagesSupprimes_Result CreateGetMessagesSupprimes_Result(global::System.Int32 iDMESSAGE, global::System.String cONTENU, global::System.DateTime dATEENVOI, global::System.String sUJET, global::System.String nOMEXPED)
        {
            GetMessagesSupprimes_Result getMessagesSupprimes_Result = new GetMessagesSupprimes_Result();
            getMessagesSupprimes_Result.IDMESSAGE = iDMESSAGE;
            getMessagesSupprimes_Result.CONTENU = cONTENU;
            getMessagesSupprimes_Result.DATEENVOI = dATEENVOI;
            getMessagesSupprimes_Result.SUJET = sUJET;
            getMessagesSupprimes_Result.NOMEXPED = nOMEXPED;
            return getMessagesSupprimes_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMESSAGE
        {
            get
            {
                return _IDMESSAGE;
            }
            set
            {
                OnIDMESSAGEChanging(value);
                ReportPropertyChanging("IDMESSAGE");
                _IDMESSAGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMESSAGE");
                OnIDMESSAGEChanged();
            }
        }
        private global::System.Int32 _IDMESSAGE;
        partial void OnIDMESSAGEChanging(global::System.Int32 value);
        partial void OnIDMESSAGEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CONTENU
        {
            get
            {
                return _CONTENU;
            }
            set
            {
                OnCONTENUChanging(value);
                ReportPropertyChanging("CONTENU");
                _CONTENU = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CONTENU");
                OnCONTENUChanged();
            }
        }
        private global::System.String _CONTENU;
        partial void OnCONTENUChanging(global::System.String value);
        partial void OnCONTENUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEENVOI
        {
            get
            {
                return _DATEENVOI;
            }
            set
            {
                OnDATEENVOIChanging(value);
                ReportPropertyChanging("DATEENVOI");
                _DATEENVOI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEENVOI");
                OnDATEENVOIChanged();
            }
        }
        private global::System.DateTime _DATEENVOI;
        partial void OnDATEENVOIChanging(global::System.DateTime value);
        partial void OnDATEENVOIChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUJET
        {
            get
            {
                return _SUJET;
            }
            set
            {
                OnSUJETChanging(value);
                ReportPropertyChanging("SUJET");
                _SUJET = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUJET");
                OnSUJETChanged();
            }
        }
        private global::System.String _SUJET;
        partial void OnSUJETChanging(global::System.String value);
        partial void OnSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LU
        {
            get
            {
                return _LU;
            }
            set
            {
                OnLUChanging(value);
                ReportPropertyChanging("LU");
                _LU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LU");
                OnLUChanged();
            }
        }
        private Nullable<global::System.Boolean> _LU;
        partial void OnLUChanging(Nullable<global::System.Boolean> value);
        partial void OnLUChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPIECE
        {
            get
            {
                return _IDPIECE;
            }
            set
            {
                OnIDPIECEChanging(value);
                ReportPropertyChanging("IDPIECE");
                _IDPIECE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPIECE");
                OnIDPIECEChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPIECE;
        partial void OnIDPIECEChanging(Nullable<global::System.Int32> value);
        partial void OnIDPIECEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMEXPED
        {
            get
            {
                return _NOMEXPED;
            }
            set
            {
                OnNOMEXPEDChanging(value);
                ReportPropertyChanging("NOMEXPED");
                _NOMEXPED = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMEXPED");
                OnNOMEXPEDChanged();
            }
        }
        private global::System.String _NOMEXPED;
        partial void OnNOMEXPEDChanging(global::System.String value);
        partial void OnNOMEXPEDChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetNouvelle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetNouvelle_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetNouvelle_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        public static GetNouvelle_Result CreateGetNouvelle_Result(global::System.Int32 id, global::System.String tITRE, global::System.String dESCRIPTION, global::System.DateTime dATEPUBLICATION)
        {
            GetNouvelle_Result getNouvelle_Result = new GetNouvelle_Result();
            getNouvelle_Result.ID = id;
            getNouvelle_Result.TITRE = tITRE;
            getNouvelle_Result.DESCRIPTION = dESCRIPTION;
            getNouvelle_Result.DATEPUBLICATION = dATEPUBLICATION;
            return getNouvelle_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetNouvelles_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetNouvelles_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetNouvelles_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        public static GetNouvelles_Result CreateGetNouvelles_Result(global::System.Int32 id, global::System.String tITRE, global::System.String dESCRIPTION, global::System.DateTime dATEPUBLICATION)
        {
            GetNouvelles_Result getNouvelles_Result = new GetNouvelles_Result();
            getNouvelles_Result.ID = id;
            getNouvelles_Result.TITRE = tITRE;
            getNouvelles_Result.DESCRIPTION = dESCRIPTION;
            getNouvelles_Result.DATEPUBLICATION = dATEPUBLICATION;
            return getNouvelles_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetPartenaire_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPartenaire_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetPartenaire_Result.
        /// </summary>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="rAISONSOCIALE">Valeur initiale de la propriété RAISONSOCIALE.</param>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        public static GetPartenaire_Result CreateGetPartenaire_Result(global::System.String nOM, global::System.String rAISONSOCIALE, global::System.String cOURRIEL)
        {
            GetPartenaire_Result getPartenaire_Result = new GetPartenaire_Result();
            getPartenaire_Result.NOM = nOM;
            getPartenaire_Result.RAISONSOCIALE = rAISONSOCIALE;
            getPartenaire_Result.COURRIEL = cOURRIEL;
            return getPartenaire_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RAISONSOCIALE
        {
            get
            {
                return _RAISONSOCIALE;
            }
            set
            {
                OnRAISONSOCIALEChanging(value);
                ReportPropertyChanging("RAISONSOCIALE");
                _RAISONSOCIALE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RAISONSOCIALE");
                OnRAISONSOCIALEChanged();
            }
        }
        private global::System.String _RAISONSOCIALE;
        partial void OnRAISONSOCIALEChanging(global::System.String value);
        partial void OnRAISONSOCIALEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAYS
        {
            get
            {
                return _PAYS;
            }
            set
            {
                OnPAYSChanging(value);
                ReportPropertyChanging("PAYS");
                _PAYS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAYS");
                OnPAYSChanged();
            }
        }
        private global::System.String _PAYS;
        partial void OnPAYSChanging(global::System.String value);
        partial void OnPAYSChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TELEPHONE
        {
            get
            {
                return _TELEPHONE;
            }
            set
            {
                OnTELEPHONEChanging(value);
                ReportPropertyChanging("TELEPHONE");
                _TELEPHONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TELEPHONE");
                OnTELEPHONEChanged();
            }
        }
        private global::System.String _TELEPHONE;
        partial void OnTELEPHONEChanging(global::System.String value);
        partial void OnTELEPHONEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SITEWEB
        {
            get
            {
                return _SITEWEB;
            }
            set
            {
                OnSITEWEBChanging(value);
                ReportPropertyChanging("SITEWEB");
                _SITEWEB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SITEWEB");
                OnSITEWEBChanged();
            }
        }
        private global::System.String _SITEWEB;
        partial void OnSITEWEBChanging(global::System.String value);
        partial void OnSITEWEBChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetPartenaires_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPartenaires_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetPartenaires_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        public static GetPartenaires_Result CreateGetPartenaires_Result(global::System.Int32 id, global::System.String nOM)
        {
            GetPartenaires_Result getPartenaires_Result = new GetPartenaires_Result();
            getPartenaires_Result.ID = id;
            getPartenaires_Result.NOM = nOM;
            return getPartenaires_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetPubParMotCle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPubParMotCle_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetPubParMotCle_Result.
        /// </summary>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dATECREATION">Valeur initiale de la propriété DATECREATION.</param>
        /// <param name="eMPLACEMENTSERVEUR">Valeur initiale de la propriété EMPLACEMENTSERVEUR.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        public static GetPubParMotCle_Result CreateGetPubParMotCle_Result(global::System.String tITRE, global::System.DateTime dATECREATION, global::System.String eMPLACEMENTSERVEUR, global::System.String nOM)
        {
            GetPubParMotCle_Result getPubParMotCle_Result = new GetPubParMotCle_Result();
            getPubParMotCle_Result.TITRE = tITRE;
            getPubParMotCle_Result.DATECREATION = dATECREATION;
            getPubParMotCle_Result.EMPLACEMENTSERVEUR = eMPLACEMENTSERVEUR;
            getPubParMotCle_Result.NOM = nOM;
            return getPubParMotCle_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATECREATION
        {
            get
            {
                return _DATECREATION;
            }
            set
            {
                OnDATECREATIONChanging(value);
                ReportPropertyChanging("DATECREATION");
                _DATECREATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATECREATION");
                OnDATECREATIONChanged();
            }
        }
        private global::System.DateTime _DATECREATION;
        partial void OnDATECREATIONChanging(global::System.DateTime value);
        partial void OnDATECREATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMPLACEMENTSERVEUR
        {
            get
            {
                return _EMPLACEMENTSERVEUR;
            }
            set
            {
                OnEMPLACEMENTSERVEURChanging(value);
                ReportPropertyChanging("EMPLACEMENTSERVEUR");
                _EMPLACEMENTSERVEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMPLACEMENTSERVEUR");
                OnEMPLACEMENTSERVEURChanged();
            }
        }
        private global::System.String _EMPLACEMENTSERVEUR;
        partial void OnEMPLACEMENTSERVEURChanging(global::System.String value);
        partial void OnEMPLACEMENTSERVEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetPubParSecteur_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPubParSecteur_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetPubParSecteur_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dATECREATION">Valeur initiale de la propriété DATECREATION.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="eMPLACEMENTSERVEUR">Valeur initiale de la propriété EMPLACEMENTSERVEUR.</param>
        /// <param name="iDPUBLICATEUR">Valeur initiale de la propriété IDPUBLICATEUR.</param>
        /// <param name="tYPEMIME">Valeur initiale de la propriété TYPEMIME.</param>
        /// <param name="iDSUJET">Valeur initiale de la propriété IDSUJET.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static GetPubParSecteur_Result CreateGetPubParSecteur_Result(global::System.Int32 id, global::System.String tITRE, global::System.DateTime dATECREATION, global::System.String dESCRIPTION, global::System.String eMPLACEMENTSERVEUR, global::System.Int32 iDPUBLICATEUR, global::System.String tYPEMIME, global::System.Int32 iDSUJET, global::System.Int32 iDSECTEUR)
        {
            GetPubParSecteur_Result getPubParSecteur_Result = new GetPubParSecteur_Result();
            getPubParSecteur_Result.ID = id;
            getPubParSecteur_Result.TITRE = tITRE;
            getPubParSecteur_Result.DATECREATION = dATECREATION;
            getPubParSecteur_Result.DESCRIPTION = dESCRIPTION;
            getPubParSecteur_Result.EMPLACEMENTSERVEUR = eMPLACEMENTSERVEUR;
            getPubParSecteur_Result.IDPUBLICATEUR = iDPUBLICATEUR;
            getPubParSecteur_Result.TYPEMIME = tYPEMIME;
            getPubParSecteur_Result.IDSUJET = iDSUJET;
            getPubParSecteur_Result.IDSECTEUR = iDSECTEUR;
            return getPubParSecteur_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATECREATION
        {
            get
            {
                return _DATECREATION;
            }
            set
            {
                OnDATECREATIONChanging(value);
                ReportPropertyChanging("DATECREATION");
                _DATECREATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATECREATION");
                OnDATECREATIONChanged();
            }
        }
        private global::System.DateTime _DATECREATION;
        partial void OnDATECREATIONChanging(global::System.DateTime value);
        partial void OnDATECREATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMPLACEMENTSERVEUR
        {
            get
            {
                return _EMPLACEMENTSERVEUR;
            }
            set
            {
                OnEMPLACEMENTSERVEURChanging(value);
                ReportPropertyChanging("EMPLACEMENTSERVEUR");
                _EMPLACEMENTSERVEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMPLACEMENTSERVEUR");
                OnEMPLACEMENTSERVEURChanged();
            }
        }
        private global::System.String _EMPLACEMENTSERVEUR;
        partial void OnEMPLACEMENTSERVEURChanging(global::System.String value);
        partial void OnEMPLACEMENTSERVEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPUBLICATEUR
        {
            get
            {
                return _IDPUBLICATEUR;
            }
            set
            {
                OnIDPUBLICATEURChanging(value);
                ReportPropertyChanging("IDPUBLICATEUR");
                _IDPUBLICATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPUBLICATEUR");
                OnIDPUBLICATEURChanged();
            }
        }
        private global::System.Int32 _IDPUBLICATEUR;
        partial void OnIDPUBLICATEURChanging(global::System.Int32 value);
        partial void OnIDPUBLICATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPEMIME
        {
            get
            {
                return _TYPEMIME;
            }
            set
            {
                OnTYPEMIMEChanging(value);
                ReportPropertyChanging("TYPEMIME");
                _TYPEMIME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TYPEMIME");
                OnTYPEMIMEChanged();
            }
        }
        private global::System.String _TYPEMIME;
        partial void OnTYPEMIMEChanging(global::System.String value);
        partial void OnTYPEMIMEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSUJET
        {
            get
            {
                return _IDSUJET;
            }
            set
            {
                OnIDSUJETChanging(value);
                ReportPropertyChanging("IDSUJET");
                _IDSUJET = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSUJET");
                OnIDSUJETChanged();
            }
        }
        private global::System.Int32 _IDSUJET;
        partial void OnIDSUJETChanging(global::System.Int32 value);
        partial void OnIDSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetPubParSujet_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetPubParSujet_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetPubParSujet_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dATECREATION">Valeur initiale de la propriété DATECREATION.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="eMPLACEMENTSERVEUR">Valeur initiale de la propriété EMPLACEMENTSERVEUR.</param>
        /// <param name="iDPUBLICATEUR">Valeur initiale de la propriété IDPUBLICATEUR.</param>
        /// <param name="tYPEMIME">Valeur initiale de la propriété TYPEMIME.</param>
        /// <param name="iDSUJET">Valeur initiale de la propriété IDSUJET.</param>
        /// <param name="iDSECTEUR">Valeur initiale de la propriété IDSECTEUR.</param>
        public static GetPubParSujet_Result CreateGetPubParSujet_Result(global::System.Int32 id, global::System.String tITRE, global::System.DateTime dATECREATION, global::System.String dESCRIPTION, global::System.String eMPLACEMENTSERVEUR, global::System.Int32 iDPUBLICATEUR, global::System.String tYPEMIME, global::System.Int32 iDSUJET, global::System.Int32 iDSECTEUR)
        {
            GetPubParSujet_Result getPubParSujet_Result = new GetPubParSujet_Result();
            getPubParSujet_Result.ID = id;
            getPubParSujet_Result.TITRE = tITRE;
            getPubParSujet_Result.DATECREATION = dATECREATION;
            getPubParSujet_Result.DESCRIPTION = dESCRIPTION;
            getPubParSujet_Result.EMPLACEMENTSERVEUR = eMPLACEMENTSERVEUR;
            getPubParSujet_Result.IDPUBLICATEUR = iDPUBLICATEUR;
            getPubParSujet_Result.TYPEMIME = tYPEMIME;
            getPubParSujet_Result.IDSUJET = iDSUJET;
            getPubParSujet_Result.IDSECTEUR = iDSECTEUR;
            return getPubParSujet_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATECREATION
        {
            get
            {
                return _DATECREATION;
            }
            set
            {
                OnDATECREATIONChanging(value);
                ReportPropertyChanging("DATECREATION");
                _DATECREATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATECREATION");
                OnDATECREATIONChanged();
            }
        }
        private global::System.DateTime _DATECREATION;
        partial void OnDATECREATIONChanging(global::System.DateTime value);
        partial void OnDATECREATIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMPLACEMENTSERVEUR
        {
            get
            {
                return _EMPLACEMENTSERVEUR;
            }
            set
            {
                OnEMPLACEMENTSERVEURChanging(value);
                ReportPropertyChanging("EMPLACEMENTSERVEUR");
                _EMPLACEMENTSERVEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMPLACEMENTSERVEUR");
                OnEMPLACEMENTSERVEURChanged();
            }
        }
        private global::System.String _EMPLACEMENTSERVEUR;
        partial void OnEMPLACEMENTSERVEURChanging(global::System.String value);
        partial void OnEMPLACEMENTSERVEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPUBLICATEUR
        {
            get
            {
                return _IDPUBLICATEUR;
            }
            set
            {
                OnIDPUBLICATEURChanging(value);
                ReportPropertyChanging("IDPUBLICATEUR");
                _IDPUBLICATEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDPUBLICATEUR");
                OnIDPUBLICATEURChanged();
            }
        }
        private global::System.Int32 _IDPUBLICATEUR;
        partial void OnIDPUBLICATEURChanging(global::System.Int32 value);
        partial void OnIDPUBLICATEURChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPEMIME
        {
            get
            {
                return _TYPEMIME;
            }
            set
            {
                OnTYPEMIMEChanging(value);
                ReportPropertyChanging("TYPEMIME");
                _TYPEMIME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TYPEMIME");
                OnTYPEMIMEChanged();
            }
        }
        private global::System.String _TYPEMIME;
        partial void OnTYPEMIMEChanging(global::System.String value);
        partial void OnTYPEMIMEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSUJET
        {
            get
            {
                return _IDSUJET;
            }
            set
            {
                OnIDSUJETChanging(value);
                ReportPropertyChanging("IDSUJET");
                _IDSUJET = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSUJET");
                OnIDSUJETChanged();
            }
        }
        private global::System.Int32 _IDSUJET;
        partial void OnIDSUJETChanging(global::System.Int32 value);
        partial void OnIDSUJETChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSECTEUR
        {
            get
            {
                return _IDSECTEUR;
            }
            set
            {
                OnIDSECTEURChanging(value);
                ReportPropertyChanging("IDSECTEUR");
                _IDSECTEUR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDSECTEUR");
                OnIDSECTEURChanged();
            }
        }
        private global::System.Int32 _IDSECTEUR;
        partial void OnIDSECTEURChanging(global::System.Int32 value);
        partial void OnIDSECTEURChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetRechercheNouvelle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetRechercheNouvelle_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetRechercheNouvelle_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="tITRE">Valeur initiale de la propriété TITRE.</param>
        /// <param name="dESCRIPTION">Valeur initiale de la propriété DESCRIPTION.</param>
        /// <param name="dATEPUBLICATION">Valeur initiale de la propriété DATEPUBLICATION.</param>
        public static GetRechercheNouvelle_Result CreateGetRechercheNouvelle_Result(global::System.Int32 id, global::System.String tITRE, global::System.String dESCRIPTION, global::System.DateTime dATEPUBLICATION)
        {
            GetRechercheNouvelle_Result getRechercheNouvelle_Result = new GetRechercheNouvelle_Result();
            getRechercheNouvelle_Result.ID = id;
            getRechercheNouvelle_Result.TITRE = tITRE;
            getRechercheNouvelle_Result.DESCRIPTION = dESCRIPTION;
            getRechercheNouvelle_Result.DATEPUBLICATION = dATEPUBLICATION;
            return getRechercheNouvelle_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITRE
        {
            get
            {
                return _TITRE;
            }
            set
            {
                OnTITREChanging(value);
                ReportPropertyChanging("TITRE");
                _TITRE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITRE");
                OnTITREChanged();
            }
        }
        private global::System.String _TITRE;
        partial void OnTITREChanging(global::System.String value);
        partial void OnTITREChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEPUBLICATION
        {
            get
            {
                return _DATEPUBLICATION;
            }
            set
            {
                OnDATEPUBLICATIONChanging(value);
                ReportPropertyChanging("DATEPUBLICATION");
                _DATEPUBLICATION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEPUBLICATION");
                OnDATEPUBLICATIONChanged();
            }
        }
        private global::System.DateTime _DATEPUBLICATION;
        partial void OnDATEPUBLICATIONChanging(global::System.DateTime value);
        partial void OnDATEPUBLICATIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetResultatsSondage_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetResultatsSondage_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetResultatsSondage_Result.
        /// </summary>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        /// <param name="vALEUR">Valeur initiale de la propriété VALEUR.</param>
        public static GetResultatsSondage_Result CreateGetResultatsSondage_Result(global::System.String nOMUTIL, global::System.String vALEUR)
        {
            GetResultatsSondage_Result getResultatsSondage_Result = new GetResultatsSondage_Result();
            getResultatsSondage_Result.NOMUTIL = nOMUTIL;
            getResultatsSondage_Result.VALEUR = vALEUR;
            return getResultatsSondage_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VALEUR
        {
            get
            {
                return _VALEUR;
            }
            set
            {
                OnVALEURChanging(value);
                ReportPropertyChanging("VALEUR");
                _VALEUR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VALEUR");
                OnVALEURChanged();
            }
        }
        private global::System.String _VALEUR;
        partial void OnVALEURChanging(global::System.String value);
        partial void OnVALEURChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetSecteurs_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSecteurs_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetSecteurs_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="tITREACCUEIL">Valeur initiale de la propriété TITREACCUEIL.</param>
        /// <param name="tEXTEACCUEIL">Valeur initiale de la propriété TEXTEACCUEIL.</param>
        /// <param name="uRLIMAGEACCUEIL">Valeur initiale de la propriété URLIMAGEACCUEIL.</param>
        public static GetSecteurs_Result CreateGetSecteurs_Result(global::System.Int32 id, global::System.String nOM, global::System.String tITREACCUEIL, global::System.String tEXTEACCUEIL, global::System.String uRLIMAGEACCUEIL)
        {
            GetSecteurs_Result getSecteurs_Result = new GetSecteurs_Result();
            getSecteurs_Result.ID = id;
            getSecteurs_Result.NOM = nOM;
            getSecteurs_Result.TITREACCUEIL = tITREACCUEIL;
            getSecteurs_Result.TEXTEACCUEIL = tEXTEACCUEIL;
            getSecteurs_Result.URLIMAGEACCUEIL = uRLIMAGEACCUEIL;
            return getSecteurs_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TITREACCUEIL
        {
            get
            {
                return _TITREACCUEIL;
            }
            set
            {
                OnTITREACCUEILChanging(value);
                ReportPropertyChanging("TITREACCUEIL");
                _TITREACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TITREACCUEIL");
                OnTITREACCUEILChanged();
            }
        }
        private global::System.String _TITREACCUEIL;
        partial void OnTITREACCUEILChanging(global::System.String value);
        partial void OnTITREACCUEILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TEXTEACCUEIL
        {
            get
            {
                return _TEXTEACCUEIL;
            }
            set
            {
                OnTEXTEACCUEILChanging(value);
                ReportPropertyChanging("TEXTEACCUEIL");
                _TEXTEACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TEXTEACCUEIL");
                OnTEXTEACCUEILChanged();
            }
        }
        private global::System.String _TEXTEACCUEIL;
        partial void OnTEXTEACCUEILChanging(global::System.String value);
        partial void OnTEXTEACCUEILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URLIMAGEACCUEIL
        {
            get
            {
                return _URLIMAGEACCUEIL;
            }
            set
            {
                OnURLIMAGEACCUEILChanging(value);
                ReportPropertyChanging("URLIMAGEACCUEIL");
                _URLIMAGEACCUEIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URLIMAGEACCUEIL");
                OnURLIMAGEACCUEILChanged();
            }
        }
        private global::System.String _URLIMAGEACCUEIL;
        partial void OnURLIMAGEACCUEILChanging(global::System.String value);
        partial void OnURLIMAGEACCUEILChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetSondage_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSondage_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetSondage_Result.
        /// </summary>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="qUESTION">Valeur initiale de la propriété QUESTION.</param>
        /// <param name="dATEDEBUT">Valeur initiale de la propriété DATEDEBUT.</param>
        /// <param name="dATEFIN">Valeur initiale de la propriété DATEFIN.</param>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        public static GetSondage_Result CreateGetSondage_Result(global::System.String nOM, global::System.String qUESTION, global::System.DateTime dATEDEBUT, global::System.DateTime dATEFIN, global::System.String nOMUTIL)
        {
            GetSondage_Result getSondage_Result = new GetSondage_Result();
            getSondage_Result.NOM = nOM;
            getSondage_Result.QUESTION = qUESTION;
            getSondage_Result.DATEDEBUT = dATEDEBUT;
            getSondage_Result.DATEFIN = dATEFIN;
            getSondage_Result.NOMUTIL = nOMUTIL;
            return getSondage_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUESTION
        {
            get
            {
                return _QUESTION;
            }
            set
            {
                OnQUESTIONChanging(value);
                ReportPropertyChanging("QUESTION");
                _QUESTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QUESTION");
                OnQUESTIONChanged();
            }
        }
        private global::System.String _QUESTION;
        partial void OnQUESTIONChanging(global::System.String value);
        partial void OnQUESTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEDEBUT
        {
            get
            {
                return _DATEDEBUT;
            }
            set
            {
                OnDATEDEBUTChanging(value);
                ReportPropertyChanging("DATEDEBUT");
                _DATEDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEDEBUT");
                OnDATEDEBUTChanged();
            }
        }
        private global::System.DateTime _DATEDEBUT;
        partial void OnDATEDEBUTChanging(global::System.DateTime value);
        partial void OnDATEDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEFIN
        {
            get
            {
                return _DATEFIN;
            }
            set
            {
                OnDATEFINChanging(value);
                ReportPropertyChanging("DATEFIN");
                _DATEFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEFIN");
                OnDATEFINChanged();
            }
        }
        private global::System.DateTime _DATEFIN;
        partial void OnDATEFINChanging(global::System.DateTime value);
        partial void OnDATEFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetSondages_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSondages_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetSondages_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="qUESTION">Valeur initiale de la propriété QUESTION.</param>
        /// <param name="dATEDEBUT">Valeur initiale de la propriété DATEDEBUT.</param>
        /// <param name="dATEFIN">Valeur initiale de la propriété DATEFIN.</param>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        public static GetSondages_Result CreateGetSondages_Result(global::System.Int32 id, global::System.String nOM, global::System.String qUESTION, global::System.DateTime dATEDEBUT, global::System.DateTime dATEFIN, global::System.String nOMUTIL)
        {
            GetSondages_Result getSondages_Result = new GetSondages_Result();
            getSondages_Result.ID = id;
            getSondages_Result.NOM = nOM;
            getSondages_Result.QUESTION = qUESTION;
            getSondages_Result.DATEDEBUT = dATEDEBUT;
            getSondages_Result.DATEFIN = dATEFIN;
            getSondages_Result.NOMUTIL = nOMUTIL;
            return getSondages_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QUESTION
        {
            get
            {
                return _QUESTION;
            }
            set
            {
                OnQUESTIONChanging(value);
                ReportPropertyChanging("QUESTION");
                _QUESTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QUESTION");
                OnQUESTIONChanged();
            }
        }
        private global::System.String _QUESTION;
        partial void OnQUESTIONChanging(global::System.String value);
        partial void OnQUESTIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEDEBUT
        {
            get
            {
                return _DATEDEBUT;
            }
            set
            {
                OnDATEDEBUTChanging(value);
                ReportPropertyChanging("DATEDEBUT");
                _DATEDEBUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEDEBUT");
                OnDATEDEBUTChanged();
            }
        }
        private global::System.DateTime _DATEDEBUT;
        partial void OnDATEDEBUTChanging(global::System.DateTime value);
        partial void OnDATEDEBUTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATEFIN
        {
            get
            {
                return _DATEFIN;
            }
            set
            {
                OnDATEFINChanging(value);
                ReportPropertyChanging("DATEFIN");
                _DATEFIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEFIN");
                OnDATEFINChanged();
            }
        }
        private global::System.DateTime _DATEFIN;
        partial void OnDATEFINChanging(global::System.DateTime value);
        partial void OnDATEFINChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="getUtil_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class getUtil_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet getUtil_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        /// <param name="pRENOM">Valeur initiale de la propriété PRENOM.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="aDRESSE">Valeur initiale de la propriété ADRESSE.</param>
        /// <param name="vILLE">Valeur initiale de la propriété VILLE.</param>
        /// <param name="dATENAISSANCE">Valeur initiale de la propriété DATENAISSANCE.</param>
        /// <param name="lANGUE">Valeur initiale de la propriété LANGUE.</param>
        /// <param name="iDECOLE">Valeur initiale de la propriété IDECOLE.</param>
        public static getUtil_Result CreategetUtil_Result(global::System.Int32 id, global::System.String nOMUTIL, global::System.String cOURRIEL, global::System.String pRENOM, global::System.String nOM, global::System.String aDRESSE, global::System.String vILLE, global::System.DateTime dATENAISSANCE, global::System.String lANGUE, global::System.Int32 iDECOLE)
        {
            getUtil_Result getUtil_Result = new getUtil_Result();
            getUtil_Result.ID = id;
            getUtil_Result.NOMUTIL = nOMUTIL;
            getUtil_Result.COURRIEL = cOURRIEL;
            getUtil_Result.PRENOM = pRENOM;
            getUtil_Result.NOM = nOM;
            getUtil_Result.ADRESSE = aDRESSE;
            getUtil_Result.VILLE = vILLE;
            getUtil_Result.DATENAISSANCE = dATENAISSANCE;
            getUtil_Result.LANGUE = lANGUE;
            getUtil_Result.IDECOLE = iDECOLE;
            return getUtil_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PRENOM
        {
            get
            {
                return _PRENOM;
            }
            set
            {
                OnPRENOMChanging(value);
                ReportPropertyChanging("PRENOM");
                _PRENOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PRENOM");
                OnPRENOMChanged();
            }
        }
        private global::System.String _PRENOM;
        partial void OnPRENOMChanging(global::System.String value);
        partial void OnPRENOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATENAISSANCE
        {
            get
            {
                return _DATENAISSANCE;
            }
            set
            {
                OnDATENAISSANCEChanging(value);
                ReportPropertyChanging("DATENAISSANCE");
                _DATENAISSANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATENAISSANCE");
                OnDATENAISSANCEChanged();
            }
        }
        private global::System.DateTime _DATENAISSANCE;
        partial void OnDATENAISSANCEChanging(global::System.DateTime value);
        partial void OnDATENAISSANCEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DERNIERECONNEXION
        {
            get
            {
                return _DERNIERECONNEXION;
            }
            set
            {
                OnDERNIERECONNEXIONChanging(value);
                ReportPropertyChanging("DERNIERECONNEXION");
                _DERNIERECONNEXION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DERNIERECONNEXION");
                OnDERNIERECONNEXIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DERNIERECONNEXION;
        partial void OnDERNIERECONNEXIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDERNIERECONNEXIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LANGUE
        {
            get
            {
                return _LANGUE;
            }
            set
            {
                OnLANGUEChanging(value);
                ReportPropertyChanging("LANGUE");
                _LANGUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LANGUE");
                OnLANGUEChanged();
            }
        }
        private global::System.String _LANGUE;
        partial void OnLANGUEChanging(global::System.String value);
        partial void OnLANGUEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDECOLE
        {
            get
            {
                return _IDECOLE;
            }
            set
            {
                OnIDECOLEChanging(value);
                ReportPropertyChanging("IDECOLE");
                _IDECOLE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDECOLE");
                OnIDECOLEChanged();
            }
        }
        private global::System.Int32 _IDECOLE;
        partial void OnIDECOLEChanging(global::System.Int32 value);
        partial void OnIDECOLEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetUtilParSecteur_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetUtilParSecteur_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetUtilParSecteur_Result.
        /// </summary>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="pRENOM">Valeur initiale de la propriété PRENOM.</param>
        public static GetUtilParSecteur_Result CreateGetUtilParSecteur_Result(global::System.String nOMUTIL, global::System.String nOM, global::System.String pRENOM)
        {
            GetUtilParSecteur_Result getUtilParSecteur_Result = new GetUtilParSecteur_Result();
            getUtilParSecteur_Result.NOMUTIL = nOMUTIL;
            getUtilParSecteur_Result.NOM = nOM;
            getUtilParSecteur_Result.PRENOM = pRENOM;
            return getUtilParSecteur_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PRENOM
        {
            get
            {
                return _PRENOM;
            }
            set
            {
                OnPRENOMChanging(value);
                ReportPropertyChanging("PRENOM");
                _PRENOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PRENOM");
                OnPRENOMChanged();
            }
        }
        private global::System.String _PRENOM;
        partial void OnPRENOMChanging(global::System.String value);
        partial void OnPRENOMChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetUtilProfil_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetUtilProfil_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetUtilProfil_Result.
        /// </summary>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="pRENOM">Valeur initiale de la propriété PRENOM.</param>
        /// <param name="aDRESSE">Valeur initiale de la propriété ADRESSE.</param>
        /// <param name="vILLE">Valeur initiale de la propriété VILLE.</param>
        /// <param name="dATENAISSANCE">Valeur initiale de la propriété DATENAISSANCE.</param>
        /// <param name="lANGUE">Valeur initiale de la propriété LANGUE.</param>
        public static GetUtilProfil_Result CreateGetUtilProfil_Result(global::System.String cOURRIEL, global::System.String nOM, global::System.String pRENOM, global::System.String aDRESSE, global::System.String vILLE, global::System.DateTime dATENAISSANCE, global::System.String lANGUE)
        {
            GetUtilProfil_Result getUtilProfil_Result = new GetUtilProfil_Result();
            getUtilProfil_Result.COURRIEL = cOURRIEL;
            getUtilProfil_Result.NOM = nOM;
            getUtilProfil_Result.PRENOM = pRENOM;
            getUtilProfil_Result.ADRESSE = aDRESSE;
            getUtilProfil_Result.VILLE = vILLE;
            getUtilProfil_Result.DATENAISSANCE = dATENAISSANCE;
            getUtilProfil_Result.LANGUE = lANGUE;
            return getUtilProfil_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PRENOM
        {
            get
            {
                return _PRENOM;
            }
            set
            {
                OnPRENOMChanging(value);
                ReportPropertyChanging("PRENOM");
                _PRENOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PRENOM");
                OnPRENOMChanged();
            }
        }
        private global::System.String _PRENOM;
        partial void OnPRENOMChanging(global::System.String value);
        partial void OnPRENOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATENAISSANCE
        {
            get
            {
                return _DATENAISSANCE;
            }
            set
            {
                OnDATENAISSANCEChanging(value);
                ReportPropertyChanging("DATENAISSANCE");
                _DATENAISSANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATENAISSANCE");
                OnDATENAISSANCEChanged();
            }
        }
        private global::System.DateTime _DATENAISSANCE;
        partial void OnDATENAISSANCEChanging(global::System.DateTime value);
        partial void OnDATENAISSANCEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LANGUE
        {
            get
            {
                return _LANGUE;
            }
            set
            {
                OnLANGUEChanging(value);
                ReportPropertyChanging("LANGUE");
                _LANGUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LANGUE");
                OnLANGUEChanged();
            }
        }
        private global::System.String _LANGUE;
        partial void OnLANGUEChanging(global::System.String value);
        partial void OnLANGUEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="GetUtils_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetUtils_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet GetUtils_Result.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="nOMUTIL">Valeur initiale de la propriété NOMUTIL.</param>
        /// <param name="cOURRIEL">Valeur initiale de la propriété COURRIEL.</param>
        /// <param name="pRENOM">Valeur initiale de la propriété PRENOM.</param>
        /// <param name="nOM">Valeur initiale de la propriété NOM.</param>
        /// <param name="aDRESSE">Valeur initiale de la propriété ADRESSE.</param>
        /// <param name="vILLE">Valeur initiale de la propriété VILLE.</param>
        /// <param name="dATENAISSANCE">Valeur initiale de la propriété DATENAISSANCE.</param>
        /// <param name="lANGUE">Valeur initiale de la propriété LANGUE.</param>
        /// <param name="iDECOLE">Valeur initiale de la propriété IDECOLE.</param>
        public static GetUtils_Result CreateGetUtils_Result(global::System.Int32 id, global::System.String nOMUTIL, global::System.String cOURRIEL, global::System.String pRENOM, global::System.String nOM, global::System.String aDRESSE, global::System.String vILLE, global::System.DateTime dATENAISSANCE, global::System.String lANGUE, global::System.Int32 iDECOLE)
        {
            GetUtils_Result getUtils_Result = new GetUtils_Result();
            getUtils_Result.ID = id;
            getUtils_Result.NOMUTIL = nOMUTIL;
            getUtils_Result.COURRIEL = cOURRIEL;
            getUtils_Result.PRENOM = pRENOM;
            getUtils_Result.NOM = nOM;
            getUtils_Result.ADRESSE = aDRESSE;
            getUtils_Result.VILLE = vILLE;
            getUtils_Result.DATENAISSANCE = dATENAISSANCE;
            getUtils_Result.LANGUE = lANGUE;
            getUtils_Result.IDECOLE = iDECOLE;
            return getUtils_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOMUTIL
        {
            get
            {
                return _NOMUTIL;
            }
            set
            {
                OnNOMUTILChanging(value);
                ReportPropertyChanging("NOMUTIL");
                _NOMUTIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOMUTIL");
                OnNOMUTILChanged();
            }
        }
        private global::System.String _NOMUTIL;
        partial void OnNOMUTILChanging(global::System.String value);
        partial void OnNOMUTILChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String COURRIEL
        {
            get
            {
                return _COURRIEL;
            }
            set
            {
                OnCOURRIELChanging(value);
                ReportPropertyChanging("COURRIEL");
                _COURRIEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("COURRIEL");
                OnCOURRIELChanged();
            }
        }
        private global::System.String _COURRIEL;
        partial void OnCOURRIELChanging(global::System.String value);
        partial void OnCOURRIELChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PRENOM
        {
            get
            {
                return _PRENOM;
            }
            set
            {
                OnPRENOMChanging(value);
                ReportPropertyChanging("PRENOM");
                _PRENOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PRENOM");
                OnPRENOMChanged();
            }
        }
        private global::System.String _PRENOM;
        partial void OnPRENOMChanging(global::System.String value);
        partial void OnPRENOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NOM
        {
            get
            {
                return _NOM;
            }
            set
            {
                OnNOMChanging(value);
                ReportPropertyChanging("NOM");
                _NOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NOM");
                OnNOMChanged();
            }
        }
        private global::System.String _NOM;
        partial void OnNOMChanging(global::System.String value);
        partial void OnNOMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ADRESSE
        {
            get
            {
                return _ADRESSE;
            }
            set
            {
                OnADRESSEChanging(value);
                ReportPropertyChanging("ADRESSE");
                _ADRESSE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ADRESSE");
                OnADRESSEChanged();
            }
        }
        private global::System.String _ADRESSE;
        partial void OnADRESSEChanging(global::System.String value);
        partial void OnADRESSEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VILLE
        {
            get
            {
                return _VILLE;
            }
            set
            {
                OnVILLEChanging(value);
                ReportPropertyChanging("VILLE");
                _VILLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VILLE");
                OnVILLEChanged();
            }
        }
        private global::System.String _VILLE;
        partial void OnVILLEChanging(global::System.String value);
        partial void OnVILLEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATENAISSANCE
        {
            get
            {
                return _DATENAISSANCE;
            }
            set
            {
                OnDATENAISSANCEChanging(value);
                ReportPropertyChanging("DATENAISSANCE");
                _DATENAISSANCE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATENAISSANCE");
                OnDATENAISSANCEChanged();
            }
        }
        private global::System.DateTime _DATENAISSANCE;
        partial void OnDATENAISSANCEChanging(global::System.DateTime value);
        partial void OnDATENAISSANCEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DERNIERECONNEXION
        {
            get
            {
                return _DERNIERECONNEXION;
            }
            set
            {
                OnDERNIERECONNEXIONChanging(value);
                ReportPropertyChanging("DERNIERECONNEXION");
                _DERNIERECONNEXION = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DERNIERECONNEXION");
                OnDERNIERECONNEXIONChanged();
            }
        }
        private Nullable<global::System.DateTime> _DERNIERECONNEXION;
        partial void OnDERNIERECONNEXIONChanging(Nullable<global::System.DateTime> value);
        partial void OnDERNIERECONNEXIONChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LANGUE
        {
            get
            {
                return _LANGUE;
            }
            set
            {
                OnLANGUEChanging(value);
                ReportPropertyChanging("LANGUE");
                _LANGUE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LANGUE");
                OnLANGUEChanged();
            }
        }
        private global::System.String _LANGUE;
        partial void OnLANGUEChanging(global::System.String value);
        partial void OnLANGUEChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDECOLE
        {
            get
            {
                return _IDECOLE;
            }
            set
            {
                OnIDECOLEChanging(value);
                ReportPropertyChanging("IDECOLE");
                _IDECOLE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDECOLE");
                OnIDECOLEChanged();
            }
        }
        private global::System.Int32 _IDECOLE;
        partial void OnIDECOLEChanging(global::System.Int32 value);
        partial void OnIDECOLEChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MVPModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet sp_helpdiagrams_Result.
        /// </summary>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="ownerID">Valeur initiale de la propriété OwnerID.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Propriétés simples
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
