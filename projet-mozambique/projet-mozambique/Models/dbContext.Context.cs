//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace projet_mozambique.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CATEGORIEEVENEMENT> CATEGORIEEVENEMENT { get; set; }
        public DbSet<CHOIXSONDAGE> CHOIXSONDAGE { get; set; }
        public DbSet<CONTENU> CONTENU { get; set; }
        public DbSet<DESTINATAIREMESSAGE> DESTINATAIREMESSAGE { get; set; }
        public DbSet<ECOLE> ECOLE { get; set; }
        public DbSet<EVENEMENT> EVENEMENT { get; set; }
        public DbSet<FILDISCUSSION> FILDISCUSSION { get; set; }
        public DbSet<FORUM> FORUM { get; set; }
        public DbSet<MESSAGEFORUM> MESSAGEFORUM { get; set; }
        public DbSet<MESSAGEPRIVE> MESSAGEPRIVE { get; set; }
        public DbSet<MOTCLE> MOTCLE { get; set; }
        public DbSet<NOUVELLE> NOUVELLE { get; set; }
        public DbSet<PARTENAIRE> PARTENAIRE { get; set; }
        public DbSet<PIECEJOINTE> PIECEJOINTE { get; set; }
        public DbSet<PUBLICATION> PUBLICATION { get; set; }
        public DbSet<SECTEUR> SECTEUR { get; set; }
        public DbSet<SONDAGE> SONDAGE { get; set; }
        public DbSet<SUJETPUBLICATION> SUJETPUBLICATION { get; set; }
        public DbSet<UTILISATEUR> UTILISATEUR { get; set; }
        public DbSet<UTILISATEURSECTEUR> UTILISATEURSECTEUR { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
    
        public virtual int AjouterChoixSondage(Nullable<int> sondage, string valeur)
        {
            var sondageParameter = sondage.HasValue ?
                new ObjectParameter("sondage", sondage) :
                new ObjectParameter("sondage", typeof(int));
    
            var valeurParameter = valeur != null ?
                new ObjectParameter("valeur", valeur) :
                new ObjectParameter("valeur", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterChoixSondage", sondageParameter, valeurParameter);
        }
    
        public virtual int AjouterDestinataireMess(Nullable<int> message, Nullable<int> destinataire)
        {
            var messageParameter = message.HasValue ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(int));
    
            var destinataireParameter = destinataire.HasValue ?
                new ObjectParameter("destinataire", destinataire) :
                new ObjectParameter("destinataire", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterDestinataireMess", messageParameter, destinataireParameter);
        }
    
        public virtual int AjouterEcole(string nom, string adresse, string ville)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterEcole", nomParameter, adresseParameter, villeParameter);
        }
    
        public virtual int AjouterEven(string nomeven, Nullable<System.DateTime> dateeven, Nullable<System.TimeSpan> debut, Nullable<System.TimeSpan> fin, Nullable<int> categorie)
        {
            var nomevenParameter = nomeven != null ?
                new ObjectParameter("nomeven", nomeven) :
                new ObjectParameter("nomeven", typeof(string));
    
            var dateevenParameter = dateeven.HasValue ?
                new ObjectParameter("dateeven", dateeven) :
                new ObjectParameter("dateeven", typeof(System.DateTime));
    
            var debutParameter = debut.HasValue ?
                new ObjectParameter("debut", debut) :
                new ObjectParameter("debut", typeof(System.TimeSpan));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.TimeSpan));
    
            var categorieParameter = categorie.HasValue ?
                new ObjectParameter("categorie", categorie) :
                new ObjectParameter("categorie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterEven", nomevenParameter, dateevenParameter, debutParameter, finParameter, categorieParameter);
        }
    
        public virtual int AjouterFilDiscussion(string sujet, Nullable<int> forum)
        {
            var sujetParameter = sujet != null ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(string));
    
            var forumParameter = forum.HasValue ?
                new ObjectParameter("forum", forum) :
                new ObjectParameter("forum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterFilDiscussion", sujetParameter, forumParameter);
        }
    
        public virtual int AjouterMessageForum(string contenu, Nullable<int> util, Nullable<int> fildiscu)
        {
            var contenuParameter = contenu != null ?
                new ObjectParameter("contenu", contenu) :
                new ObjectParameter("contenu", typeof(string));
    
            var utilParameter = util.HasValue ?
                new ObjectParameter("util", util) :
                new ObjectParameter("util", typeof(int));
    
            var fildiscuParameter = fildiscu.HasValue ?
                new ObjectParameter("fildiscu", fildiscu) :
                new ObjectParameter("fildiscu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterMessageForum", contenuParameter, utilParameter, fildiscuParameter);
        }
    
        public virtual int AjouterMessagePrive(Nullable<int> expediteur, string sujet, string contenu)
        {
            var expediteurParameter = expediteur.HasValue ?
                new ObjectParameter("expediteur", expediteur) :
                new ObjectParameter("expediteur", typeof(int));
    
            var sujetParameter = sujet != null ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(string));
    
            var contenuParameter = contenu != null ?
                new ObjectParameter("contenu", contenu) :
                new ObjectParameter("contenu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterMessagePrive", expediteurParameter, sujetParameter, contenuParameter);
        }
    
        public virtual int AjouterMotCle(Nullable<int> idpub, string valeur, ObjectParameter return_value)
        {
            var idpubParameter = idpub.HasValue ?
                new ObjectParameter("idpub", idpub) :
                new ObjectParameter("idpub", typeof(int));
    
            var valeurParameter = valeur != null ?
                new ObjectParameter("valeur", valeur) :
                new ObjectParameter("valeur", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterMotCle", idpubParameter, valeurParameter, return_value);
        }
    
        public virtual int AjouterNouvelle(string titre, string description)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterNouvelle", titreParameter, descriptionParameter);
        }
    
        public virtual int AjouterPartenaire(string nom, string raisonsociale, string adr, string ville, string pays, string tel, string siteweb, string courriel)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var raisonsocialeParameter = raisonsociale != null ?
                new ObjectParameter("raisonsociale", raisonsociale) :
                new ObjectParameter("raisonsociale", typeof(string));
    
            var adrParameter = adr != null ?
                new ObjectParameter("adr", adr) :
                new ObjectParameter("adr", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var sitewebParameter = siteweb != null ?
                new ObjectParameter("siteweb", siteweb) :
                new ObjectParameter("siteweb", typeof(string));
    
            var courrielParameter = courriel != null ?
                new ObjectParameter("courriel", courriel) :
                new ObjectParameter("courriel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterPartenaire", nomParameter, raisonsocialeParameter, adrParameter, villeParameter, paysParameter, telParameter, sitewebParameter, courrielParameter);
        }
    
        public virtual int AjouterPieceJointe(Nullable<int> message, byte[] pieceserialisee, string taillepiece, string nompiece)
        {
            var messageParameter = message.HasValue ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(int));
    
            var pieceserialiseeParameter = pieceserialisee != null ?
                new ObjectParameter("pieceserialisee", pieceserialisee) :
                new ObjectParameter("pieceserialisee", typeof(byte[]));
    
            var taillepieceParameter = taillepiece != null ?
                new ObjectParameter("taillepiece", taillepiece) :
                new ObjectParameter("taillepiece", typeof(string));
    
            var nompieceParameter = nompiece != null ?
                new ObjectParameter("nompiece", nompiece) :
                new ObjectParameter("nompiece", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterPieceJointe", messageParameter, pieceserialiseeParameter, taillepieceParameter, nompieceParameter);
        }
    
        public virtual int AjouterPublication(string titre, string description, Nullable<int> secteur, Nullable<int> sujet, string nomfichieroriginal, string nomfichierserveur, string mimetype, Nullable<int> idpublicateur, ObjectParameter idpub)
        {
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            var sujetParameter = sujet.HasValue ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(int));
    
            var nomfichieroriginalParameter = nomfichieroriginal != null ?
                new ObjectParameter("nomfichieroriginal", nomfichieroriginal) :
                new ObjectParameter("nomfichieroriginal", typeof(string));
    
            var nomfichierserveurParameter = nomfichierserveur != null ?
                new ObjectParameter("nomfichierserveur", nomfichierserveur) :
                new ObjectParameter("nomfichierserveur", typeof(string));
    
            var mimetypeParameter = mimetype != null ?
                new ObjectParameter("mimetype", mimetype) :
                new ObjectParameter("mimetype", typeof(string));
    
            var idpublicateurParameter = idpublicateur.HasValue ?
                new ObjectParameter("idpublicateur", idpublicateur) :
                new ObjectParameter("idpublicateur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterPublication", titreParameter, descriptionParameter, secteurParameter, sujetParameter, nomfichieroriginalParameter, nomfichierserveurParameter, mimetypeParameter, idpublicateurParameter, idpub);
        }
    
        public virtual int AjouterSectEcole(Nullable<int> idecole, Nullable<int> idsecteur)
        {
            var idecoleParameter = idecole.HasValue ?
                new ObjectParameter("idecole", idecole) :
                new ObjectParameter("idecole", typeof(int));
    
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterSectEcole", idecoleParameter, idsecteurParameter);
        }
    
        public virtual int AjouterSecteur(string nom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterSecteur", nomParameter);
        }
    
        public virtual int AjouterSectEven(Nullable<int> secteur, Nullable<int> even)
        {
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            var evenParameter = even.HasValue ?
                new ObjectParameter("even", even) :
                new ObjectParameter("even", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterSectEven", secteurParameter, evenParameter);
        }
    
        public virtual int AjouterSondage(string nom, string question, Nullable<System.DateTime> debut, Nullable<System.DateTime> fin, Nullable<int> createur, Nullable<int> secteur)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var debutParameter = debut.HasValue ?
                new ObjectParameter("debut", debut) :
                new ObjectParameter("debut", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var createurParameter = createur.HasValue ?
                new ObjectParameter("createur", createur) :
                new ObjectParameter("createur", typeof(int));
    
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterSondage", nomParameter, questionParameter, debutParameter, finParameter, createurParameter, secteurParameter);
        }
    
        public virtual int AjouterSujetPub(string sujet)
        {
            var sujetParameter = sujet != null ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterSujetPub", sujetParameter);
        }
    
        public virtual int AjouterUtilSecteur(Nullable<int> id, Nullable<int> secteur)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterUtilSecteur", idParameter, secteurParameter);
        }
    
        public virtual int AjouterVoteSondage(Nullable<int> util, Nullable<int> choix)
        {
            var utilParameter = util.HasValue ?
                new ObjectParameter("util", util) :
                new ObjectParameter("util", typeof(int));
    
            var choixParameter = choix.HasValue ?
                new ObjectParameter("choix", choix) :
                new ObjectParameter("choix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjouterVoteSondage", utilParameter, choixParameter);
        }
    
        public virtual int AugmenterNbrLectures(Nullable<int> idfildiscussion)
        {
            var idfildiscussionParameter = idfildiscussion.HasValue ?
                new ObjectParameter("idfildiscussion", idfildiscussion) :
                new ObjectParameter("idfildiscussion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AugmenterNbrLectures", idfildiscussionParameter);
        }
    
        public virtual ObjectResult<GetContenu_Result> GetContenu(string nomPage)
        {
            var nomPageParameter = nomPage != null ?
                new ObjectParameter("nomPage", nomPage) :
                new ObjectParameter("nomPage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContenu_Result>("GetContenu", nomPageParameter);
        }
    
        public virtual ObjectResult<string> GetDestinataires(Nullable<int> idMessage)
        {
            var idMessageParameter = idMessage.HasValue ?
                new ObjectParameter("idMessage", idMessage) :
                new ObjectParameter("idMessage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDestinataires", idMessageParameter);
        }
    
        public virtual ObjectResult<GetEven_Result> GetEven(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEven_Result>("GetEven", idParameter);
        }
    
        public virtual ObjectResult<GetEvents_Result> GetEvents(Nullable<int> secteur)
        {
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEvents_Result>("GetEvents", secteurParameter);
        }
    
        public virtual ObjectResult<GetFilDiscussion_Result> GetFilDiscussion(Nullable<int> idforum)
        {
            var idforumParameter = idforum.HasValue ?
                new ObjectParameter("idforum", idforum) :
                new ObjectParameter("idforum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilDiscussion_Result>("GetFilDiscussion", idforumParameter);
        }
    
        public virtual ObjectResult<GetForum_Result> GetForum(Nullable<int> secteur)
        {
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetForum_Result>("GetForum", secteurParameter);
        }
    
        public virtual ObjectResult<GetMessage_Result> GetMessage(Nullable<int> idMessage)
        {
            var idMessageParameter = idMessage.HasValue ?
                new ObjectParameter("idMessage", idMessage) :
                new ObjectParameter("idMessage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessage_Result>("GetMessage", idMessageParameter);
        }
    
        public virtual ObjectResult<GetMessagesEnvoyes_Result> GetMessagesEnvoyes(Nullable<int> idUtil)
        {
            var idUtilParameter = idUtil.HasValue ?
                new ObjectParameter("idUtil", idUtil) :
                new ObjectParameter("idUtil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagesEnvoyes_Result>("GetMessagesEnvoyes", idUtilParameter);
        }
    
        public virtual ObjectResult<GetMessagesForum_Result> GetMessagesForum(Nullable<int> idfil)
        {
            var idfilParameter = idfil.HasValue ?
                new ObjectParameter("idfil", idfil) :
                new ObjectParameter("idfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagesForum_Result>("GetMessagesForum", idfilParameter);
        }
    
        public virtual ObjectResult<GetMessagesPrives_Result> GetMessagesPrives(Nullable<int> idUtil)
        {
            var idUtilParameter = idUtil.HasValue ?
                new ObjectParameter("idUtil", idUtil) :
                new ObjectParameter("idUtil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagesPrives_Result>("GetMessagesPrives", idUtilParameter);
        }
    
        public virtual ObjectResult<GetMessagesSupprimes_Result> GetMessagesSupprimes(Nullable<int> idUtil)
        {
            var idUtilParameter = idUtil.HasValue ?
                new ObjectParameter("idUtil", idUtil) :
                new ObjectParameter("idUtil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagesSupprimes_Result>("GetMessagesSupprimes", idUtilParameter);
        }
    
        public virtual ObjectResult<GetNouvelle_Result> GetNouvelle(Nullable<int> idNouvelle)
        {
            var idNouvelleParameter = idNouvelle.HasValue ?
                new ObjectParameter("idNouvelle", idNouvelle) :
                new ObjectParameter("idNouvelle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNouvelle_Result>("GetNouvelle", idNouvelleParameter);
        }
    
        public virtual ObjectResult<GetNouvelles_Result> GetNouvelles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNouvelles_Result>("GetNouvelles");
        }
    
        public virtual ObjectResult<PARTENAIRE> GetPartenaire(Nullable<int> idpar)
        {
            var idparParameter = idpar.HasValue ?
                new ObjectParameter("idpar", idpar) :
                new ObjectParameter("idpar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PARTENAIRE>("GetPartenaire", idparParameter);
        }
    
        public virtual ObjectResult<PARTENAIRE> GetPartenaire(Nullable<int> idpar, MergeOption mergeOption)
        {
            var idparParameter = idpar.HasValue ?
                new ObjectParameter("idpar", idpar) :
                new ObjectParameter("idpar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PARTENAIRE>("GetPartenaire", mergeOption, idparParameter);
        }
    
        public virtual ObjectResult<GetPartenaires_Result> GetPartenaires()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartenaires_Result>("GetPartenaires");
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParMotCle(Nullable<int> idsecteur, string motcle)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            var motcleParameter = motcle != null ?
                new ObjectParameter("motcle", motcle) :
                new ObjectParameter("motcle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParMotCle", idsecteurParameter, motcleParameter);
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParMotCle(Nullable<int> idsecteur, string motcle, MergeOption mergeOption)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            var motcleParameter = motcle != null ?
                new ObjectParameter("motcle", motcle) :
                new ObjectParameter("motcle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParMotCle", mergeOption, idsecteurParameter, motcleParameter);
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParSecteur(Nullable<int> idsecteur)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParSecteur", idsecteurParameter);
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParSecteur(Nullable<int> idsecteur, MergeOption mergeOption)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParSecteur", mergeOption, idsecteurParameter);
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParSujet(Nullable<int> idsecteur, Nullable<int> idsujet)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            var idsujetParameter = idsujet.HasValue ?
                new ObjectParameter("idsujet", idsujet) :
                new ObjectParameter("idsujet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParSujet", idsecteurParameter, idsujetParameter);
        }
    
        public virtual ObjectResult<PUBLICATION> GetPubParSujet(Nullable<int> idsecteur, Nullable<int> idsujet, MergeOption mergeOption)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            var idsujetParameter = idsujet.HasValue ?
                new ObjectParameter("idsujet", idsujet) :
                new ObjectParameter("idsujet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PUBLICATION>("GetPubParSujet", mergeOption, idsecteurParameter, idsujetParameter);
        }
    
        public virtual ObjectResult<GetRechercheNouvelle_Result> GetRechercheNouvelle(string rech)
        {
            var rechParameter = rech != null ?
                new ObjectParameter("rech", rech) :
                new ObjectParameter("rech", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRechercheNouvelle_Result>("GetRechercheNouvelle", rechParameter);
        }
    
        public virtual ObjectResult<GetResultatsSondage_Result> GetResultatsSondage(Nullable<int> idsondage)
        {
            var idsondageParameter = idsondage.HasValue ?
                new ObjectParameter("idsondage", idsondage) :
                new ObjectParameter("idsondage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetResultatsSondage_Result>("GetResultatsSondage", idsondageParameter);
        }
    
        public virtual ObjectResult<GetSecteurs_Result> GetSecteurs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSecteurs_Result>("GetSecteurs");
        }
    
        public virtual ObjectResult<GetSondage_Result> GetSondage(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSondage_Result>("GetSondage", idParameter);
        }
    
        public virtual ObjectResult<GetSondages_Result> GetSondages(Nullable<int> idsecteur)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSondages_Result>("GetSondages", idsecteurParameter);
        }
    
        public virtual ObjectResult<getUtil_Result> getUtil(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUtil_Result>("getUtil", usernameParameter);
        }
    
        public virtual ObjectResult<GetUtilParSecteur_Result> GetUtilParSecteur(Nullable<int> idsecteur)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUtilParSecteur_Result>("GetUtilParSecteur", idsecteurParameter);
        }
    
        public virtual ObjectResult<GetUtilProfil_Result> GetUtilProfil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUtilProfil_Result>("GetUtilProfil", idParameter);
        }
    
        public virtual ObjectResult<GetUtils_Result> GetUtils()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUtils_Result>("GetUtils");
        }
    
        public virtual int LireMessage(Nullable<int> idMessage, Nullable<int> idUtil)
        {
            var idMessageParameter = idMessage.HasValue ?
                new ObjectParameter("idMessage", idMessage) :
                new ObjectParameter("idMessage", typeof(int));
    
            var idUtilParameter = idUtil.HasValue ?
                new ObjectParameter("idUtil", idUtil) :
                new ObjectParameter("idUtil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LireMessage", idMessageParameter, idUtilParameter);
        }
    
        public virtual int MessagePriveCorbeille(Nullable<int> idmess)
        {
            var idmessParameter = idmess.HasValue ?
                new ObjectParameter("idmess", idmess) :
                new ObjectParameter("idmess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessagePriveCorbeille", idmessParameter);
        }
    
        public virtual int MessagePriveSuppDef(Nullable<int> idmess)
        {
            var idmessParameter = idmess.HasValue ?
                new ObjectParameter("idmess", idmess) :
                new ObjectParameter("idmess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MessagePriveSuppDef", idmessParameter);
        }
    
        public virtual int ModiferEven(Nullable<int> ideven, string nomeven, Nullable<System.DateTime> dateeven, Nullable<System.TimeSpan> debut, Nullable<System.TimeSpan> fin, Nullable<int> categorie)
        {
            var idevenParameter = ideven.HasValue ?
                new ObjectParameter("ideven", ideven) :
                new ObjectParameter("ideven", typeof(int));
    
            var nomevenParameter = nomeven != null ?
                new ObjectParameter("nomeven", nomeven) :
                new ObjectParameter("nomeven", typeof(string));
    
            var dateevenParameter = dateeven.HasValue ?
                new ObjectParameter("dateeven", dateeven) :
                new ObjectParameter("dateeven", typeof(System.DateTime));
    
            var debutParameter = debut.HasValue ?
                new ObjectParameter("debut", debut) :
                new ObjectParameter("debut", typeof(System.TimeSpan));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.TimeSpan));
    
            var categorieParameter = categorie.HasValue ?
                new ObjectParameter("categorie", categorie) :
                new ObjectParameter("categorie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModiferEven", idevenParameter, nomevenParameter, dateevenParameter, debutParameter, finParameter, categorieParameter);
        }
    
        public virtual int ModifierChoixSondage(Nullable<int> id, string valeur)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var valeurParameter = valeur != null ?
                new ObjectParameter("valeur", valeur) :
                new ObjectParameter("valeur", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierChoixSondage", idParameter, valeurParameter);
        }
    
        public virtual int ModifierContenu(string nomPage, string titre, string titre_trad, string cont, string cont_trad, string urlImage)
        {
            var nomPageParameter = nomPage != null ?
                new ObjectParameter("nomPage", nomPage) :
                new ObjectParameter("nomPage", typeof(string));
    
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var titre_tradParameter = titre_trad != null ?
                new ObjectParameter("titre_trad", titre_trad) :
                new ObjectParameter("titre_trad", typeof(string));
    
            var contParameter = cont != null ?
                new ObjectParameter("cont", cont) :
                new ObjectParameter("cont", typeof(string));
    
            var cont_tradParameter = cont_trad != null ?
                new ObjectParameter("cont_trad", cont_trad) :
                new ObjectParameter("cont_trad", typeof(string));
    
            var urlImageParameter = urlImage != null ?
                new ObjectParameter("urlImage", urlImage) :
                new ObjectParameter("urlImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierContenu", nomPageParameter, titreParameter, titre_tradParameter, contParameter, cont_tradParameter, urlImageParameter);
        }
    
        public virtual int ModifierEcole(Nullable<int> id, string nom, string adresse, string ville)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierEcole", idParameter, nomParameter, adresseParameter, villeParameter);
        }
    
        public virtual int ModifierMessageForum(Nullable<int> id, string contenu)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var contenuParameter = contenu != null ?
                new ObjectParameter("contenu", contenu) :
                new ObjectParameter("contenu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierMessageForum", idParameter, contenuParameter);
        }
    
        public virtual int ModifierNouvelle(Nullable<int> id, string titre, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierNouvelle", idParameter, titreParameter, descriptionParameter);
        }
    
        public virtual int ModifierPartenaire(Nullable<int> id, string nom, string raisonsociale, string adr, string ville, string pays, string tel, string siteweb, string courriel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var raisonsocialeParameter = raisonsociale != null ?
                new ObjectParameter("raisonsociale", raisonsociale) :
                new ObjectParameter("raisonsociale", typeof(string));
    
            var adrParameter = adr != null ?
                new ObjectParameter("adr", adr) :
                new ObjectParameter("adr", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var sitewebParameter = siteweb != null ?
                new ObjectParameter("siteweb", siteweb) :
                new ObjectParameter("siteweb", typeof(string));
    
            var courrielParameter = courriel != null ?
                new ObjectParameter("courriel", courriel) :
                new ObjectParameter("courriel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierPartenaire", idParameter, nomParameter, raisonsocialeParameter, adrParameter, villeParameter, paysParameter, telParameter, sitewebParameter, courrielParameter);
        }
    
        public virtual int ModifierPublication(Nullable<int> id, string titre, Nullable<int> sujet)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titreParameter = titre != null ?
                new ObjectParameter("titre", titre) :
                new ObjectParameter("titre", typeof(string));
    
            var sujetParameter = sujet.HasValue ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierPublication", idParameter, titreParameter, sujetParameter);
        }
    
        public virtual int ModifierSondage(Nullable<int> id, string nom, string question, Nullable<System.DateTime> debut, Nullable<System.DateTime> fin, Nullable<int> secteur)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var debutParameter = debut.HasValue ?
                new ObjectParameter("debut", debut) :
                new ObjectParameter("debut", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierSondage", idParameter, nomParameter, questionParameter, debutParameter, finParameter, secteurParameter);
        }
    
        public virtual int ModifierSujetFilDiscussion(Nullable<int> id, string sujet)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sujetParameter = sujet != null ?
                new ObjectParameter("sujet", sujet) :
                new ObjectParameter("sujet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierSujetFilDiscussion", idParameter, sujetParameter);
        }
    
        public virtual int ModifierUtilEcole(Nullable<int> id, Nullable<int> ecole)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var ecoleParameter = ecole.HasValue ?
                new ObjectParameter("ecole", ecole) :
                new ObjectParameter("ecole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierUtilEcole", idParameter, ecoleParameter);
        }
    
        public virtual int ModifierUtilProfil(Nullable<int> id, string courriel, string nom, string prenom, string adresse, string ville, string langue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var courrielParameter = courriel != null ?
                new ObjectParameter("courriel", courriel) :
                new ObjectParameter("courriel", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var langueParameter = langue != null ?
                new ObjectParameter("langue", langue) :
                new ObjectParameter("langue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifierUtilProfil", idParameter, courrielParameter, nomParameter, prenomParameter, adresseParameter, villeParameter, langueParameter);
        }
    
        public virtual int ReinitMotPasse(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReinitMotPasse", idParameter);
        }
    
        public virtual int SupprimerChoixSondage(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerChoixSondage", idParameter);
        }
    
        public virtual int SupprimerEcole(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerEcole", idParameter);
        }
    
        public virtual int SupprimerEven(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerEven", idParameter);
        }
    
        public virtual int SupprimerFilDiscussion(Nullable<int> idfil)
        {
            var idfilParameter = idfil.HasValue ?
                new ObjectParameter("idfil", idfil) :
                new ObjectParameter("idfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerFilDiscussion", idfilParameter);
        }
    
        public virtual int SupprimerMessageForum(Nullable<int> idmess)
        {
            var idmessParameter = idmess.HasValue ?
                new ObjectParameter("idmess", idmess) :
                new ObjectParameter("idmess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerMessageForum", idmessParameter);
        }
    
        public virtual int SupprimerMotClePub(Nullable<int> idpub, Nullable<int> idmotcle)
        {
            var idpubParameter = idpub.HasValue ?
                new ObjectParameter("idpub", idpub) :
                new ObjectParameter("idpub", typeof(int));
    
            var idmotcleParameter = idmotcle.HasValue ?
                new ObjectParameter("idmotcle", idmotcle) :
                new ObjectParameter("idmotcle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerMotClePub", idpubParameter, idmotcleParameter);
        }
    
        public virtual int SupprimerNouvelle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerNouvelle", idParameter);
        }
    
        public virtual int SupprimerPartenaire(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerPartenaire", idParameter);
        }
    
        public virtual int SupprimerPublication(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerPublication", idParameter);
        }
    
        public virtual int SupprimerSectEcole(Nullable<int> idecole, Nullable<int> idsecteur)
        {
            var idecoleParameter = idecole.HasValue ?
                new ObjectParameter("idecole", idecole) :
                new ObjectParameter("idecole", typeof(int));
    
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerSectEcole", idecoleParameter, idsecteurParameter);
        }
    
        public virtual int SupprimerSecteur(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerSecteur", idParameter);
        }
    
        public virtual int SupprimerSectEven(Nullable<int> secteur)
        {
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerSectEven", secteurParameter);
        }
    
        public virtual int SupprimerSondage(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerSondage", idParameter);
        }
    
        public virtual int SupprimerUtilisateur(string nomutil, Nullable<bool> permanent)
        {
            var nomutilParameter = nomutil != null ?
                new ObjectParameter("nomutil", nomutil) :
                new ObjectParameter("nomutil", typeof(string));
    
            var permanentParameter = permanent.HasValue ?
                new ObjectParameter("permanent", permanent) :
                new ObjectParameter("permanent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerUtilisateur", nomutilParameter, permanentParameter);
        }
    
        public virtual int SupprimerUtilSect(Nullable<int> id, Nullable<int> secteur)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var secteurParameter = secteur.HasValue ?
                new ObjectParameter("secteur", secteur) :
                new ObjectParameter("secteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SupprimerUtilSect", idParameter, secteurParameter);
        }
    
        public virtual ObjectResult<GetSujetsPublication_Result> GetSujetsPublication()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSujetsPublication_Result>("GetSujetsPublication");
        }
    }
}
