@using projet_mozambique.Utilitaires
@using projet_mozambique.Models
@{
    ViewBag.Title = Resources.Public.nouvelles;
    
    var lesNouvelles = (ViewData[Constantes.CLE_NOUVELLES] as ListePaginee<NOUVELLE>);
    
    <h1>@Resources.Public.nouvelles</h1>
    <div>
    <form action="getResultats" method="get">
        <input type="hidden" name="type" value="@Constantes.RECH_NOUVELLES" />
        <input type="text" name="recherche" maxlength="100" style="width:300px;"/>
        <input type="submit" value="@Resources.Shared.rechercher" class="btnForm" style="margin-left:10px;"/>
    </form>
    </div>
    
    <ul class="nav-pagination">
        @if (lesNouvelles.ShowFirstPage)
        {
            <li>@Html.ActionLink("<<", "Nouvelles", new { page = 0 })</li>
            <li>@Html.ActionLink("<", "Nouvelles", new { page = lesNouvelles.PageIndex - 1 })</li>         
        }
        else if (lesNouvelles.HasPreviousPage)
        {
            <li>@Html.ActionLink("<", "Nouvelles", new { page = lesNouvelles.PageIndex - 1 })</li>
        }
    
        @if (lesNouvelles.ShowLastPage)
        {
            <li>@Html.ActionLink(">", "Nouvelles", new { page = lesNouvelles.PageIndex + 1 })</li>
            <li>@Html.ActionLink(">>", "Nouvelles", new { page = lesNouvelles.TotalPages - 1 })</li>            
        }
        else if (lesNouvelles.HasNextPage)
        {
            <li>@Html.ActionLink(">", "Nouvelles", new { page = lesNouvelles.PageIndex + 1 })</li>
        }
    </ul>
    <div class="nouvelles">
    @for (var i = 0; i<lesNouvelles.Count; i++)
    {
        var longMax = Math.Min(lesNouvelles[i].DESCRIPTION.ToString().Length, 300);
        
        <div class="article">
            <p class="titre">@lesNouvelles[i].TITRE</p>
            <p class="datepubli">
               @Resources.Shared.publieLe @Dates.JourMoisAnnee(lesNouvelles[i].DATEPUBLICATION, Session)
            </p>

            @if (longMax < 300) {
                <p>@Html.Raw(lesNouvelles[i].DESCRIPTION.Replace("<p>", "").Replace("</p>", "").Substring(0, longMax))</p>                
            }
            else {
                <p>@Html.Raw(lesNouvelles[i].DESCRIPTION.Replace("<p>", "").Replace("</p>", "").Substring(0, longMax))...</p>
                <p>
                    @Html.ActionLink(Resources.Shared.lirePlus, 
                                     "getNouvelle",
                                     "Public",
                                     new { id = lesNouvelles[i].ID },
                                     new { @class = "gras" })   
                </p>
            }
        </div>
    }    
        </div>
    
    <ul class="nav-pagination">
        @if (lesNouvelles.ShowFirstPage)
        {
            <li>@Html.ActionLink("<<", "Nouvelles", new { page = 0 })</li>
            <li>@Html.ActionLink("<", "Nouvelles", new { page = lesNouvelles.PageIndex - 1 })</li>         
        }
        else if (lesNouvelles.HasPreviousPage)
        {
            <li>@Html.ActionLink("<", "Nouvelles", new { page = lesNouvelles.PageIndex - 1 })</li>
        }
    
        @if (lesNouvelles.ShowLastPage)
        {
            <li>@Html.ActionLink(">", "Nouvelles", new { page = lesNouvelles.PageIndex + 1 })</li>
            <li>@Html.ActionLink(">>", "Nouvelles", new { page = lesNouvelles.TotalPages - 1 })</li>            
        }
        else if (lesNouvelles.HasNextPage)
        {
            <li>@Html.ActionLink(">", "Nouvelles", new { page = lesNouvelles.PageIndex + 1 })</li>
        }
    </ul>

}
